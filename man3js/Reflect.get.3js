.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Reflect.get" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
Reflect.get - Reflect.get()
.SH SYNOPSIS
.PP
The \f[B]\f[VB]Reflect.get()\f[B]\f[R] static method is like the
property accessor syntax, but as a function.
.SH SYNTAX
.IP
.nf
\f[C]
Reflect.get(target, propertyKey)
Reflect.get(target, propertyKey, receiver)
\f[R]
.fi
.SS Parameters
.TP
\f[B]target\f[R]
The target object on which to get the property.
.TP
\f[B]propertyKey\f[R]
The name of the property to get.
.TP
\f[B]receiver\f[R] \f[I](optional)\f[R]
The value of \f[V]this\f[R] provided for the call to \f[V]target\f[R] if
a getter is encountered.
.SS Return value
.PP
The value of the property.
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if \f[V]target\f[R] is not an object.
.SH DESCRIPTION
.PP
\f[V]Reflect.get()\f[R] provides the reflective semantic of a property
access.
That is, \f[V]Reflect.get(target, propertyKey, receiver)\f[R] is
semantically equivalent to:
.IP
.nf
\f[C]
target[propertyKey];
\f[R]
.fi
.PP
Note that in a normal property access, \f[V]target\f[R] and
\f[V]receiver\f[R] would observably be the same object.
.PP
\f[V]Reflect.get()\f[R] invokes the \f[V][[Get]]\f[R] object internal
method of \f[V]target\f[R].
.SH EXAMPLES
.SS Using Reflect.get()
.IP
.nf
\f[C]
// Object
const obj1 = { x: 1, y: 2 };
Reflect.get(obj1, \[dq]x\[dq]); // 1

// Array
Reflect.get([\[dq]zero\[dq], \[dq]one\[dq]], 1); // \[dq]one\[dq]

// Proxy with a get handler
const obj2 = new Proxy(
  { p: 1 },
  {
    get(t, k, r) {
      return k + \[dq]bar\[dq];
    },
  },
);
Reflect.get(obj2, \[dq]foo\[dq]); // \[dq]foobar\[dq]

// Proxy with get handler and receiver
const obj3 = new Proxy(
  { p: 1, foo: 2 },
  {
    get(t, prop, receiver) {
      return receiver[prop] + \[dq]bar\[dq];
    },
  },
);
Reflect.get(obj3, \[dq]foo\[dq], { foo: 3 }); // \[dq]3bar\[dq]
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[V]Reflect.get\f[R] in
\f[V]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-reflect)
.IP \[bu] 2
\f[V]Reflect\f[R]
.IP \[bu] 2
Property accessors
.IP \[bu] 2
\f[V]Proxy\f[R]\[cq]s \f[V]get\f[R] handler
