.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Date.setMonth" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
Date.setMonth - Date.prototype.setMonth()
.SH SYNOPSIS
.PP
The \f[B]\f[VB]setMonth()\f[B]\f[R] method of \f[V]Date\f[R] instances
changes the month and/or day of the month for this date according to
local time.
.SH SYNTAX
.IP
.nf
\f[C]
setMonth(monthValue)
setMonth(monthValue, dateValue)
\f[R]
.fi
.SS Parameters
.TP
\f[B]monthValue\f[R]
An integer representing the month: 0 for January, 1 for February, and so
on.
.TP
\f[B]dateValue\f[R] \f[I](optional)\f[R]
An integer from 1 to 31 representing the day of the month.
.SS Return value
.PP
Changes the \f[V]Date\f[R] object in place, and returns its new
timestamp.
If a parameter is \f[V]NaN\f[R] (or other values that get coerced to
\f[V]NaN\f[R], such as \f[V]undefined\f[R]), the date is set to Invalid
Date and \f[V]NaN\f[R] is returned.
.SH DESCRIPTION
.PP
If you do not specify the \f[V]dateValue\f[R] parameter, the same value
as what is returned by \f[V]getDate()\f[R] is used.
.PP
If a parameter you specify is outside of the expected range, other
parameters and the date information in the \f[V]Date\f[R] object are
updated accordingly.
For example, if you specify 15 for \f[V]monthValue\f[R], the year is
incremented by 1, and 3 is used for month.
.PP
The current day of month will have an impact on the behavior of this
method.
Conceptually it will add the number of days given by the current day of
the month to the 1st day of the new month specified as the parameter, to
return the new date.
For example, if the current value is 31st January 2016, calling setMonth
with a value of 1 will return 2nd March 2016.
This is because in 2016 February had 29 days.
.SH EXAMPLES
.SS Using setMonth()
.IP
.nf
\f[C]
const theBigDay = new Date();
theBigDay.setMonth(6);

//Watch out for end of month transitions
const endOfMonth = new Date(2016, 7, 31);
endOfMonth.setMonth(1);
console.log(endOfMonth); //Wed Mar 02 2016 00:00:00
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
\f[V]Date.prototype.getMonth()\f[R]
.IP \[bu] 2
\f[V]Date.prototype.setUTCMonth()\f[R]
