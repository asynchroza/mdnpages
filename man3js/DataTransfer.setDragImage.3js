.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "DataTransfer.setDragImage" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DataTransfer.setDragImage \- DataTransfer: setDragImage() method
.SH SYNOPSIS
When a drag occurs, a translucent image is generated from the drag
target (the element the \f[CR]dragstart\f[R] event is fired at), and
follows the mouse pointer during the drag.
This image is created automatically, so you do not need to create it
yourself.
However, if a custom image is desired, the
\f[B]\f[CB]DataTransfer.setDragImage()\f[B]\f[R] method can be used to
set the custom image to be used.
The image will typically be an \f[CR]<img>\f[R] element but it can also
be a \f[CR]<canvas>\f[R] or any other visible element.
.PP
The method\[cq]s \f[CR]x\f[R] and \f[CR]y\f[R] coordinates define how
the image should appear relative to the mouse pointer.
These coordinates define the offset into the image where the mouse
cursor should be.
For instance, to display the image so that the pointer is at its center,
use values that are half the width and height of the image.
.PP
This method must be called in the \f[CR]dragstart\f[R] event handler.
.SH SYNTAX
.IP
.EX
setDragImage(imgElement, xOffset, yOffset)
.EE
.SS Parameters
.TP
\f[B]imgElement\f[R]
An image \f[CR]Element\f[R] element to use for the drag feedback image.
.RS
.PP
If \f[CR]Element\f[R] is an img element, then set the drag data store
bitmap to the element\[cq]s image (at its intrinsic size); otherwise,
set the drag data store bitmap to an image generated from the given
element (the exact mechanism for doing so is not currently specified).
.PP
Note: If the \f[CR]Element\f[R] is an existing \f[CR]HTMLElement\f[R] it
needs to be visible in the viewport in order to be shown as a drag
feedback image.
Alternatively, you can create a new DOM element that might be
off\-screen specifically for this purpose.
.RE
.TP
\f[B]xOffset\f[R]
A \f[CR]long\f[R] indicating the horizontal offset within the image.
.TP
\f[B]yOffset\f[R]
A \f[CR]long\f[R] indicating the vertical offset within the image.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
This example shows how to use the \f[CR]setDragImage()\f[R] method.
Note the example refers to an image file named \f[CR]example.gif\f[R].
If that file is present, it will be used as the drag image and if that
file is not present, the browser will use its default drag image.
.PP
\c
.UR https://codepen.io/webgeeker/full/KBzrxE/
demo
.UE \c
.IP
.EX
<!doctype html>
<html lang=\[dq]en\[dq]>
  <head>
    <title>Example of DataTransfer.setDragImage()</title>
    <meta name=\[dq]viewport\[dq] content=\[dq]width=device\-width\[dq] />
    <style>
      div {
        margin: 0em;
        padding: 2em;
      }
      #source {
        color: blue;
        border: 1px solid black;
      }
      #target {
        border: 1px solid black;
      }
    </style>
    <script>
      function dragStartHandler(ev) {
        console.log(\[dq]dragStart\[dq]);
        // Set the drag\[aq]s format and data. Use the event target\[aq]s id for the data
        ev.dataTransfer.setData(\[dq]text/plain\[dq], ev.target.id);
        // Create an image and use it for the drag image
        // NOTE: change \[dq]example.gif\[dq] to an existing image or the image will not
        // be created and the default drag image will be used.
        const img = new Image();
        img.src = \[dq]example.gif\[dq];
        ev.dataTransfer.setDragImage(img, 10, 10);
      }

      function dragOverHandler(ev) {
        console.log(\[dq]dragOver\[dq]);
        ev.preventDefault();
      }

      function dropHandler(ev) {
        console.log(\[dq]Drop\[dq]);
        ev.preventDefault();
        // Get the data, which is the id of the drop target
        const data = ev.dataTransfer.getData(\[dq]text\[dq]);
        ev.target.appendChild(document.getElementById(data));
      }
    </script>
  </head>
  <body>
    <h1>Example of <code>DataTransfer.setDragImage()</code></h1>
    <div>
      <p id=\[dq]source\[dq] ondragstart=\[dq]dragStartHandler(event);\[dq] draggable=\[dq]true\[dq]>
        Select this element, drag it to the Drop Zone and then release the
        selection to move the element.
      </p>
    </div>
    <div
      id=\[dq]target\[dq]
      ondrop=\[dq]dropHandler(event);\[dq]
      ondragover=\[dq]dragOverHandler(event);\[dq]>
      Drop Zone
    </div>
  </body>
</html>
.EE
.SH SEE ALSO
.IP \[bu] 2
Drag and drop
.IP \[bu] 2
Drag Operations
.IP \[bu] 2
Recommended Drag Types
.IP \[bu] 2
\c
.UR https://codepen.io/tech_query/pen/MqGgap
DataTransfer test \- Paste or Drag
.UE \c
