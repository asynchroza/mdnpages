.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "FileSystemWritableFileStream" "JS" "December 10, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
FileSystemWritableFileStream \- FileSystemWritableFileStream
.SH SYNOPSIS
\f[B]Secure context\f[R]: This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]FileSystemWritableFileStream\f[B]\f[R] interface of the
File System API is a \f[CR]WritableStream\f[R] object with additional
convenience methods, which operates on a single file on disk.
The interface is accessed through the
\f[CR]FileSystemFileHandle.createWritable()\f[R] method.
.SH INSTANCE PROPERTIES
\f[I]Inherits properties from its parent,
\f[CI]WritableStream\f[I].\f[R]
.SH INSTANCE METHODS
\f[I]Inherits methods from its parent, \f[CI]WritableStream\f[I].\f[R]
.TP
\f[B]FileSystemWritableFileStream.write()\f[R]
Writes content into the file the method is called on, at the current
file cursor offset.
.TP
\f[B]FileSystemWritableFileStream.seek()\f[R]
Updates the current file cursor offset to the position (in bytes)
specified.
.TP
\f[B]FileSystemWritableFileStream.truncate()\f[R]
Resizes the file associated with the stream to be the specified size in
bytes.
.SH EXAMPLES
The following asynchronous function opens the `Save File' picker, which
returns a \f[CR]FileSystemFileHandle\f[R] once a file is selected.
From this, a writable stream is created using the
\f[CR]FileSystemFileHandle.createWritable()\f[R] method.
.PP
A text string is then written to the stream, which is subsequently
closed.
.IP
.EX
async function saveFile() {
  // create a new handle
  const newHandle = await window.showSaveFilePicker();

  // create a FileSystemWritableFileStream to write to
  const writableStream = await newHandle.createWritable();

  // write our file
  await writableStream.write(\[dq]This is my file content\[dq]);

  // close the file and write the contents to disk.
  await writableStream.close();
}
.EE
.PP
The following examples show different options that can be passed into
the \f[CR]write()\f[R] method.
.IP
.EX
// just pass in the data (no options)
writableStream.write(data);

// writes the data to the stream from the determined position
writableStream.write({ type: \[dq]write\[dq], position, data });

// updates the current file cursor offset to the position specified
writableStream.write({ type: \[dq]seek\[dq], position });

// resizes the file to be size bytes long
writableStream.write({ type: \[dq]truncate\[dq], size });
.EE
.SH SEE ALSO
.IP \[bu] 2
File System API
.IP \[bu] 2
\c
.UR
https://developer.chrome.com/docs/capabilities/web-apis/file-system-access
The File System Access API: simplifying access to local files
.UE \c
