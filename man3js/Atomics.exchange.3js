.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Atomics.exchange" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
Atomics.exchange - Atomics.exchange()
.SH SYNOPSIS
.PP
The \f[B]\f[VB]Atomics.exchange()\f[B]\f[R] static method stores a given
value at a given position in the array and returns the old value at that
position.
This atomic operation guarantees that no other write happens between the
read of the old value and the write of the new value.
.SH SYNTAX
.IP
.nf
\f[C]
Atomics.exchange(typedArray, index, value)
\f[R]
.fi
.SS Parameters
.TP
\f[B]typedArray\f[R]
An integer typed array.
One of \f[V]Int8Array\f[R], \f[V]Uint8Array\f[R], \f[V]Int16Array\f[R],
\f[V]Uint16Array\f[R], \f[V]Int32Array\f[R], \f[V]Uint32Array\f[R],
\f[V]BigInt64Array\f[R], or \f[V]BigUint64Array\f[R].
.TP
\f[B]index\f[R]
The position in the \f[V]typedArray\f[R] to exchange a \f[V]value\f[R].
.TP
\f[B]value\f[R]
The number to exchange.
.SS Return value
.PP
The old value at the given position (\f[V]typedArray[index]\f[R]).
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if \f[V]typedArray\f[R] is not one of the allowed integer types.
.TP
\f[B]RangeError\f[R]
Thrown if \f[V]index\f[R] is out of bounds in the \f[V]typedArray\f[R].
.SH EXAMPLES
.SS Using exchange()
.IP
.nf
\f[C]
const sab = new SharedArrayBuffer(1024);
const ta = new Uint8Array(sab);

Atomics.exchange(ta, 0, 12); // returns 0, the old value
Atomics.load(ta, 0); // 12
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
\f[V]Atomics\f[R]
.IP \[bu] 2
\f[V]Atomics.compareExchange()\f[R]
