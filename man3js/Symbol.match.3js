'\" t
.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Symbol.match" "JS" "2023-06-02" "JavaScript" "JavaScript Reference Manual"
.hy
.SH Synopsis
.PP
The \f[B]\f[VB]Symbol.match\f[B]\f[R] static data property represents
the well-known symbol \f[V]\[at]\[at]match\f[R].
The \f[V]String.prototype.match()\f[R] method looks up this symbol on
its first argument for the method used to match an input string against
the current object.
This symbol is also used to determine if an object should be treated as
a regex.
.PP
For more information, see \f[V]RegExp.prototype[\[at]\[at]match]()\f[R]
and \f[V]String.prototype.match()\f[R].
.SH Value
.PP
The well-known symbol \f[V]\[at]\[at]match\f[R].
.PP
.TS
tab(@);
l l.
T{
Writable
T}@T{
no
T}
T{
Enumerable
T}@T{
no
T}
T{
Configurable
T}@T{
no
T}
.TE
.SH Description
.PP
This function is also used to identify if objects have the behavior of
regular expressions.
For example, the methods \f[V]String.prototype.startsWith()\f[R],
\f[V]String.prototype.endsWith()\f[R] and
\f[V]String.prototype.includes()\f[R], check if their first argument is
a regular expression and will throw a \f[V]TypeError\f[R] if they are.
Now, if the \f[V]match\f[R] symbol is set to \f[V]false\f[R] (or a Falsy
value except \f[V]undefined\f[R]), it indicates that the object is not
intended to be used as a regular expression object.
.SH Examples
.SS Marking a RegExp as not a regex
.PP
The following code will throw a \f[V]TypeError\f[R]:
.IP
.nf
\f[C]
\[dq]/bar/\[dq].startsWith(/bar/);

// Throws TypeError, as /bar/ is a regular expression
// and Symbol.match is not modified.
\f[R]
.fi
.PP
However, if you set \f[V]Symbol.match\f[R] to \f[V]false\f[R], the
object will be considered as not a regular expression object.
The methods \f[V]startsWith\f[R] and \f[V]endsWith\f[R] won\[cq]t throw
a \f[V]TypeError\f[R] as a consequence.
.IP
.nf
\f[C]
const re = /foo/;
re[Symbol.match] = false;
\[dq]/foo/\[dq].startsWith(re); // true
\[dq]/baz/\[dq].endsWith(re); // false
\f[R]
.fi
.SH See also
.IP \[bu] 2
Polyfill of \f[V]Symbol.match\f[R] in
\f[V]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-symbol)
.IP \[bu] 2
\f[V]Symbol.matchAll\f[R]
.IP \[bu] 2
\f[V]Symbol.replace\f[R]
.IP \[bu] 2
\f[V]Symbol.search\f[R]
.IP \[bu] 2
\f[V]Symbol.split\f[R]
.IP \[bu] 2
\f[V]String.prototype.match()\f[R]
.IP \[bu] 2
\f[V]RegExp.prototype[\[at]\[at]match]()\f[R]
