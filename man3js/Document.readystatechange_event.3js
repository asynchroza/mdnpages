.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Document.readystatechange_event" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Document.readystatechange_event \- Document: readystatechange event
.SH SYNOPSIS
The \f[B]\f[CB]readystatechange\f[B]\f[R] event is fired when the
\f[CR]readyState\f[R] attribute of a document has changed.
.PP
This event is not cancelable and does not bubble.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]readystatechange\[dq], (event) => {});

onreadystatechange = (event) => {};
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH EXAMPLES
.SS Live example
.SS HTML
.IP
.EX
<div class=\[dq]controls\[dq]>
  <button id=\[dq]reload\[dq] type=\[dq]button\[dq]>Reload</button>
</div>

<div class=\[dq]event\-log\[dq]>
  <label for=\[dq]eventLog\[dq]>Event log:</label>
  <textarea
    readonly
    class=\[dq]event\-log\-contents\[dq]
    rows=\[dq]8\[dq]
    cols=\[dq]30\[dq]
    id=\[dq]eventLog\[dq]></textarea>
</div>
.EE
.SS CSS
\[ga]\[ga]\[ga]css hidden body { display: grid; grid\-template\-areas:
\[lq]control log\[rq]; }
.PP
\&.controls { grid\-area: control; display: flex; align\-items: center;
justify\-content: center; }
.PP
\&.event\-log { grid\-area: log; }
.PP
\&.event\-log\-contents { resize: none; }
.PP
label, button { display: block; }
.PP
reload { height: 2rem; }
.IP
.EX

### JavaScript

\[ga]\[ga]\[ga]js
const log = document.querySelector(\[dq].event\-log\-contents\[dq]);
const reload = document.querySelector(\[dq]#reload\[dq]);

reload.addEventListener(\[dq]click\[dq], () => {
  log.textContent = \[dq]\[dq];
  setTimeout(() => {
    window.location.reload(true);
  }, 200);
});

window.addEventListener(\[dq]load\[dq], (event) => {
  log.textContent = \[ga]${log.textContent}load\[rs]n\[ga];
});

document.addEventListener(\[dq]readystatechange\[dq], (event) => {
  log.textContent = \[ga]${log.textContent}readystate: ${document.readyState}\[rs]n\[ga];
});

document.addEventListener(\[dq]DOMContentLoaded\[dq], (event) => {
  log.textContent = \[ga]${log.textContent}DOMContentLoaded\[rs]n\[ga];
});
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
Related events: \f[CR]DOMContentLoaded\f[R], \f[CR]load\f[R],
\f[CR]beforeunload\f[R], \f[CR]unload\f[R]
