.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "MessageChannel.port1" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MessageChannel.port1 \- MessageChannel: port1 property
.SH SYNOPSIS
The \f[B]\f[CB]port1\f[B]\f[R] read\-only property of the
\f[CR]MessageChannel\f[R] interface returns the first port of the
message channel \[em] the port attached to the context that originated
the channel.
.PP
This feature is available in Web Workers.
.SH VALUE
A \f[CR]MessagePort\f[R] object, the first port of the channel, that is
the port attached to the context that originated the channel.
.SH EXAMPLES
In the following code block, you can see a new channel being created
using the \f[CR]MessageChannel()\f[R] constructor.
When the \f[CR]<iframe>\f[R] has loaded, we pass
\f[CR]MessageChannel.port2\f[R] to the \f[CR]<iframe>\f[R] using
\f[CR]MessagePort.postMessage\f[R] along with a message.
The \f[CR]handleMessage\f[R] handler then responds to a message being
sent back from the \f[CR]<iframe>\f[R] (using \f[CR]onmessage\f[R]),
putting it into a paragraph.
The \f[CR]handleMessage\f[R] method is associated to the
\f[CR]port1\f[R] to listen when the message arrives.
.IP
.EX
const channel = new MessageChannel();
const para = document.querySelector(\[dq]p\[dq]);

const ifr = document.querySelector(\[dq]iframe\[dq]);
const otherWindow = ifr.contentWindow;

ifr.addEventListener(\[dq]load\[dq], iframeLoaded, false);

function iframeLoaded() {
  otherWindow.postMessage(\[dq]Hello from the main page!\[dq], \[dq]*\[dq], [channel.port2]);
}

channel.port1.onmessage = handleMessage;
function handleMessage(e) {
  para.innerHTML = e.data;
}
.EE
.SH SEE ALSO
.IP \[bu] 2
Using channel messaging
