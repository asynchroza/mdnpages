.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "RegExp.toString" "JS" "2023-06-02" "JavaScript" "JavaScript Reference Manual"
.hy
.SH Synopsis
.PP
The \f[B]\f[VB]toString()\f[B]\f[R] method returns a string representing
the regular expression.
.SH Syntax
.IP
.nf
\f[C]
toString()
\f[R]
.fi
.SS Return value
.PP
A string representing the given object.
.SH Description
.PP
The \f[V]RegExp\f[R] object overrides the \f[V]toString()\f[R] method of
the \f[V]Object\f[R] object; it does not inherit
\f[V]Object.prototype.toString()\f[R].
For \f[V]RegExp\f[R] objects, the \f[V]toString()\f[R] method returns a
string representation of the regular expression.
.PP
In practice, it reads the regex\[cq]s \f[V]source\f[R] and
\f[V]flags\f[R] properties and returns a string in the form
\f[V]/source/flags\f[R].
The \f[V]toString()\f[R] return value is guaranteed to be a parsable
regex literal, although it may not be the exact same text as what was
originally specified for the regex (for example, the flags may be
reordered).
.SH Examples
.SS Using toString()
.PP
The following example displays the string value of a \f[V]RegExp\f[R]
object:
.IP
.nf
\f[C]
const myExp = new RegExp(\[dq]a+b+c\[dq]);
console.log(myExp.toString()); // \[aq]/a+b+c/\[aq]

const foo = new RegExp(\[dq]bar\[dq], \[dq]g\[dq]);
console.log(foo.toString()); // \[aq]/bar/g\[aq]
\f[R]
.fi
.SS Empty regular expressions and escaping
.PP
Since \f[V]toString()\f[R] accesses the \f[V]source\f[R] property, an
empty regular expression returns the string \f[V]\[dq]/(?:)/\[dq]\f[R],
and line terminators such as \f[V]\[rs]n\f[R] are escaped.
This makes the returned value always a valid regex literal.
.IP
.nf
\f[C]
new RegExp().toString(); // \[dq]/(?:)/\[dq]

new RegExp(\[dq]\[rs]n\[dq]).toString() === \[dq]/\[rs]\[rs]n/\[dq]; // true
\f[R]
.fi
.SH See also
.IP \[bu] 2
\f[V]Object.prototype.toString()\f[R]
