.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Atomics.store" "JS" "2023-06-02" "JavaScript" "JavaScript Reference Manual"
.hy
.SH Synopsis
.PP
The \f[B]\f[VB]Atomics.store()\f[B]\f[R] static method stores a given
value at the given position in the array and returns that value.
.SH Syntax
.IP
.nf
\f[C]
Atomics.store(typedArray, index, value)
\f[R]
.fi
.SS Parameters
.IP \[bu] 2
\f[V]typedArray\f[R]
.RS 2
.IP \[bu] 2
An integer typed array.
One of \f[V]Int8Array\f[R], \f[V]Uint8Array\f[R], \f[V]Int16Array\f[R],
\f[V]Uint16Array\f[R], \f[V]Int32Array\f[R], \f[V]Uint32Array\f[R],
\f[V]BigInt64Array\f[R], or \f[V]BigUint64Array\f[R].
.RE
.IP \[bu] 2
\f[V]index\f[R]
.RS 2
.IP \[bu] 2
The position in the \f[V]typedArray\f[R] to store a \f[V]value\f[R] in.
.RE
.IP \[bu] 2
\f[V]value\f[R]
.RS 2
.IP \[bu] 2
The number to store.
.RE
.SS Return value
.PP
The value that has been stored.
.SS Exceptions
.IP \[bu] 2
\f[V]TypeError\f[R]
.RS 2
.IP \[bu] 2
Thrown if \f[V]typedArray\f[R] is not one of the allowed integer types.
.RE
.IP \[bu] 2
\f[V]RangeError\f[R]
.RS 2
.IP \[bu] 2
Thrown if \f[V]index\f[R] is out of bounds in the \f[V]typedArray\f[R].
.RE
.SH Examples
.SS Using store()
.IP
.nf
\f[C]
const sab = new SharedArrayBuffer(1024);
const ta = new Uint8Array(sab);

Atomics.store(ta, 0, 12); // 12
\f[R]
.fi
.SH See also
.IP \[bu] 2
\f[V]Atomics\f[R]
.IP \[bu] 2
\f[V]Atomics.load()\f[R]
