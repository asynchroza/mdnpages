.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "ByteLengthQueuingStrategy" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ByteLengthQueuingStrategy \- ByteLengthQueuingStrategy
.SH SYNOPSIS
The \f[B]\f[CB]ByteLengthQueuingStrategy\f[B]\f[R] interface of the
Streams API provides a built\-in byte length queuing strategy that can
be used when constructing streams.
.SH CONSTRUCTOR
.TP
\f[B]ByteLengthQueuingStrategy()\f[R]
Creates a new \f[CR]ByteLengthQueuingStrategy\f[R] object instance.
.SH INSTANCE PROPERTIES
.TP
\f[B]ByteLengthQueuingStrategy.highWaterMark\f[R] \f[I](read\-only)\f[R]
The total number of bytes that can be contained in the internal queue
before backpressure is applied.
.SH INSTANCE METHODS
.TP
\f[B]ByteLengthQueuingStrategy.size()\f[R]
Returns the given chunk\[cq]s \f[CR]byteLength\f[R] property.
.SH EXAMPLES
.IP
.EX
const queueingStrategy = new ByteLengthQueuingStrategy({ highWaterMark: 1024 });

const readableStream = new ReadableStream(
  {
    start(controller) {
      // \&...
    },
    pull(controller) {
      // \&...
    },
    cancel(err) {
      console.log(\[dq]stream error:\[dq], err);
    },
  },
  queueingStrategy,
);

const size = queueingStrategy.size(chunk);
.EE
.SH SEE ALSO
.IP \[bu] 2
Streams API
.IP \[bu] 2
Internal queues and queuing strategies
.IP \[bu] 2
\f[CR]ByteLengthQueuingStrategy()\f[R] constructor
