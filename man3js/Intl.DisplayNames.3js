.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Intl.DisplayNames" "JS" "March 29, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.DisplayNames \- Intl.DisplayNames
.SH SYNOPSIS
The \f[B]\f[CB]Intl.DisplayNames\f[B]\f[R] object enables the consistent
translation of language, region and script display names.
.SH CONSTRUCTOR
.TP
\f[B]Intl.DisplayNames()\f[R]
Creates a new \f[CR]Intl.DisplayNames\f[R] object.
.SH STATIC METHODS
.TP
\f[B]Intl.DisplayNames.supportedLocalesOf()\f[R]
Returns an array containing those of the provided locales that are
supported without having to fall back to the runtime\[cq]s default
locale.
.SH INSTANCE PROPERTIES
These properties are defined on \f[CR]Intl.DisplayNames.prototype\f[R]
and shared by all \f[CR]Intl.DisplayNames\f[R] instances.
.TP
\f[B]Intl.DisplayNames.prototype.constructor\f[R]
The constructor function that created the instance object.
For \f[CR]Intl.DisplayNames\f[R] instances, the initial value is the
\f[CR]Intl.DisplayNames\f[R] constructor.
.TP
\f[B]Intl.DisplayNames.prototype[\[at]\[at]toStringTag]\f[R]
The initial value of the \f[CR]\[at]\[at]toStringTag\f[R] property is
the string \f[CR]\[dq]Intl.DisplayNames\[dq]\f[R].
This property is used in \f[CR]Object.prototype.toString()\f[R].
.SH INSTANCE METHODS
.TP
\f[B]Intl.DisplayNames.prototype.of()\f[R]
This method receives a \f[CR]code\f[R] and returns a string based on the
locale and options provided when instantiating
\f[CR]Intl.DisplayNames\f[R].
.TP
\f[B]Intl.DisplayNames.prototype.resolvedOptions()\f[R]
Returns a new object with properties reflecting the locale and
formatting options computed during initialization of the object.
.SH EXAMPLES
.SS Region Code Display Names
To create an \f[CR]Intl.DisplayNames\f[R] for a locale and get the
display name for a region code.
.IP
.EX
// Get display names of region in English
let regionNames = new Intl.DisplayNames([\[dq]en\[dq]], { type: \[dq]region\[dq] });
regionNames.of(\[dq]419\[dq]); // \[dq]Latin America\[dq]
regionNames.of(\[dq]BZ\[dq]); // \[dq]Belize\[dq]
regionNames.of(\[dq]US\[dq]); // \[dq]United States\[dq]
regionNames.of(\[dq]BA\[dq]); // \[dq]Bosnia & Herzegovina\[dq]
regionNames.of(\[dq]MM\[dq]); // \[dq]Myanmar (Burma)\[dq]

// Get display names of region in Traditional Chinese
regionNames = new Intl.DisplayNames([\[dq]zh\-Hant\[dq]], { type: \[dq]region\[dq] });
regionNames.of(\[dq]419\[dq]); // \[dq]拉丁美洲\[dq]
regionNames.of(\[dq]BZ\[dq]); // \[dq]貝里斯\[dq]
regionNames.of(\[dq]US\[dq]); // \[dq]美國\[dq]
regionNames.of(\[dq]BA\[dq]); // \[dq]波士尼亞與赫塞哥維納\[dq]
regionNames.of(\[dq]MM\[dq]); // \[dq]緬甸\[dq]
.EE
.SS Language Display Names
To create an \f[CR]Intl.DisplayNames\f[R] for a locale and get the
display name for a language\-script\-region sequence.
.IP
.EX
// Get display names of language in English
let languageNames = new Intl.DisplayNames([\[dq]en\[dq]], { type: \[dq]language\[dq] });
languageNames.of(\[dq]fr\[dq]); // \[dq]French\[dq]
languageNames.of(\[dq]de\[dq]); // \[dq]German\[dq]
languageNames.of(\[dq]fr\-CA\[dq]); // \[dq]Canadian French\[dq]
languageNames.of(\[dq]zh\-Hant\[dq]); // \[dq]Traditional Chinese\[dq]
languageNames.of(\[dq]en\-US\[dq]); // \[dq]American English\[dq]
languageNames.of(\[dq]zh\-TW\[dq]); // \[dq]Chinese (Taiwan)\[dq]]

// Get display names of language in Traditional Chinese
languageNames = new Intl.DisplayNames([\[dq]zh\-Hant\[dq]], { type: \[dq]language\[dq] });
languageNames.of(\[dq]fr\[dq]); // \[dq]法文\[dq]
languageNames.of(\[dq]zh\[dq]); // \[dq]中文\[dq]
languageNames.of(\[dq]de\[dq]); // \[dq]德文\[dq]
.EE
.SS Script Code Display Names
To create an \f[CR]Intl.DisplayNames\f[R] for a locale and get the
display name for a script code.
.IP
.EX
// Get display names of script in English
let scriptNames = new Intl.DisplayNames([\[dq]en\[dq]], { type: \[dq]script\[dq] });
// Get script names
scriptNames.of(\[dq]Latn\[dq]); // \[dq]Latin\[dq]
scriptNames.of(\[dq]Arab\[dq]); // \[dq]Arabic\[dq]
scriptNames.of(\[dq]Kana\[dq]); // \[dq]Katakana\[dq]

// Get display names of script in Traditional Chinese
scriptNames = new Intl.DisplayNames([\[dq]zh\-Hant\[dq]], { type: \[dq]script\[dq] });
scriptNames.of(\[dq]Latn\[dq]); // \[dq]拉丁文\[dq]
scriptNames.of(\[dq]Arab\[dq]); // \[dq]阿拉伯文\[dq]
scriptNames.of(\[dq]Kana\[dq]); // \[dq]片假名\[dq]
.EE
.SS Currency Code Display Names
To create an \f[CR]Intl.DisplayNames\f[R] for a locale and get the
display name for currency code.
.IP
.EX
// Get display names of currency code in English
let currencyNames = new Intl.DisplayNames([\[dq]en\[dq]], { type: \[dq]currency\[dq] });
// Get currency names
currencyNames.of(\[dq]USD\[dq]); // \[dq]US Dollar\[dq]
currencyNames.of(\[dq]EUR\[dq]); // \[dq]Euro\[dq]
currencyNames.of(\[dq]TWD\[dq]); // \[dq]New Taiwan Dollar\[dq]
currencyNames.of(\[dq]CNY\[dq]); // \[dq]Chinese Yuan\[dq]

// Get display names of currency code in Traditional Chinese
currencyNames = new Intl.DisplayNames([\[dq]zh\-Hant\[dq]], { type: \[dq]currency\[dq] });
currencyNames.of(\[dq]USD\[dq]); // \[dq]美元\[dq]
currencyNames.of(\[dq]EUR\[dq]); // \[dq]歐元\[dq]
currencyNames.of(\[dq]TWD\[dq]); // \[dq]新台幣\[dq]
currencyNames.of(\[dq]CNY\[dq]); // \[dq]人民幣\[dq]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Intl\f[R]
