.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Math.abs" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
Math.abs - Math.abs()
.SH SYNOPSIS
.PP
The \f[B]\f[VB]Math.abs()\f[B]\f[R] static method returns the absolute
value of a number.
.SH SYNTAX
.IP
.nf
\f[C]
Math.abs(x)
\f[R]
.fi
.SS Parameters
.TP
\f[B]x\f[R]
A number.
.SS Return value
.PP
The absolute value of \f[V]x\f[R].
If \f[V]x\f[R] is negative (including \f[V]-0\f[R]), returns
\f[V]-x\f[R].
Otherwise, returns \f[V]x\f[R].
The result is therefore always a positive number or \f[V]0\f[R].
.SH DESCRIPTION
.PP
Because \f[V]abs()\f[R] is a static method of \f[V]Math\f[R], you always
use it as \f[V]Math.abs()\f[R], rather than as a method of a
\f[V]Math\f[R] object you created (\f[V]Math\f[R] is not a constructor).
.SH EXAMPLES
.SS Using Math.abs()
.IP
.nf
\f[C]
Math.abs(-Infinity); // Infinity
Math.abs(-1); // 1
Math.abs(-0); // 0
Math.abs(0); // 0
Math.abs(1); // 1
Math.abs(Infinity); // Infinity
\f[R]
.fi
.SS Coercion of parameter
.PP
\f[V]Math.abs()\f[R] coerces its parameter to a number.
Non-coercible values will become \f[V]NaN\f[R], making
\f[V]Math.abs()\f[R] also return \f[V]NaN\f[R].
.IP
.nf
\f[C]
Math.abs(\[dq]-1\[dq]); // 1
Math.abs(-2); // 2
Math.abs(null); // 0
Math.abs(\[dq]\[dq]); // 0
Math.abs([]); // 0
Math.abs([2]); // 2
Math.abs([1, 2]); // NaN
Math.abs({}); // NaN
Math.abs(\[dq]string\[dq]); // NaN
Math.abs(); // NaN
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
\f[V]Math.ceil()\f[R]
.IP \[bu] 2
\f[V]Math.floor()\f[R]
.IP \[bu] 2
\f[V]Math.round()\f[R]
.IP \[bu] 2
\f[V]Math.sign()\f[R]
.IP \[bu] 2
\f[V]Math.trunc()\f[R]
