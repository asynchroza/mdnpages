.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "SharedArrayBuffer.grow" "JS" "2023-06-02" "JavaScript" "JavaScript Reference Manual"
.hy
.SH Synopsis
.PP
The \f[B]\f[VB]grow()\f[B]\f[R] method of \f[V]SharedArrayBuffer\f[R]
instances grows the \f[V]SharedArrayBuffer\f[R] to the specified size,
in bytes.
.SH Syntax
.IP
.nf
\f[C]
grow(newLength)
\f[R]
.fi
.SS Parameters
.IP \[bu] 2
\f[V]newLength\f[R]
.RS 2
.IP \[bu] 2
The new length, in bytes, to resize the \f[V]SharedArrayBuffer\f[R] to.
.RE
.SS Return value
.PP
\f[V]undefined\f[R].
.SS Exceptions
.IP \[bu] 2
\f[V]TypeError\f[R]
.RS 2
.IP \[bu] 2
Thrown if the \f[V]SharedArrayBuffer\f[R] is not growable.
.RE
.IP \[bu] 2
\f[V]RangeError\f[R]
.RS 2
.IP \[bu] 2
Thrown if \f[V]newLength\f[R] is larger than the \f[V]maxByteLength\f[R]
of the \f[V]SharedArrayBuffer\f[R] or smaller than the
\f[V]byteLength\f[R].
.RE
.SH Description
.PP
The \f[V]grow()\f[R] method grows a \f[V]SharedArrayBuffer\f[R] to the
size specified by the \f[V]newLength\f[R] parameter, provided that the
\f[V]SharedArrayBuffer\f[R] is resizable and the new size is less than
or equal to the \f[V]maxByteLength\f[R] of the
\f[V]SharedArrayBuffer\f[R].
New bytes are initialized to 0.
.SH Examples
.SS Using grow()
.PP
In this example, we create a 8-byte buffer that is growable to a max
length of 16 bytes, then check its \f[V]growable\f[R] property, growing
it if \f[V]growable\f[R] returns \f[V]true\f[R]:
.IP
.nf
\f[C]
const buffer = new SharedArrayBuffer(8, { maxByteLength: 16 });

if (buffer.growable) {
  console.log(\[dq]SAB is growable!\[dq]);
  buffer.grow(12);
}
\f[R]
.fi
.SH See also
.IP \[bu] 2
\f[V]SharedArrayBuffer\f[R]
.IP \[bu] 2
\f[V]SharedArrayBuffer.prototype.growable\f[R]
.IP \[bu] 2
\f[V]SharedArrayBuffer.prototype.maxByteLength\f[R]
