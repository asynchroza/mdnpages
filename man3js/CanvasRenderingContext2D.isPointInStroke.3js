.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "CanvasRenderingContext2D.isPointInStroke" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.isPointInStroke \- CanvasRenderingContext2D:
isPointInStroke() method
.SH SYNOPSIS
The \f[B]\f[CB]CanvasRenderingContext2D.isPointInStroke()\f[B]\f[R]
method of the Canvas 2D API reports whether or not the specified point
is inside the area contained by the stroking of a path.
.SH SYNTAX
.IP
.EX
isPointInStroke(x, y)
isPointInStroke(path, x, y)
.EE
.SS Parameters
.TP
\f[B]x\f[R]
The x\-axis coordinate of the point to check.
.TP
\f[B]y\f[R]
The y\-axis coordinate of the point to check.
.TP
\f[B]path\f[R]
A \f[CR]Path2D\f[R] path to check against.
If unspecified, the current path is used.
.SS Return value
.TP
A boolean value
A Boolean, which is \f[CR]true\f[R] if the point is inside the area
contained by the stroking of a path, otherwise \f[CR]false\f[R].
.SH EXAMPLES
.SS Checking a point in the current path
This example uses the \f[CR]isPointInStroke()\f[R] method to check if a
point is within the area of the current path\[cq]s stroke.
.SS HTML
.IP
.EX
<canvas id=\[dq]canvas\[dq]></canvas>
<p>In stroke: <code id=\[dq]result\[dq]>false</code></p>
.EE
.SS JavaScript
.IP
.EX
const canvas = document.getElementById(\[dq]canvas\[dq]);
const ctx = canvas.getContext(\[dq]2d\[dq]);
const result = document.getElementById(\[dq]result\[dq]);

ctx.rect(10, 10, 100, 100);
ctx.stroke();
result.innerText = ctx.isPointInStroke(50, 10);
.EE
.SS Result
.SS Checking a point in the specified path
Whenever you move the mouse, this example checks whether the cursor is
in the stroke of an elliptical \f[CR]Path2D\f[R] path.
If yes, the ellipse\[cq]s stroke becomes green, otherwise it is red.
.SS HTML
.IP
.EX
<canvas id=\[dq]canvas\[dq]></canvas>
.EE
.SS JavaScript
.IP
.EX
const canvas = document.getElementById(\[dq]canvas\[dq]);
const ctx = canvas.getContext(\[dq]2d\[dq]);

// Create ellipse
const ellipse = new Path2D();
ellipse.ellipse(150, 75, 40, 60, Math.PI * 0.25, 0, 2 * Math.PI);
ctx.lineWidth = 25;
ctx.strokeStyle = \[dq]red\[dq];
ctx.fill(ellipse);
ctx.stroke(ellipse);

// Listen for mouse moves
canvas.addEventListener(\[dq]mousemove\[dq], (event) => {
  // Check whether point is inside ellipse\[aq]s stroke
  const isPointInStroke = ctx.isPointInStroke(
    ellipse,
    event.offsetX,
    event.offsetY,
  );
  ctx.strokeStyle = isPointInStroke ? \[dq]green\[dq] : \[dq]red\[dq];

  // Draw ellipse
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  ctx.fill(ellipse);
  ctx.stroke(ellipse);
});
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
The interface defining this method: \f[CR]CanvasRenderingContext2D\f[R]
