.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "Intl.Locale.getTimeZones" "JS" "August 25, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.Locale.getTimeZones - Intl.Locale.prototype.getTimeZones()
.SH SYNOPSIS
The \f[B]\f[CB]getTimeZones()\f[B]\f[R] method of \f[CR]Intl.Locale\f[R]
instances returns a list of supported time zones for this locale.
.RS
.PP
\f[B]Note:\f[R] In some versions of some browsers, this method was
implemented as an accessor property called \f[CR]timeZones\f[R].
However, because it returns a new array on each access, it is now
implemented as a method to prevent the situation of
\f[CR]locale.timeZones === locale.timeZones\f[R] returning
\f[CR]false\f[R].
Check the browser compatibility table for details.
.RE
.SH SYNTAX
.IP
.EX
getTimeZones()
.EE
.SS Parameters
None.
.SS Return value
An array of strings representing supported time zones for the associated
\f[CR]Locale\f[R], where each value is an IANA time zone canonical
name (https://en.wikipedia.org/wiki/Daylight_saving_time#IANA_time_zone_database),
sorted in alphabetical order.
If the locale identifier does not contain a region subtag, the returned
value is \f[CR]undefined\f[R].
.SH EXAMPLES
.SS Obtaining supported time zones
List supported time zones for a given \f[CR]Locale\f[R].
.IP
.EX
const arEG = new Intl.Locale(\[dq]ar-EG\[dq]);
console.log(arEG.getTimeZones()); // [\[dq]Africa/Cairo\[dq]]
.EE
.IP
.EX
const jaJP = new Intl.Locale(\[dq]ja-JP\[dq]);
console.log(jaJP.getTimeZones()); // [\[dq]Asia/Tokyo\[dq]]
.EE
.IP
.EX
const ar = new Intl.Locale(\[dq]ar\[dq]);
console.log(ar.getTimeZones()); // undefined
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Intl.Locale\f[R]
.IP \[bu] 2
IANA time zone
database (https://en.wikipedia.org/wiki/Daylight_saving_time#IANA_time_zone_database)
on Wikipedia
