.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "RegExp.ignoreCase" "JS" "April 12, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RegExp.ignoreCase - RegExp.prototype.ignoreCase
.SH SYNOPSIS
The \f[B]\f[CB]ignoreCase\f[B]\f[R] accessor property of
\f[CR]RegExp\f[R] instances returns whether or not the \f[CR]i\f[R] flag
is used with this regular expression.
.SH DESCRIPTION
\f[CR]RegExp.prototype.ignoreCase\f[R] has the value \f[CR]true\f[R] if
the \f[CR]i\f[R] flag was used; otherwise, \f[CR]false\f[R].
The \f[CR]i\f[R] flag indicates that case should be ignored while
attempting a match in a string.
.PP
If the regex has the \f[CR]unicode\f[R] flag, the case mapping happens
as specified in
\f[CR]CaseFolding.txt\f[R] (https://unicode.org/Public/UCD/latest/ucd/CaseFolding.txt).
Otherwise, case mapping uses the Unicode Default Case
Conversion (https://unicode-org.github.io/icu/userguide/transforms/casemappings.html)
\[em] the same algorithm used in
\f[CR]String.prototype.toUpperCase()\f[R] and
\f[CR]String.prototype.toLowerCase()\f[R].
.PP
The set accessor of \f[CR]ignoreCase\f[R] is \f[CR]undefined\f[R].
You cannot change this property directly.
.SH EXAMPLES
.SS Using ignoreCase
.IP
.EX
const regex = /foo/i;

console.log(regex.ignoreCase); // true
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]RegExp.prototype.lastIndex\f[R]
.IP \[bu] 2
\f[CR]RegExp.prototype.dotAll\f[R]
.IP \[bu] 2
\f[CR]RegExp.prototype.global\f[R]
.IP \[bu] 2
\f[CR]RegExp.prototype.hasIndices\f[R]
.IP \[bu] 2
\f[CR]RegExp.prototype.multiline\f[R]
.IP \[bu] 2
\f[CR]RegExp.prototype.source\f[R]
.IP \[bu] 2
\f[CR]RegExp.prototype.sticky\f[R]
.IP \[bu] 2
\f[CR]RegExp.prototype.unicode\f[R]
