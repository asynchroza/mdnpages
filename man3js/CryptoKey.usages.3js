.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "CryptoKey.usages" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CryptoKey.usages \- CryptoKey: usages property
.SH SYNOPSIS
\f[B]Secure context\f[R]: This feature is available only in secure
contexts (HTTPS).
.PP
The read\-only \f[B]\f[CB]usages\f[B]\f[R] property of the
\f[CR]CryptoKey\f[R] interface indicates what can be done with the key.
.SH VALUE
An \f[CR]Array\f[R] of strings from the following list:
.IP \[bu] 2
\f[CR]\[dq]encrypt\[dq]\f[R]: The key may be used to \f[CR]encrypt\f[R]
messages.
.IP \[bu] 2
\f[CR]\[dq]decrypt\[dq]\f[R]: The key may be used to \f[CR]decrypt\f[R]
messages.
.IP \[bu] 2
\f[CR]\[dq]sign\[dq]\f[R]: The key may be used to \f[CR]sign\f[R]
messages.
.IP \[bu] 2
\f[CR]\[dq]verify\[dq]\f[R]: The key may be used to \f[CR]verify\f[R]
signatures.
.IP \[bu] 2
\f[CR]\[dq]deriveKey\[dq]\f[R]: The key may be used in
\f[CR]deriving a new key\f[R].
.IP \[bu] 2
\f[CR]\[dq]deriveBits\[dq]\f[R]: The key may be used in
\f[CR]deriving bits\f[R].
.IP \[bu] 2
\f[CR]\[dq]wrapKey\[dq]\f[R]: The key may be used to
\f[CR]wrap a key\f[R].
.IP \[bu] 2
\f[CR]\[dq]unwrapKey\[dq]\f[R]: The key may be used to
\f[CR]unwrap a key\f[R].
.SH EXAMPLES
.IP
.EX
const rawKey = window.crypto.getRandomValues(new Uint8Array(16));

// Import an AES secret key from an ArrayBuffer containing the raw bytes.
// Takes an ArrayBuffer string containing the bytes, and returns a Promise
// that will resolve to a CryptoKey representing the secret key.
function importSecretKey(rawKey) {
  return window.crypto.subtle.importKey(\[dq]raw\[dq], rawKey, \[dq]AES\-GCM\[dq], true, [
    \[dq]encrypt\[dq],
    \[dq]decrypt\[dq],
  ]);
}

const key = importSecretKey(rawKey);
console.log(
  \[ga]The following usages are reported for this key: ${key.usages.toString()}\[ga],
);
.EE
