.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "IDBCursorWithValue" "JS" "February 28, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
IDBCursorWithValue \- IDBCursorWithValue
.SH SYNOPSIS
The \f[B]\f[CB]IDBCursorWithValue\f[B]\f[R] interface of the IndexedDB
API represents a cursor for traversing or iterating over multiple
records in a database.
It is the same as the \f[CR]IDBCursor\f[R], except that it includes the
\f[CR]value\f[R] property.
.PP
The cursor has a source that indicates which index or object store it is
iterating over.
It has a position within the range, and moves in a direction that is
increasing or decreasing in the order of record keys.
The cursor enables an application to asynchronously process all the
records in the cursor\[cq]s range.
.PP
You can have an unlimited number of cursors at the same time.
You always get the same \f[CR]IDBCursorWithValue\f[R] object
representing a given cursor.
Operations are performed on the underlying index or object store.
.PP
This feature is available in Web Workers.
.SH INSTANCE METHODS
Inherits methods from its parent interface, \f[CR]IDBCursor\f[R].
.SH INSTANCE PROPERTIES
Inherits properties from its parent interface, \f[CR]IDBCursor\f[R].
.TP
\f[B]IDBCursorWithValue.value\f[R] \f[I](read\-only)\f[R]
Returns the value of the current cursor.
.SH EXAMPLE
In this example we create a transaction, retrieve an object store, then
use a cursor to iterate through all the records in the object store.
The cursor does not require us to select the data based on a key; we can
just grab all of it.
Also note that in each iteration of the loop, you can grab data from the
current record under the cursor object using
\f[CR]cursor.value.foo\f[R].
For a complete working example, see our \c
.UR
https://github.com/mdn/dom-examples/tree/main/indexeddb-examples/idbcursor
IDBCursor example
.UE \c
\ (\c
.UR https://mdn.github.io/dom-examples/indexeddb-examples/idbcursor/
view example live
.UE \c
\&.)
.IP
.EX
function displayData() {
  const transaction = db.transaction([\[dq]rushAlbumList\[dq]], \[dq]readonly\[dq]);
  const objectStore = transaction.objectStore(\[dq]rushAlbumList\[dq]);

  objectStore.openCursor().onsuccess = (event) => {
    const cursor = event.target.result;
    if (cursor) {
      const listItem = document.createElement(\[dq]li\[dq]);
      listItem.textContent = \[ga]${cursor.value.albumTitle}, ${cursor.value.year}\[ga];
      list.appendChild(listItem);

      cursor.continue();
    } else {
      console.log(\[dq]Entries all displayed.\[dq]);
    }
  };
}
.EE
.SH SEE ALSO
.IP \[bu] 2
Using IndexedDB
.IP \[bu] 2
Starting transactions: \f[CR]IDBDatabase\f[R]
.IP \[bu] 2
Using transactions: \f[CR]IDBTransaction\f[R]
.IP \[bu] 2
Setting a range of keys: \f[CR]IDBKeyRange\f[R]
.IP \[bu] 2
Retrieving and making changes to your data: \f[CR]IDBObjectStore\f[R]
.IP \[bu] 2
Using cursors: \f[CR]IDBCursor\f[R]
.IP \[bu] 2
Reference example: \c
.UR https://github.com/mdn/dom-examples/tree/main/to-do-notifications
To\-do Notifications
.UE \c
\ (\c
.UR https://mdn.github.io/dom-examples/to-do-notifications/
View the example live
.UE \c
).
