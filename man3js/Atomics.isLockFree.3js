.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Atomics.isLockFree" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
Atomics.isLockFree - Atomics.isLockFree()
.SH SYNOPSIS
.PP
The \f[B]\f[VB]Atomics.isLockFree()\f[B]\f[R] static method is used to
determine whether the \f[V]Atomics\f[R] methods use locks or atomic
hardware operations when applied to typed arrays with the given element
byte size.
It returns \f[V]false\f[R] if the given size is not one of the
BYTES_PER_ELEMENT property of integer TypedArray types.
.SH SYNTAX
.IP
.nf
\f[C]
Atomics.isLockFree(size)
\f[R]
.fi
.SS Parameters
.TP
\f[B]size\f[R]
The size in bytes to check.
.SS Return value
.PP
A \f[V]true\f[R] or \f[V]false\f[R] value indicating whether the
operation is lock free.
.SH EXAMPLES
.SS Using isLockFree
.IP
.nf
\f[C]
Atomics.isLockFree(1); // true
Atomics.isLockFree(2); // true
Atomics.isLockFree(3); // false
Atomics.isLockFree(4); // true
Atomics.isLockFree(5); // false
Atomics.isLockFree(6); // false
Atomics.isLockFree(7); // false
Atomics.isLockFree(8); // true
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
\f[V]Atomics\f[R]
