.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "HTMLElement.cut_event" "JS" "December 19, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLElement.cut_event \- HTMLElement: cut event
.SH SYNOPSIS
The \f[B]\f[CB]cut\f[B]\f[R] event fires when the user initiates a cut
action through the browser\[cq]s user interface.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]cut\[dq], (event) => {});

oncut = (event) => {};
.EE
.SH EVENT TYPE
A \f[CR]ClipboardEvent\f[R].
Inherits from \f[CR]Event\f[R].
.SH EVENT PROPERTIES
\f[I]Also inherits properties from its parent \f[CI]Event\f[I]\f[R].
.TP
\f[B]ClipboardEvent.clipboardData\f[R] \f[I](read\-only)\f[R]
A \f[CR]DataTransfer\f[R] object containing the data affected by the
user\-initiated \f[CR]cut\f[R], \f[CR]copy\f[R], or \f[CR]paste\f[R]
operation, along with its MIME type.
.SH EXAMPLE
This example allows text to be copied from the \f[CR]<textarea>\f[R],
but doesn\[cq]t allow text to be cut.
It also logs each copy and cut attempt.
.SS HTML
.IP
.EX
<h3>Play with this text area:</h3>
<textarea id=\[dq]editor\[dq] rows=\[dq]3\[dq]>
Try copying and cutting the text in this field!
</textarea>

<h3>Log:</h3>
<p id=\[dq]log\[dq]></p>
.EE
.SS JavaScript
.IP
.EX
function logCopy(event) {
  log.innerText = \[ga]Copied!\[rs]n${log.innerText}\[ga];
}

function preventCut(event) {
  event.preventDefault();
  log.innerText = \[ga]Cut blocked!\[rs]n${log.innerText}\[ga];
}

const editor = document.getElementById(\[dq]editor\[dq]);
const log = document.getElementById(\[dq]log\[dq]);

editor.oncopy = logCopy;
editor.oncut = preventCut;
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
Related events
.RS 2
.IP \[bu] 2
\f[CR]HTMLElement.copy_event\f[R]
.IP \[bu] 2
\f[CR]HTMLElement.paste_event\f[R]
.RE
