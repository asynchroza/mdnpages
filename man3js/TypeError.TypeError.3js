.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "TypeError.TypeError" "JS" "May 26, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TypeError.TypeError \- TypeError() constructor
.SH SYNOPSIS
The \f[B]\f[CB]TypeError()\f[B]\f[R] constructor creates
\f[CR]TypeError\f[R] objects.
.SH SYNTAX
.IP
.EX
new TypeError()
new TypeError(message)
new TypeError(message, options)
new TypeError(message, fileName)
new TypeError(message, fileName, lineNumber)

TypeError()
TypeError(message)
TypeError(message, options)
TypeError(message, fileName)
TypeError(message, fileName, lineNumber)
.EE
.RS
.PP
\f[B]Note:\f[R] \f[CR]TypeError()\f[R] can be called with or without
\f[CR]new\f[R].
Both create a new \f[CR]TypeError\f[R] instance.
.RE
.SS Parameters
.TP
\f[B]message\f[R] \f[I](optional)\f[R]
Human\-readable description of the error
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object that has the following properties:
.RS
.TP
\f[B]cause\f[R] \f[I](optional)\f[R]
A property indicating the specific cause of the error.
When catching and re\-throwing an error with a more\-specific or useful
error message, this property can be used to pass the original error.
.RE
.TP
\f[B]fileName\f[R] \f[I](optional)\f[R] \f[I](non\-standard)\f[R]
The name of the file containing the code that caused the exception
.TP
\f[B]lineNumber\f[R] \f[I](optional)\f[R] \f[I](non\-standard)\f[R]
The line number of the code that caused the exception
.SH EXAMPLES
.SS Catching a TypeError
.IP
.EX
try {
  null.f();
} catch (e) {
  console.log(e instanceof TypeError); // true
  console.log(e.message); // \[dq]null has no properties\[dq]
  console.log(e.name); // \[dq]TypeError\[dq]
  console.log(e.stack); // Stack of the error
}
.EE
.SS Creating a TypeError
.IP
.EX
try {
  throw new TypeError(\[dq]Hello\[dq]);
} catch (e) {
  console.log(e instanceof TypeError); // true
  console.log(e.message); // \[dq]Hello\[dq]
  console.log(e.name); // \[dq]TypeError\[dq]
  console.log(e.stack); // Stack of the error
}
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Error\f[R]
