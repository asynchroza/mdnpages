.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "Set.has" "JS" "August 9, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Set.has - Set.prototype.has()
.SH SYNOPSIS
The \f[B]\f[CB]has()\f[B]\f[R] method of \f[CR]Set\f[R] instances
returns a boolean indicating whether an element with the specified value
exists in this set or not.
.SH SYNTAX
.IP
.EX
has(value)
.EE
.SS Parameters
.TP
\f[B]value\f[R]
The value to test for presence in the \f[CR]Set\f[R] object.
.SS Return value
Returns \f[CR]true\f[R] if an element with the specified value exists in
the \f[CR]Set\f[R] object; otherwise \f[CR]false\f[R].
.SH EXAMPLES
.SS Using the has() method
.IP
.EX
const mySet = new Set();
mySet.add(\[dq]foo\[dq]);

console.log(mySet.has(\[dq]foo\[dq])); // true
console.log(mySet.has(\[dq]bar\[dq])); // false

const set1 = new Set();
const obj1 = { key1: 1 };
set1.add(obj1);

console.log(set1.has(obj1)); // true
console.log(set1.has({ key1: 1 })); // false, because they are different object references
console.log(set1.add({ key1: 1 })); // now set1 contains 2 entries
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Set\f[R]
.IP \[bu] 2
\f[CR]Set.prototype.add()\f[R]
.IP \[bu] 2
\f[CR]Set.prototype.delete()\f[R]
