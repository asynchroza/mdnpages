.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "RegExp.multiline" "JS" "2023-06-02" "JavaScript" "JavaScript Reference Manual"
.hy
.SH Synopsis
.PP
The \f[B]\f[VB]multiline\f[B]\f[R] accessor property of \f[V]RegExp\f[R]
instances returns whether or not the \f[V]m\f[R] flag is used with this
regular expression.
.SH Description
.PP
\f[V]RegExp.prototype.multiline\f[R] has the value \f[V]true\f[R] if the
\f[V]m\f[R] flag was used; otherwise, \f[V]false\f[R].
The \f[V]m\f[R] flag indicates that a multiline input string should be
treated as multiple lines.
For example, if \f[V]m\f[R] is used, \f[V]\[ha]\f[R] and \f[V]$\f[R]
change from matching at only the start or end of the entire string to
the start or end of any line within the string.
.PP
The set accessor of \f[V]multiline\f[R] is \f[V]undefined\f[R].
You cannot change this property directly.
.SH Examples
.SS Using multiline
.IP
.nf
\f[C]
const regex = /foo/m;

console.log(regex.multiline); // true
\f[R]
.fi
.SH See also
.IP \[bu] 2
\f[V]RegExp.prototype.lastIndex\f[R]
.IP \[bu] 2
\f[V]RegExp.prototype.dotAll\f[R]
.IP \[bu] 2
\f[V]RegExp.prototype.global\f[R]
.IP \[bu] 2
\f[V]RegExp.prototype.hasIndices\f[R]
.IP \[bu] 2
\f[V]RegExp.prototype.ignoreCase\f[R]
.IP \[bu] 2
\f[V]RegExp.prototype.source\f[R]
.IP \[bu] 2
\f[V]RegExp.prototype.sticky\f[R]
.IP \[bu] 2
\f[V]RegExp.prototype.unicode\f[R]
