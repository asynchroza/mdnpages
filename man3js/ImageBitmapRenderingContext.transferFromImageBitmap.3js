.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "ImageBitmapRenderingContext.transferFromImageBitmap" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ImageBitmapRenderingContext.transferFromImageBitmap \-
ImageBitmapRenderingContext: transferFromImageBitmap() method
.SH SYNOPSIS
The
\f[B]\f[CB]ImageBitmapRenderingContext.transferFromImageBitmap()\f[B]\f[R]
method displays the given \f[CR]ImageBitmap\f[R] in the canvas
associated with this rendering context.
The ownership of the \f[CR]ImageBitmap\f[R] is transferred to the canvas
as well.
.PP
This method was previously named \f[CR]transferImageBitmap()\f[R], but
was renamed in a spec change.
The old name is being kept as an alias to avoid code breakage.
.SH SYNTAX
.IP
.EX
transferFromImageBitmap(bitmap)
.EE
.SS Parameters
.TP
\f[B]bitmap\f[R]
An \f[CR]ImageBitmap\f[R] object to transfer.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.SS HTML
.IP
.EX
<canvas id=\[dq]htmlCanvas\[dq]></canvas>
.EE
.SS JavaScript
.IP
.EX
const htmlCanvas = document
  .getElementById(\[dq]htmlCanvas\[dq])
  .getContext(\[dq]bitmaprenderer\[dq]);

// Draw a WebGL scene offscreen
const offscreen = new OffscreenCanvas(256, 256);
const gl = offscreen.getContext(\[dq]webgl\[dq]);

// Perform some drawing using the gl context

// Transfer the current frame to the visible canvas
const bitmap = offscreen.transferToImageBitmap();
htmlCanvas.transferFromImageBitmap(bitmap);
.EE
.SH SEE ALSO
.IP \[bu] 2
The interface defining this method,
\f[CR]ImageBitmapRenderingContext\f[R]
.IP \[bu] 2
\f[CR]OffscreenCanvas\f[R]
.IP \[bu] 2
\f[CR]OffscreenCanvas.transferToImageBitmap()\f[R]
