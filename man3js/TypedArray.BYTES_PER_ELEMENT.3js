'\" t
.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "TypedArray.BYTES_PER_ELEMENT" "JS" "September 12, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TypedArray.BYTES_PER_ELEMENT - TypedArray.BYTES_PER_ELEMENT
.SH SYNOPSIS
The \f[B]\f[CB]TypedArray.BYTES_PER_ELEMENT\f[B]\f[R] static data
property represents the size in bytes of each element in a typed array.
.SH VALUE
A number whose value depends on the type of \f[CR]TypedArray\f[R].
.PP
.TS
tab(@);
l l.
T{
Writable
T}@T{
no
T}
T{
Enumerable
T}@T{
no
T}
T{
Configurable
T}@T{
no
T}
.TE
.SH DESCRIPTION
\f[CR]TypedArray\f[R] objects differ from each other in the number of
bytes per element and in the way the bytes are interpreted.
The \f[CR]BYTES_PER_ELEMENT\f[R] constant contains the number of bytes
each element in the given \f[CR]TypedArray\f[R] has.
.PP
The \f[CR]BYTES_PER_ELEMENT\f[R] property is both an \f[I]instance
property\f[R] and a \f[I]static property\f[R].
It\[cq]s available on both \f[CR]TypedArray\f[R] subclass constructors
and on instances of those constructors.
.PP
As an instance property, \f[CR]BYTES_PER_ELEMENT\f[R] is defined on the
constructor\[cq]s \f[CR]prototype\f[R].
.IP
.EX
console.log(Object.hasOwn(Int8Array.prototype, \[dq]BYTES_PER_ELEMENT\[dq])); // true
.EE
.SH EXAMPLES
.SS Using BYTES_PER_ELEMENT
As a static property:
.IP
.EX
Int8Array.BYTES_PER_ELEMENT; // 1
Uint8Array.BYTES_PER_ELEMENT; // 1
Uint8ClampedArray.BYTES_PER_ELEMENT; // 1
Int16Array.BYTES_PER_ELEMENT; // 2
Uint16Array.BYTES_PER_ELEMENT; // 2
Int32Array.BYTES_PER_ELEMENT; // 4
Uint32Array.BYTES_PER_ELEMENT; // 4
Float32Array.BYTES_PER_ELEMENT; // 4
Float64Array.BYTES_PER_ELEMENT; // 8
BigInt64Array.BYTES_PER_ELEMENT; // 8
BigUint64Array.BYTES_PER_ELEMENT; // 8
.EE
.PP
As an instance property:
.IP
.EX
new Int8Array([]).BYTES_PER_ELEMENT; // 1
new Uint8Array([]).BYTES_PER_ELEMENT; // 1
new Uint8ClampedArray([]).BYTES_PER_ELEMENT; // 1
new Int16Array([]).BYTES_PER_ELEMENT; // 2
new Uint16Array([]).BYTES_PER_ELEMENT; // 2
new Int32Array([]).BYTES_PER_ELEMENT; // 4
new Uint32Array([]).BYTES_PER_ELEMENT; // 4
new Float32Array([]).BYTES_PER_ELEMENT; // 4
new Float64Array([]).BYTES_PER_ELEMENT; // 8
new BigInt64Array([]).BYTES_PER_ELEMENT; // 8
new BigUint64Array([]).BYTES_PER_ELEMENT; // 8
.EE
.SH SEE ALSO
.IP \[bu] 2
JavaScript typed arrays guide
.IP \[bu] 2
\f[CR]TypedArray\f[R]
