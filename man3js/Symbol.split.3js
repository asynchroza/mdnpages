'\" t
.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Symbol.split" "JS" "2023-06-02" "JavaScript" "JavaScript Reference Manual"
.hy
.SH Synopsis
.PP
The \f[B]\f[VB]Symbol.split\f[B]\f[R] static data property represents
the well-known symbol \f[V]\[at]\[at]split\f[R].
The \f[V]String.prototype.split()\f[R] method looks up this symbol on
its first argument for the method that splits a string at the indices
that match the current object.
.PP
For more information, see\f[V]RegExp.prototype[\[at]\[at]split]()\f[R]
and \f[V]String.prototype.split()\f[R].
.SH Value
.PP
The well-known symbol \f[V]\[at]\[at]split\f[R].
.PP
.TS
tab(@);
l l.
T{
Writable
T}@T{
no
T}
T{
Enumerable
T}@T{
no
T}
T{
Configurable
T}@T{
no
T}
.TE
.SH Examples
.SS Custom reverse split
.IP
.nf
\f[C]
class ReverseSplit {
  [Symbol.split](string) {
    const array = string.split(\[dq] \[dq]);
    return array.reverse();
  }
}

console.log(\[dq]Another one bites the dust\[dq].split(new ReverseSplit()));
// [ \[dq]dust\[dq], \[dq]the\[dq], \[dq]bites\[dq], \[dq]one\[dq], \[dq]Another\[dq] ]
\f[R]
.fi
.SH See also
.IP \[bu] 2
Polyfill of \f[V]Symbol.split\f[R] in
\f[V]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-symbol)
.IP \[bu] 2
\f[V]Symbol.match\f[R]
.IP \[bu] 2
\f[V]Symbol.matchAll\f[R]
.IP \[bu] 2
\f[V]Symbol.replace\f[R]
.IP \[bu] 2
\f[V]Symbol.search\f[R]
.IP \[bu] 2
\f[V]String.prototype.split()\f[R]
.IP \[bu] 2
\f[V]RegExp.prototype[\[at]\[at]split]()\f[R]
