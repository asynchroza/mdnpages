.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Symbol.for" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
Symbol.for - Symbol.for()
.SH SYNOPSIS
.PP
The \f[B]\f[VB]Symbol.for()\f[B]\f[R] static method searches for
existing symbols in a runtime-wide symbol registry with the given key
and returns it if found.
Otherwise a new symbol gets created in the global symbol registry with
this key.
.SH SYNTAX
.IP
.nf
\f[C]
Symbol.for(key)
\f[R]
.fi
.SS Parameters
.TP
\f[B]key\f[R]
String, required.
The key for the symbol (and also used for the description of the
symbol).
.SS Return value
.PP
An existing symbol with the given key if found; otherwise, a new symbol
is created and returned.
.SH DESCRIPTION
.PP
In contrast to \f[V]Symbol()\f[R], the \f[V]Symbol.for()\f[R] function
creates a symbol available in a global symbol registry list.
\f[V]Symbol.for()\f[R] does also not necessarily create a new symbol on
every call, but checks first if a symbol with the given \f[V]key\f[R] is
already present in the registry.
In that case, that symbol is returned.
If no symbol with the given key is found, \f[V]Symbol.for()\f[R] will
create a new global symbol.
.SH EXAMPLES
.SS Using Symbol.for()
.IP
.nf
\f[C]
Symbol.for(\[dq]foo\[dq]); // create a new global symbol
Symbol.for(\[dq]foo\[dq]); // retrieve the already created symbol

// Same global symbol, but not locally
Symbol.for(\[dq]bar\[dq]) === Symbol.for(\[dq]bar\[dq]); // true
Symbol(\[dq]bar\[dq]) === Symbol(\[dq]bar\[dq]); // false

// The key is also used as the description
const sym = Symbol.for(\[dq]mario\[dq]);
sym.toString(); // \[dq]Symbol(mario)\[dq]
\f[R]
.fi
.PP
To avoid name clashes with your global symbol keys and other (library
code) global symbols, it might be a good idea to prefix your symbols:
.IP
.nf
\f[C]
Symbol.for(\[dq]mdn.foo\[dq]);
Symbol.for(\[dq]mdn.bar\[dq]);
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
\f[V]Symbol.keyFor()\f[R]
