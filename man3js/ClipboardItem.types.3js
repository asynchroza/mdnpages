.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "ClipboardItem.types" "JS" "January 3, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ClipboardItem.types \- ClipboardItem: types property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]types\f[B]\f[R] property of the
\f[CR]ClipboardItem\f[R] interface returns an \f[CR]Array\f[R] of MIME
types available within the \f[CR]ClipboardItem\f[R]
.SH VALUE
An \f[CR]Array\f[R] of available MIME types.
.SH EXAMPLES
In the below example, we\[cq]re returning all items on the clipboard via
the \f[CR]clipboard.read()\f[R] method.
Then checking the \f[CR]types\f[R] property for available types before
utilizing the \f[CR]ClipboardItem.getType()\f[R] method to return the
\f[CR]Blob\f[R] object.
If no clipboards contents is found for the specified type, an error is
returned.
.IP
.EX
async function getClipboardContents() {
  try {
    const clipboardItems = await navigator.clipboard.read();

    for (const clipboardItem of clipboardItems) {
      for (const type of clipboardItem.types) {
        const blob = await clipboardItem.getType(type);
        // we can now use blob here
      }
    }
  } catch (err) {
    console.error(err.name, err.message);
  }
}
.EE
.SH SEE ALSO
.IP \[bu] 2
Clipboard API
.IP \[bu] 2
\c
.UR https://web.dev/articles/async-clipboard
Image support for Async Clipboard article
.UE \c
