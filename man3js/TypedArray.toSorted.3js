.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "TypedArray.toSorted" "JS" "September 14, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TypedArray.toSorted - TypedArray.prototype.toSorted()
.SH SYNOPSIS
The \f[B]\f[CB]toSorted()\f[B]\f[R] method of \f[CR]TypedArray\f[R]
instances is the copying version of the \f[CR]sort()\f[R] method.
It returns a new typed array with the elements sorted in ascending
order.
This method has the same algorithm as
\f[CR]Array.prototype.toSorted()\f[R], except that it sorts the values
numerically instead of as strings by default.
.SH SYNTAX
.IP
.EX
toSorted()
toSorted(compareFn)
.EE
.SS Parameters
.TP
\f[B]compareFn\f[R] \f[I](optional)\f[R]
Specifies a function that defines the sort order.
If omitted, the typed array elements are sorted according to numeric
value.
.RS
.TP
\f[B]a\f[R]
The first element for comparison.
.TP
\f[B]b\f[R]
The second element for comparison.
.RE
.SS Return value
A new typed array with the elements sorted in ascending order.
.SH DESCRIPTION
See \f[CR]Array.prototype.toSorted()\f[R] for more details.
This method is not generic and can only be called on typed array
instances.
.SH EXAMPLES
.SS Sorting an array
For more examples, see also the \f[CR]Array.prototype.sort()\f[R]
method.
.IP
.EX
const numbers = new Uint8Array([40, 1, 5, 200]);
const numberSorted = numbers.toSorted();
console.log(numberSorted); // Uint8Array [ 1, 5, 40, 200 ]
// Unlike plain Arrays, a compare function is not required
// to sort the numbers numerically.
console.log(numbers); // Uint8Array [ 40, 1, 5, 200 ]
.EE
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[CR]TypedArray.prototype.toSorted\f[R] in
\f[CR]core-js\f[R] (https://github.com/zloirock/core-js#change-array-by-copy)
.IP \[bu] 2
JavaScript typed arrays guide
.IP \[bu] 2
\f[CR]TypedArray.prototype.sort()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.toReversed()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.with()\f[R]
.IP \[bu] 2
\f[CR]Array.prototype.toSorted()\f[R]
