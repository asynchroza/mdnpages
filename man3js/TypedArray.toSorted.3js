.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "TypedArray.toSorted" "JS" "April 9, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TypedArray.toSorted - TypedArray.prototype.toSorted()
.SH SYNOPSIS
The \f[B]\f[CB]toSorted()\f[B]\f[R] method is the copying version of the
\f[CR]sort()\f[R] method.
It returns a new array with the elements sorted in ascending order.
This method has the same algorithm as
\f[CR]Array.prototype.toSorted()\f[R], except that it sorts the values
numerically instead of as strings by default.
\f[I]TypedArray\f[R] is one of the typed array types here.
.SH SYNTAX
.IP
.EX
// Functionless
toSorted()

// Arrow function
toSorted((a, b) => { /* \&... */ })

// Compare function
toSorted(compareFn)

// Inline compare function
toSorted(function compareFn(a, b) { /* \&... */ })
.EE
.SS Parameters
.TP
\f[B]compareFn\f[R] \f[I](optional)\f[R]
Specifies a function that defines the sort order.
.SS Return value
A new typed array with the elements sorted in ascending order.
.SH EXAMPLES
.SS Sorting an array
For more examples, see also the \f[CR]Array.prototype.sort()\f[R]
method.
.IP
.EX
const numbers = new Uint8Array([40, 1, 5, 200]);
const numberSorted = numbers.toSorted();
console.log(numberSorted); // Uint8Array [ 1, 5, 40, 200 ]
// Unlike plain Arrays, a compare function is not required
// to sort the numbers numerically.
console.log(numbers); // Uint8Array [ 40, 1, 5, 200 ]
.EE
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[CR]TypedArray.prototype.toSorted\f[R] in
\f[CR]core-js\f[R] (https://github.com/zloirock/core-js#change-array-by-copy)
.IP \[bu] 2
\f[CR]Array.prototype.toSorted()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.sort()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.toReversed()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.with()\f[R]
