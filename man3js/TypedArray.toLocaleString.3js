.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "TypedArray.toLocaleString" "JS" "February 21, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TypedArray.toLocaleString - TypedArray.prototype.toLocaleString()
.SH SYNOPSIS
The \f[B]\f[CB]toLocaleString()\f[B]\f[R] method returns a string
representing the elements of the typed array.
The elements are converted to strings and are separated by a
locale-specific string (such as a comma \[lq],\[rq]).
This method has the same algorithm as
\f[CR]Array.prototype.toLocaleString()\f[R] and, as the typed array
elements are numbers, the same algorithm as
\f[CR]Number.prototype.toLocaleString()\f[R] applies for each element.
\f[I]TypedArray\f[R] is one of the typed array types here.
.SH SYNTAX
.IP
.EX
toLocaleString()
toLocaleString(locales)
toLocaleString(locales, options)
.EE
.SS Parameters
The \f[CR]locales\f[R] and \f[CR]options\f[R] arguments customize the
behavior of the function and let applications specify the language whose
formatting conventions should be used.
In implementations, which ignore the \f[CR]locales\f[R] and
\f[CR]options\f[R] arguments, the locale used and the form of the string
returned are entirely implementation dependent.
.PP
See the \f[CR]Intl.NumberFormat()\f[R] constructor for details on these
parameters and how to use them.
.SS Return value
A string representing the elements of the typed array.
.SH EXAMPLES
.SS Using toLocaleString
.IP
.EX
const uint = new Uint32Array([2000, 500, 8123, 12, 4212]);

uint.toLocaleString();
// if run in a de-DE locale
// \[dq]2.000,500,8.123,12,4.212\[dq]

uint.toLocaleString(\[dq]en-US\[dq]);
// \[dq]2,000,500,8,123,12,4,212\[dq]

uint.toLocaleString(\[dq]ja-JP\[dq], { style: \[dq]currency\[dq], currency: \[dq]JPY\[dq] });
// \[dq]￥2,000,￥500,￥8,123,￥12,￥4,212\[dq]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Array.prototype.toLocaleString()\f[R]
.IP \[bu] 2
\f[CR]Number.prototype.toLocaleString()\f[R]
