.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Date.getDay" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
Date.getDay - Date.prototype.getDay()
.SH SYNOPSIS
.PP
The \f[B]\f[VB]getDay()\f[B]\f[R] method of \f[V]Date\f[R] instances
returns the day of the week for this date according to local time, where
0 represents Sunday.
For the day of the month, see \f[V]Date.prototype.getDate()\f[R].
.SH SYNTAX
.IP
.nf
\f[C]
getDay()
\f[R]
.fi
.SS Return value
.PP
An integer, between 0 and 6, representing the day of the week for the
given date according to local time: 0 for Sunday, 1 for Monday, 2 for
Tuesday, and so on.
Returns \f[V]NaN\f[R] if the date is invalid.
.SH DESCRIPTION
.PP
The return value of \f[V]getDay()\f[R] is zero-based, which is useful
for indexing into arrays of days, for example:
.IP
.nf
\f[C]
const valentines = new Date(\[dq]1995-02-14\[dq]);
const day = valentines.getDay();
const dayNames = [\[dq]Sunday\[dq], \[dq]Monday\[dq], \[dq]Tuesday\[dq] /* , \&... */];

console.log(dayNames[day]); // \[dq]Monday\[dq]
\f[R]
.fi
.PP
However, for the purpose of internationalization, you should prefer
using \f[V]Intl.DateTimeFormat\f[R] with the \f[V]options\f[R] parameter
instead.
.IP
.nf
\f[C]
const options = { weekday: \[dq]long\[dq] };
console.log(new Intl.DateTimeFormat(\[dq]en-US\[dq], options).format(valentines));
// \[dq]Monday\[dq]
console.log(new Intl.DateTimeFormat(\[dq]de-DE\[dq], options).format(valentines));
// \[dq]Montag\[dq]
\f[R]
.fi
.SH EXAMPLES
.SS Using getDay()
.PP
The \f[V]weekday\f[R] variable has value \f[V]1\f[R], based on the value
of the \f[V]Date\f[R] object \f[V]xmas95\f[R], because December 25, 1995
is a Monday.
.IP
.nf
\f[C]
const xmas95 = new Date(\[dq]1995-12-25T23:15:30\[dq]);
const weekday = xmas95.getDay();

console.log(weekday); // 1
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
\f[V]Date.prototype.getUTCDate()\f[R]
.IP \[bu] 2
\f[V]Date.prototype.getUTCDay()\f[R]
.IP \[bu] 2
\f[V]Date.prototype.setDate()\f[R]
