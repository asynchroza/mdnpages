.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "WEBGL_debug_shaders.getTranslatedShaderSource" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WEBGL_debug_shaders.getTranslatedShaderSource \- WEBGL_debug_shaders:
getTranslatedShaderSource() method
.SH SYNOPSIS
The \f[B]\f[CB]WEBGL_debug_shaders.getTranslatedShaderSource()\f[B]\f[R]
method is part of the WebGL API and allows you to debug a translated
shader.
.SH SYNTAX
.IP
.EX
getTranslatedShaderSource(shader)
.EE
.SS Parameters
.TP
\f[B]shader\f[R]
A \f[CR]WebGLShader\f[R] to get the translated source from.
.SS Return value
A \f[CR]String\f[R] containing the translated shader source.
An empty string is returned, if:
.IP \[bu] 2
no source has been defined or,
.IP \[bu] 2
\f[CR]WebGLRenderingContext.compileShader()\f[R] has not yet been called
or,
.IP \[bu] 2
the translation for the shader failed.
.SH EXAMPLES
.IP
.EX
const canvas = document.getElementById(\[dq]canvas\[dq]);
const gl = canvas.getContext(\[dq]webgl\[dq]);

const shader = gl.createShader(gl.FRAGMENT_SHADER);
gl.shaderSource(
  shader,
  \[dq]void main() { gl_FragColor = vec4(gl_FragCoord.x, 0.0, 0.0, 1.0); }\[dq],
);
gl.compileShader(shader);

const src = gl
  .getExtension(\[dq]WEBGL_debug_shaders\[dq])
  .getTranslatedShaderSource(shader);
console.log(src);
// \[dq]void main(){
// (gl_FragColor = vec4(gl_FragCoord.x, 0.0, 0.0, 1.0));
// }\[dq]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLShader\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.compileShader()\f[R]
