.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "HTMLInputElement.files" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLInputElement.files \- HTMLInputElement: files property
.SH SYNOPSIS
The \f[B]\f[CB]HTMLInputElement.files\f[B]\f[R] property allows you to
access the \f[CR]FileList\f[R] selected with the
\f[CR]<input type=\[dq]file\[dq]>\f[R] element.
.SH VALUE
A \f[CR]FileList\f[R] object listing the selected files, if any, or
\f[CR]null\f[R] if the \f[B]\f[CB]HTMLInputElement\f[B]\f[R] is not of
\f[CR]type=\[dq]file\[dq]\f[R].
.SH EXAMPLES
The example below shows how you can access the
\f[B]\f[CB]HTMLInputElement.files\f[B]\f[R] property and log the name,
date modified, size, and type of each file selected by the user.
.SS HTML
.IP
.EX
<input id=\[dq]files\[dq] type=\[dq]file\[dq] multiple />
.EE
.SS JavaScript
Note that \f[B]\f[CB]HTMLInputElement.files\f[B]\f[R] still returns an
instance of \f[CR]FileList\f[R] even if no files are selected.
Therefore it\[cq]s safe to iterate through it with \f[CR]for...of\f[R]
without checking if any files are selected.
.IP
.EX
const fileInput = document.getElementById(\[dq]files\[dq]);

console.log(fileInput.files instanceof FileList); // true even if empty

for (const file of fileInput.files) {
  console.log(file.name); // prints file name
  let fileDate = new Date(file.lastModified);
  console.log(fileDate.toLocaleDateString()); // prints legible date
  console.log(
    file.size < 1000 ? file.size : Math.round(file.size / 1000) + \[dq]KB\[dq],
  );
  console.log(file.type); // prints MIME type
}
.EE
