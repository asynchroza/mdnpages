.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "WebSocket" "JS" "March 16, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebSocket \- WebSocket
.SH SYNOPSIS
The \f[CR]WebSocket\f[R] object provides the API for creating and
managing a WebSocket connection to a server, as well as for sending and
receiving data on the connection.
.PP
To construct a \f[CR]WebSocket\f[R], use the \f[CR]WebSocket()\f[R]
constructor.
.PP
This feature is available in Web Workers.
.SH CONSTRUCTOR
.TP
\f[B]WebSocket()\f[R]
Returns a newly created \f[CR]WebSocket\f[R] object.
.SH INSTANCE PROPERTIES
.TP
\f[B]WebSocket.binaryType\f[R]
The binary data type used by the connection.
.TP
\f[B]WebSocket.bufferedAmount\f[R] \f[I](read\-only)\f[R]
The number of bytes of queued data.
.TP
\f[B]WebSocket.extensions\f[R] \f[I](read\-only)\f[R]
The extensions selected by the server.
.TP
\f[B]WebSocket.protocol\f[R] \f[I](read\-only)\f[R]
The sub\-protocol selected by the server.
.TP
\f[B]WebSocket.readyState\f[R] \f[I](read\-only)\f[R]
The current state of the connection.
.TP
\f[B]WebSocket.url\f[R] \f[I](read\-only)\f[R]
The absolute URL of the WebSocket.
.SH INSTANCE METHODS
.TP
\f[B]WebSocket.close()\f[R]
Closes the connection.
.TP
\f[B]WebSocket.send()\f[R]
Enqueues data to be transmitted.
.SH EVENTS
Listen to these events using \f[CR]addEventListener()\f[R] or by
assigning an event listener to the \f[CR]oneventname\f[R] property of
this interface.
.TP
\f[B]close\f[R]
Fired when a connection with a \f[CR]WebSocket\f[R] is closed.
Also available via the \f[CR]onclose\f[R] property
.TP
\f[B]error\f[R]
Fired when a connection with a \f[CR]WebSocket\f[R] has been closed
because of an error, such as when some data couldn\[cq]t be sent.
Also available via the \f[CR]onerror\f[R] property.
.TP
\f[B]message\f[R]
Fired when data is received through a \f[CR]WebSocket\f[R].
Also available via the \f[CR]onmessage\f[R] property.
.TP
\f[B]open\f[R]
Fired when a connection with a \f[CR]WebSocket\f[R] is opened.
Also available via the \f[CR]onopen\f[R] property.
.SH EXAMPLES
.IP
.EX
// Create WebSocket connection.
const socket = new WebSocket(\[dq]ws://localhost:8080\[dq]);

// Connection opened
socket.addEventListener(\[dq]open\[dq], (event) => {
  socket.send(\[dq]Hello Server!\[dq]);
});

// Listen for messages
socket.addEventListener(\[dq]message\[dq], (event) => {
  console.log(\[dq]Message from server \[dq], event.data);
});
.EE
.SH SEE ALSO
.IP \[bu] 2
Writing WebSocket client applications
