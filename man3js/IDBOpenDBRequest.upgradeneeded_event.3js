.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "IDBOpenDBRequest.upgradeneeded_event" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
IDBOpenDBRequest.upgradeneeded_event \- IDBOpenDBRequest: upgradeneeded
event
.SH SYNOPSIS
The \f[CR]upgradeneeded\f[R] event is fired when an attempt was made to
open a database with a version number higher than its current version.
.PP
This event is not cancelable and does not bubble.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]upgradeneeded\[dq], (event) => {});

onupgradeneeded = (event) => {};
.EE
.SH EVENT TYPE
An \f[CR]IDBVersionChangeEvent\f[R].
Inherits from \f[CR]Event\f[R].
.SH EVENT PROPERTIES
\f[I]Also inherits properties from its parent, \f[CI]Event\f[I]
interface.\f[R]
.TP
\f[B]IDBVersionChangeEvent.oldVersion\f[R] \f[I](read\-only)\f[R]
Returns the old version of the database.
.TP
\f[B]IDBVersionChangeEvent.newVersion\f[R] \f[I](read\-only)\f[R]
Returns the new version of the database.
.SH EXAMPLES
This example opens a database and handles the \f[CR]upgradeneeded\f[R]
event by making any necessary updates to the object store.
.IP
.EX
// Open the database
const dBOpenRequest = window.indexedDB.open(\[dq]toDoList\[dq], 4);

dBOpenRequest.addEventListener(\[dq]upgradeneeded\[dq], (event) => {
  const db = event.target.result;
  console.log(\[ga]Upgrading to version ${db.version}\[ga]);

  // Create an objectStore for this database
  const objectStore = db.createObjectStore(\[dq]toDoList\[dq], {
    keyPath: \[dq]taskTitle\[dq],
  });

  // define what data items the objectStore will contain
  objectStore.createIndex(\[dq]hours\[dq], \[dq]hours\[dq], { unique: false });
  objectStore.createIndex(\[dq]minutes\[dq], \[dq]minutes\[dq], { unique: false });
  objectStore.createIndex(\[dq]day\[dq], \[dq]day\[dq], { unique: false });
  objectStore.createIndex(\[dq]month\[dq], \[dq]month\[dq], { unique: false });
  objectStore.createIndex(\[dq]year\[dq], \[dq]year\[dq], { unique: false });
});
.EE
.PP
This is the same example, but uses the onupgradeneeded event handler
property.
.IP
.EX
// Open the database
const dBOpenRequest = window.indexedDB.open(\[dq]toDoList\[dq], 4);

dBOpenRequest.onupgradeneeded = (event) => {
  const db = event.target.result;
  console.log(\[ga]Upgrading to version ${db.version}\[ga]);

  // Create an objectStore for this database
  const objectStore = db.createObjectStore(\[dq]toDoList\[dq], {
    keyPath: \[dq]taskTitle\[dq],
  });

  // define what data items the objectStore will contain
  objectStore.createIndex(\[dq]hours\[dq], \[dq]hours\[dq], { unique: false });
  objectStore.createIndex(\[dq]minutes\[dq], \[dq]minutes\[dq], { unique: false });
  objectStore.createIndex(\[dq]day\[dq], \[dq]day\[dq], { unique: false });
  objectStore.createIndex(\[dq]month\[dq], \[dq]month\[dq], { unique: false });
  objectStore.createIndex(\[dq]year\[dq], \[dq]year\[dq], { unique: false });
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Using IndexedDB
