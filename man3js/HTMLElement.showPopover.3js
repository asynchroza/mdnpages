.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "HTMLElement.showPopover" "JS" "June 16, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLElement.showPopover \- HTMLElement: showPopover() method
.SH SYNOPSIS
The \f[B]\f[CB]showPopover()\f[B]\f[R] method of the
\f[CR]HTMLElement\f[R] interface shows a popover element (i.e.\ one that
has a valid \f[CR]popover\f[R] attribute) by adding it to the top layer.
.PP
When \f[CR]showPopover()\f[R] is called on an element with the
\f[CR]popover\f[R] attribute that is currently hidden, a
\f[CR]beforetoggle\f[R] event will be fired, followed by the popover
showing, and then the \f[CR]toggle\f[R] event firing.
If the element is already showing, an error will be thrown.
.SH SYNTAX
.IP
.EX
showPopover()
.EE
.SS Parameters
None.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
Thrown if the popover is already showing.
.SH EXAMPLES
The following example provides functionality to show a popover by
pressing a particular key on the keyboard.
.PP
First, some HTML:
.IP
.EX
<div id=\[dq]mypopover\[dq]>
  <h2>Help!</h2>

  <p>You can use the following commands to control the app</p>

  <ul>
    <li>Press <ins>C</ins> to order cheese</li>
    <li>Press <ins>T</ins> to order tofu</li>
    <li>Press <ins>B</ins> to order bacon</li>
    <hr />
    <li>Say \[dq]Service\[dq] to summon the robot waiter to take your order</li>
    <li>Say \[dq]Escape\[dq] to engage the ejector seat</li>
  </ul>
</div>
.EE
.PP
And now the JavaScript to wire up the functionality:
.IP
.EX
const popover = document.getElementById(\[dq]mypopover\[dq]);

document.addEventListener(\[dq]keydown\[dq], (event) => {
  if (event.key === \[dq]h\[dq]) {
    popover.showPopover();
  }
});
.EE
.SH SEE ALSO
.IP \[bu] 2
Popover API
