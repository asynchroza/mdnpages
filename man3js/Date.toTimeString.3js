'\" t
.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Date.toTimeString" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
Date.toTimeString - Date.prototype.toTimeString()
.SH SYNOPSIS
.PP
The \f[B]\f[VB]toTimeString()\f[B]\f[R] method of \f[V]Date\f[R]
instances returns a string representing the time portion of this date
interpreted in the local timezone.
.SH SYNTAX
.IP
.nf
\f[C]
toTimeString()
\f[R]
.fi
.SS Return value
.PP
A string representing the time portion of the given date (see
description for the format).
Returns \f[V]\[dq]Invalid Date\[dq]\f[R] if the date is invalid.
.SH DESCRIPTION
.PP
\f[V]Date\f[R] instances refer to a specific point in time.
\f[V]toTimeString()\f[R] interprets the date in the local timezone and
formats the \f[I]time\f[R] part in English.
It always uses the format of \f[V]hh:mm:ss GMT±xxxx (TZ)\f[R], where:
.PP
.TS
tab(@);
lw(8.0n) lw(62.0n).
T{
Format String
T}@T{
Description
T}
_
T{
\f[V]hh\f[R]
T}@T{
Hour, as two digits with leading zero if required
T}
T{
\f[V]mm\f[R]
T}@T{
Minute, as two digits with leading zero if required
T}
T{
\f[V]ss\f[R]
T}@T{
Seconds, as two digits with leading zero if required
T}
T{
\f[V]±xxxx\f[R]
T}@T{
The local timezone\[cq]s offset \[em] two digits for hours and two
digits for minutes (e.g.\ \f[V]-0500\f[R], \f[V]+0800\f[R])
T}
T{
\f[V]TZ\f[R]
T}@T{
The timezone\[cq]s name (e.g.\ \f[V]PDT\f[R], \f[V]PST\f[R])
T}
.TE
.PP
For example: \[lq]04:42:04 GMT+0000 (Coordinated Universal Time)\[rq].
.IP \[bu] 2
If you only want to get the \f[I]date\f[R] part, use
\f[V]toDateString()\f[R].
.IP \[bu] 2
If you want to get both the date and time, use \f[V]toString()\f[R].
.IP \[bu] 2
If you want to make the date interpreted as UTC instead of local
timezone, use \f[V]toUTCString()\f[R].
.IP \[bu] 2
If you want to format the date in a more user-friendly format
(e.g.\ localization), use \f[V]toLocaleTimeString()\f[R].
.SH EXAMPLES
.SS Using toTimeString()
.IP
.nf
\f[C]
const d = new Date(0);

console.log(d.toString()); // \[dq]Thu Jan 01 1970 00:00:00 GMT+0000 (Coordinated Universal Time)\[dq]
console.log(d.toTimeString()); // \[dq]00:00:00 GMT+0000 (Coordinated Universal Time)\[dq]
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
\f[V]Date.prototype.toLocaleTimeString()\f[R]
.IP \[bu] 2
\f[V]Date.prototype.toDateString()\f[R]
.IP \[bu] 2
\f[V]Date.prototype.toString()\f[R]
