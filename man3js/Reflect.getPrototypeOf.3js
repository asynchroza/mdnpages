.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "Reflect.getPrototypeOf" "JS" "March 3, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Reflect.getPrototypeOf - Reflect.getPrototypeOf()
.SH SYNOPSIS
The \f[B]\f[CB]Reflect.getPrototypeOf()\f[B]\f[R] static method is like
\f[CR]Object.getPrototypeOf()\f[R].
It returns the prototype of the specified object.
.SH SYNTAX
.IP
.EX
Reflect.getPrototypeOf(target)
.EE
.SS Parameters
.TP
\f[B]target\f[R]
The target object of which to get the prototype.
.SS Return value
The prototype of the given object, which may be an object or
\f[CR]null\f[R].
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if \f[CR]target\f[R] is not an object.
.SH DESCRIPTION
\f[CR]Reflect.getPrototypeOf()\f[R] provides the reflective semantic of
retrieving the prototype of an object.
The only difference with \f[CR]Object.getPrototypeOf()\f[R] is how
non-object targets are handled.
\f[CR]Reflect.getPrototypeOf()\f[R] throws a \f[CR]TypeError\f[R] if the
target is not an object, while \f[CR]Object.getPrototypeOf()\f[R]
coerces it to an object.
.PP
\f[CR]Reflect.getPrototypeOf()\f[R] invokes the
\f[CR][[GetPrototypeOf]]\f[R] object internal method of
\f[CR]target\f[R].
.SH EXAMPLES
.SS Using Reflect.getPrototypeOf()
.IP
.EX
Reflect.getPrototypeOf({}); // Object.prototype
Reflect.getPrototypeOf(Object.prototype); // null
Reflect.getPrototypeOf(Object.create(null)); // null
.EE
.SS Difference with Object.getPrototypeOf()
.IP
.EX
// Same result for Objects
Object.getPrototypeOf({}); // Object.prototype
Reflect.getPrototypeOf({}); // Object.prototype

// Both throw in ES5 for non-Objects
Object.getPrototypeOf(\[dq]foo\[dq]); // Throws TypeError
Reflect.getPrototypeOf(\[dq]foo\[dq]); // Throws TypeError

// In ES2015 only Reflect throws, Object coerces non-Objects
Object.getPrototypeOf(\[dq]foo\[dq]); // String.prototype
Reflect.getPrototypeOf(\[dq]foo\[dq]); // Throws TypeError

// To mimic the Object ES2015 behavior you need to coerce
Reflect.getPrototypeOf(Object(\[dq]foo\[dq])); // String.prototype
.EE
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[CR]Reflect.getPrototypeOf\f[R] in
\f[CR]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-reflect)
.IP \[bu] 2
\f[CR]Reflect\f[R]
.IP \[bu] 2
\f[CR]Object.getPrototypeOf()\f[R]
.IP \[bu] 2
\f[CR]Proxy\f[R]\[cq]s \f[CR]getPrototypeOf\f[R] handler
