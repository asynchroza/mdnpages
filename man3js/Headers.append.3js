.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Headers.append" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Headers.append \- Headers: append() method
.SH SYNOPSIS
The \f[B]\f[CB]append()\f[B]\f[R] method of the \f[CR]Headers\f[R]
interface appends a new value onto an existing header inside a
\f[CR]Headers\f[R] object, or adds the header if it does not already
exist.
.PP
The difference between \f[CR]set()\f[R] and \f[CR]append()\f[R] is that
if the specified header already exists and accepts multiple values,
\f[CR]set()\f[R] will overwrite the existing value with the new one,
whereas \f[CR]append()\f[R] will append the new value onto the end of
the set of values.
.PP
For security reasons, some headers can only be controlled by the user
agent.
These headers include the forbidden header names and forbidden response
header names.
.SH SYNTAX
.IP
.EX
append(name, value)
.EE
.SS Parameters
.TP
\f[B]name\f[R]
The name of the HTTP header you want to add to the \f[CR]Headers\f[R]
object.
.TP
\f[B]value\f[R]
The value of the HTTP header you want to add.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
Creating an empty \f[CR]Headers\f[R] object is simple:
.IP
.EX
const myHeaders = new Headers(); // Currently empty
.EE
.PP
You could add a header to this using \f[CR]append()\f[R]:
.IP
.EX
myHeaders.append(\[dq]Content\-Type\[dq], \[dq]image/jpeg\[dq]);
myHeaders.get(\[dq]Content\-Type\[dq]); // Returns \[aq]image/jpeg\[aq]
.EE
.PP
If the specified header already exists, \f[CR]append()\f[R] will change
its value to the specified value.
If the specified header already exists and accepts multiple values,
\f[CR]append()\f[R] will append the new value to the end of the value
set:
.IP
.EX
myHeaders.append(\[dq]Accept\-Encoding\[dq], \[dq]deflate\[dq]);
myHeaders.append(\[dq]Accept\-Encoding\[dq], \[dq]gzip\[dq]);
myHeaders.get(\[dq]Accept\-Encoding\[dq]); // Returns \[aq]deflate, gzip\[aq]
.EE
.PP
To overwrite the old value with a new one, use \f[CR]Headers.set\f[R].
.SH SEE ALSO
.IP \[bu] 2
ServiceWorker API
.IP \[bu] 2
HTTP access control (CORS)
.IP \[bu] 2
HTTP
