.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "String.fontsize" "JS" "February 21, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
String.fontsize - String.prototype.fontsize()
.SH SYNOPSIS
\f[I](deprecated)\f[R]
.PP
The \f[B]\f[CB]fontsize()\f[B]\f[R] method creates a string that embeds
a string in a \f[CR]<font>\f[R] element
(\f[CR]<font size=\[dq]...\[dq]>str</font>\f[R]), which causes a string
to be displayed in the specified font size.
.RS
.PP
\f[B]Note:\f[R] All HTML wrapper methods are deprecated and only
standardized for compatibility purposes.
For the case of \f[CR]fontsize()\f[R], the \f[CR]<font>\f[R] element
itself has been removed in HTML5 and shouldn\[cq]t be used anymore.
Web developers should use CSS properties instead.
.RE
.SH SYNTAX
.IP
.EX
fontsize(size)
.EE
.SS Parameters
.TP
\f[B]size\f[R]
An integer between 1 and 7, or a string representing a signed integer
between 1 and 7.
.SS Return value
A string beginning with a \f[CR]<font size=\[dq]size\[dq]>\f[R] start
tag (double quotes in \f[CR]size\f[R] are replaced with
\f[CR]&quot;\f[R]), then the text \f[CR]str\f[R], and then a
\f[CR]</font>\f[R] end tag.
.SH DESCRIPTION
The \f[CR]fontsize()\f[R] method itself simply joins the string parts
together without any validation or normalization.
However, to create valid \f[CR]<font>\f[R] elements, When you specify
size as an integer, you set the font size of \f[CR]str\f[R] to one of
the 7 defined sizes.
You can specify \f[CR]size\f[R] as a string such as
\f[CR]\[dq]-2\[dq]\f[R] or \f[CR]\[dq]+3\[dq]\f[R] to adjust the font
size of \f[CR]str\f[R] relative to 3, the default value.
.SH EXAMPLES
.SS Using fontsize()
The following example uses string methods to change the size of a
string:
.IP
.EX
const worldString = \[dq]Hello, world\[dq];

console.log(worldString.small()); // <small>Hello, world</small>
console.log(worldString.big()); // <big>Hello, world</big>
console.log(worldString.fontsize(7)); // <font size=\[dq]7\[dq]>Hello, world</font>
.EE
.PP
With the \f[CR]element.style\f[R] object you can get the element\[cq]s
\f[CR]style\f[R] attribute and manipulate it more generically, for
example:
.IP
.EX
document.getElementById(\[dq]yourElemId\[dq]).style.fontSize = \[dq]0.7em\[dq];
.EE
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[CR]String.prototype.fontsize\f[R] in
\f[CR]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-string-and-regexp)
.IP \[bu] 2
\f[CR]String.prototype.big()\f[R]
.IP \[bu] 2
\f[CR]String.prototype.small()\f[R]
