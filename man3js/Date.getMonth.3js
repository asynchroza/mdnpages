.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "Date.getMonth" "JS" "June 1, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Date.getMonth - Date.prototype.getMonth()
.SH SYNOPSIS
The \f[B]\f[CB]getMonth()\f[B]\f[R] method of \f[CR]Date\f[R] instances
returns the month for this date according to local time, as a zero-based
value (where zero indicates the first month of the year).
.SH SYNTAX
.IP
.EX
getMonth()
.EE
.SS Return value
An integer, between 0 and 11, representing the month for the given date
according to local time: 0 for January, 1 for February, and so on.
Returns \f[CR]NaN\f[R] if the date is invalid.
.SH DESCRIPTION
The return value of \f[CR]getMonth()\f[R] is zero-based, which is useful
for indexing into arrays of months, for example:
.IP
.EX
const valentines = new Date(\[dq]1995-02-14\[dq]);
const month = valentines.getMonth();
const monthNames = [\[dq]January\[dq], \[dq]February\[dq], \[dq]March\[dq] /* , \&... */];

console.log(monthNames[month]); // \[dq]February\[dq]
.EE
.PP
However, for the purpose of internationalization, you should prefer
using \f[CR]Intl.DateTimeFormat\f[R] with the \f[CR]options\f[R]
parameter instead.
.IP
.EX
const options = { month: \[dq]long\[dq] };
console.log(new Intl.DateTimeFormat(\[dq]en-US\[dq], options).format(valentines));
// \[dq]February\[dq]
console.log(new Intl.DateTimeFormat(\[dq]de-DE\[dq], options).format(valentines));
// \[dq]Februar\[dq]
.EE
.SH EXAMPLES
.SS Using getMonth()
The \f[CR]month\f[R] variable has value \f[CR]11\f[R], based on the
value of the \f[CR]Date\f[R] object \f[CR]xmas95\f[R].
.IP
.EX
const xmas95 = new Date(\[dq]1995-12-25T23:15:30\[dq]);
const month = xmas95.getMonth();

console.log(month); // 11
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Date.prototype.getUTCMonth()\f[R]
.IP \[bu] 2
\f[CR]Date.prototype.setMonth()\f[R]
