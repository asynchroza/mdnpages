.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "EvalError.EvalError" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
EvalError.EvalError - EvalError() constructor
.SH SYNOPSIS
.PP
The \f[B]\f[VB]EvalError()\f[B]\f[R] constructor creates
\f[V]EvalError\f[R] objects.
.SH SYNTAX
.IP
.nf
\f[C]
new EvalError()
new EvalError(message)
new EvalError(message, options)
new EvalError(message, fileName)
new EvalError(message, fileName, lineNumber)

EvalError()
EvalError(message)
EvalError(message, options)
EvalError(message, fileName)
EvalError(message, fileName, lineNumber)
\f[R]
.fi
.RS
.PP
\f[B]Note:\f[R] \f[V]EvalError()\f[R] can be called with or without
\f[V]new\f[R].
Both create a new \f[V]EvalError\f[R] instance.
.RE
.SS Parameters
.TP
\f[B]message\f[R] \f[I](optional)\f[R]
Human-readable description of the error.
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object that has the following properties:
.RS
.TP
\f[B]cause\f[R] \f[I](optional)\f[R]
A property indicating the specific cause of the error.
When catching and re-throwing an error with a more-specific or useful
error message, this property can be used to pass the original error.
.RE
.TP
\f[B]fileName\f[R] \f[I](optional)\f[R] \f[I](non-standard)\f[R]
The name of the file containing the code that caused the exception
.TP
\f[B]lineNumber\f[R] \f[I](optional)\f[R] \f[I](non-standard)\f[R]
The line number of the code that caused the exception
.SH EXAMPLES
.PP
\f[V]EvalError\f[R] is not used in the current ECMAScript specification
and will thus not be thrown by the runtime.
However, the object itself remains for backwards compatibility with
earlier versions of the specification.
.SS Creating an EvalError
.IP
.nf
\f[C]
try {
  throw new EvalError(\[dq]Hello\[dq]);
} catch (e) {
  console.log(e instanceof EvalError); // true
  console.log(e.message); // \[dq]Hello\[dq]
  console.log(e.name); // \[dq]EvalError\[dq]
  console.log(e.stack); // Stack of the error
}
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
\f[V]Error\f[R]
.IP \[bu] 2
\f[V]eval()\f[R]
