.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "WakeLock.request" "JS" "December 17, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WakeLock.request \- WakeLock: request() method
.SH SYNOPSIS
\f[B]Secure context\f[R]: This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]request()\f[B]\f[R] method of the \f[CR]WakeLock\f[R]
interface returns a \f[CR]Promise\f[R] that resolves with a
\f[CR]WakeLockSentinel\f[R] object, which allows control over screen
dimming and locking.
.SH SYNTAX
.IP
.EX
request(type)
.EE
.SS Parameters
.TP
\f[B]type\f[R] \f[I](optional)\f[R]
A string specifying the screen wake lock type, from among the following
enumerated types:
.RS
.TP
\f[B]screen\f[R]
Prevents the screen from turning off.
Only visible documents can acquire the screen wake lock.
.RE
.PP
If no \f[CR]type\f[R] parameter is explicitly specified, the
\f[CR]request()\f[R] method defaults to using the \f[CR]screen\f[R]
type.
.SS Return value
A \f[CR]Promise\f[R] that resolves with a \f[CR]WakeLockSentinel\f[R]
object.
.SS Exceptions
.TP
\f[B]NotAllowedError\f[R] \f[B]DOMException\f[R]
Thrown when wake lock is not available, which can happen because:
.RS
.IP \[bu] 2
Use of this feature is blocked by a Permissions Policy.
.IP \[bu] 2
The document is not fully active.
.IP \[bu] 2
The document\[cq]s visibility state is \f[CR]hidden\f[R].
.IP \[bu] 2
The User Agent could not acquire platform\[cq]s wake lock.
.RE
.SH EXAMPLES
The following asynchronous function requests a
\f[CR]WakeLockSentinel\f[R] object.
The \f[CR]request()\f[R] method is wrapped in a \f[CR]try...catch\f[R]
statement to account for if the browser refuses the request for any
reason.
.IP
.EX
const requestWakeLock = async () => {
  try {
    const wakeLock = await navigator.wakeLock.request(\[dq]screen\[dq]);
  } catch (err) {
    // The wake lock request fails \- usually system\-related, such as low battery.

    console.log(\[ga]${err.name}, ${err.message}\[ga]);
  }
};

requestWakeLock();
.EE
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://developer.chrome.com/docs/capabilities/web-apis/wake-lock/
Stay awake with the Screen Wake Lock API
.UE \c
