.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "HTMLElement.dragenter_event" "JS" "December 5, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLElement.dragenter_event \- HTMLElement: dragenter event
.SH SYNOPSIS
The \f[CR]dragenter\f[R] event is fired when a dragged element or text
selection enters a valid drop target.
The target object is the \f[I]immediate user selection\f[R] (the element
directly indicated by the user as the drop target), or the
\f[CR]<body>\f[R] element.
.PP
This event is cancelable and may bubble up to the \f[CR]Document\f[R]
and \f[CR]Window\f[R] objects.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]dragenter\[dq], (event) => {});

ondragenter = (event) => {};
.EE
.SH EVENT TYPE
A \f[CR]DragEvent\f[R].
Inherits from \f[CR]Event\f[R].
.SH EVENT PROPERTIES
\f[I]In addition to the properties listed below, properties from the
parent interface, \f[CI]Event\f[I], are available.\f[R]
.TP
\f[B]DragEvent.dataTransfer\f[R] \f[I](read\-only)\f[R]
The data that is transferred during a drag\-and\-drop interaction.
.SH EXAMPLES
.SS Styling drop zones on dragenter
In this example, we have a draggable element inside a container.
Try grabbing the element, dragging it over the other container, and
releasing it.
.PP
We listen for the \f[CR]dragenter\f[R] event to give the other container
a purple background while the draggable element is over it to signal
that the draggable element could be dropped onto the container.
.PP
However, in this partial example, we haven\[cq]t implemented dropping:
for a complete example of drag and drop, see the page for the
\f[CR]drag\f[R] event.
.SS HTML
.IP
.EX
<div class=\[dq]dropzone\[dq]>
  <div id=\[dq]draggable\[dq] draggable=\[dq]true\[dq]>This div is draggable</div>
</div>
<div class=\[dq]dropzone\[dq] id=\[dq]droptarget\[dq]></div>
.EE
.SS CSS
.IP
.EX
body {
  /* Prevent the user from selecting text in the example */
  user\-select: none;
}

draggable {
  text\-align: center;
  background: white;
}

\&.dropzone {
  width: 200px;
  height: 20px;
  background: blueviolet;
  margin: 10px;
  padding: 10px;
}

\&.dropzone.dragover {
  background\-color: purple;
}
.EE
.SS JavaScript
.IP
.EX
const target = document.getElementById(\[dq]droptarget\[dq]);
target.addEventListener(\[dq]dragenter\[dq], (event) => {
  // highlight potential drop target when the draggable element enters it
  if (event.target.classList.contains(\[dq]dropzone\[dq])) {
    event.target.classList.add(\[dq]dragover\[dq]);
  }
});

target.addEventListener(\[dq]dragleave\[dq], (event) => {
  // reset background of potential drop target when the draggable element leaves it
  if (event.target.classList.contains(\[dq]dropzone\[dq])) {
    event.target.classList.remove(\[dq]dragover\[dq]);
  }
});
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
Other drag and drop events:
.RS 2
.IP \[bu] 2
\f[CR]drag\f[R]
.IP \[bu] 2
\f[CR]dragstart\f[R]
.IP \[bu] 2
\f[CR]dragend\f[R]
.IP \[bu] 2
\f[CR]dragover\f[R]
.IP \[bu] 2
\f[CR]dragleave\f[R]
.IP \[bu] 2
\f[CR]drop\f[R]
.RE
