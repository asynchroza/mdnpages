.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "Boolean.toString" "JS" "August 25, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Boolean.toString - Boolean.prototype.toString()
.SH SYNOPSIS
The \f[B]\f[CB]toString()\f[B]\f[R] method of \f[CR]Boolean\f[R] values
returns a string representing the specified boolean value.
.SH SYNTAX
.IP
.EX
toString()
.EE
.SS Parameters
None.
.SS Return value
A string representing the specified boolean value.
.SH DESCRIPTION
The \f[CR]Boolean\f[R] object overrides the \f[CR]toString\f[R] method
of \f[CR]Object\f[R]; it does not inherit
\f[CR]Object.prototype.toString()\f[R].
For \f[CR]Boolean\f[R] values, the \f[CR]toString\f[R] method returns a
string representation of the boolean value, which is either
\f[CR]\[dq]true\[dq]\f[R] or \f[CR]\[dq]false\[dq]\f[R].
.PP
The \f[CR]toString()\f[R] method requires its \f[CR]this\f[R] value to
be a \f[CR]Boolean\f[R] primitive or wrapper object.
It throws a \f[CR]TypeError\f[R] for other \f[CR]this\f[R] values
without attempting to coerce them to boolean values.
.PP
Because \f[CR]Boolean\f[R] doesn\[cq]t have a
\f[CR][\[at]\[at]toPrimitive]()\f[R] method, JavaScript calls the
\f[CR]toString()\f[R] method automatically when a \f[CR]Boolean\f[R]
\f[I]object\f[R] is used in a context expecting a string, such as in a
template literal.
However, boolean \f[I]primitive\f[R] values do not consult the
\f[CR]toString()\f[R] method to be coerced to strings \[em] rather, they
are directly converted using the same algorithm as the initial
\f[CR]toString()\f[R] implementation.
.IP
.EX
Boolean.prototype.toString = () => \[dq]Overridden\[dq];
console.log(\[ga]${true}\[ga]); // \[dq]true\[dq]
console.log(\[ga]${new Boolean(true)}\[ga]); // \[dq]Overridden\[dq]
.EE
.SH EXAMPLES
.SS Using toString()
.IP
.EX
const flag = new Boolean(true);
console.log(flag.toString()); // \[dq]true\[dq]
console.log(false.toString()); // \[dq]false\[dq]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Object.prototype.toString()\f[R]
