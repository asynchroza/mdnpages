.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "TypedArray.with" "JS" "April 9, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TypedArray.with - TypedArray.prototype.with()
.SH SYNOPSIS
The \f[B]\f[CB]with()\f[B]\f[R] method is the copying version of using
the bracket notation to change the value of a given index.
It returns a new array with the element at the given index replaced with
the given value.
This method has the same algorithm as \f[CR]Array.prototype.with()\f[R].
\f[I]TypedArray\f[R] is one of the typed array types here.
.SH SYNTAX
.IP
.EX
array.with(index, value)
.EE
.SS Parameters
.TP
\f[B]index\f[R]
Zero-based index at which to change the array, converted to an integer.
.RS
.IP \[bu] 2
Negative index counts back from the end of the array \[em] if
\f[CR]start < 0\f[R], \f[CR]start + array.length\f[R] is used.
.IP \[bu] 2
If \f[CR]start\f[R] is omitted, \f[CR]0\f[R] is used.
.IP \[bu] 2
If the index, with negative values counted backwards, is out of bounds,
a \f[CR]RangeError\f[R] is thrown.
.RE
.TP
\f[B]value\f[R]
Any value to be assigned to the given index.
.SS Return value
A new typed array with the element at \f[CR]index\f[R] replaced with
\f[CR]value\f[R].
.SS Exceptions
.TP
\f[B]RangeError\f[R]
Thrown if \f[CR]index > array.length\f[R] or
\f[CR]index < -array.length\f[R].
.SH EXAMPLES
.SS Using with()
.IP
.EX
const arr = new Uint8Array([1, 2, 3, 4, 5]);
console.log(arr.with(2, 6)); // Uint8Array [1, 2, 6, 4, 5]
console.log(arr); // Uint8Array [1, 2, 3, 4, 5]
.EE
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[CR]TypedArray.prototype.with\f[R] in
\f[CR]core-js\f[R] (https://github.com/zloirock/core-js#change-array-by-copy)
.IP \[bu] 2
\f[CR]Array.prototype.with()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.toReversed()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.toSorted()\f[R]
