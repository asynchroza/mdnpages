.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "CSSFontFeatureValuesRule.fontFamily" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CSSFontFeatureValuesRule.fontFamily \- CSSFontFeatureValuesRule:
fontFamily property
.SH SYNOPSIS
The \f[B]\f[CB]fontFamily\f[B]\f[R] property of the
\f[CR]CSSConditionRule\f[R] interface represents the name of the font
family it applies to.
.SH VALUE
A string.
.SH EXAMPLES
.SS Read font family
In this example, we declare two \f[CR]\[at]font\-feature\-values\f[R]
one for the \f[I]Font One\f[R] font family, and the other for \f[I]Font
Two\f[R].
We then use the CSSOM to read these font families, displaying them into
the log.
.IP
.EX
<pre id=\[dq]log\[dq]></pre>
.EE
.SS CSS
.IP
.EX
/* At\-rule for \[dq]nice\-style\[dq] in Font One */
\[at]font\-feature\-values Font One {
  \[at]styleset {
    nice\-style: 12;
  }
}

/* At\-rule for \[dq]nice\-style\[dq] in Font Two */
\[at]font\-feature\-values Font Two {
  \[at]styleset {
    nice\-style: 4;
  }
}

/* Apply the at\-rules with a single declaration */
\&.nice\-look {
  font\-variant\-alternates: styleset(nice\-style);
}
.EE
.SS JavaScript
.IP
.EX
const log = document.getElementById(\[dq]log\[dq]);
const rules = document.styleSheets[document.styleSheets.length \- 1].cssRules;

const fontOne = rules[0]; // A CSSFontFeatureValuesRule
log.textContent = \[ga]The 1st \[aq]\[at]font\-feature\-values\[aq] family: \[dq]${fontOne.fontFamily}\[dq].\[rs]n\[ga];

const fontTwo = rules[1]; // Another CSSFontFeatureValuesRule
log.textContent += \[ga]The 2nd \[aq]\[at]font\-feature\-values\[aq] family: \[dq]${fontTwo.fontFamily}\[dq].\[ga];
.EE
.SH SEE ALSO
.IP \[bu] 2
