.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "String.repeat" "JS" "2023-06-02" "JavaScript" "JavaScript Reference Manual"
.hy
.SH Synopsis
.PP
The \f[B]\f[VB]repeat()\f[B]\f[R] method constructs and returns a new
string which contains the specified number of copies of the string on
which it was called, concatenated together.
.SH Syntax
.IP
.nf
\f[C]
repeat(count)
\f[R]
.fi
.SS Parameters
.IP \[bu] 2
\f[V]count\f[R]
.RS 2
.IP \[bu] 2
An integer between \f[V]0\f[R] and \f[V]+Infinity\f[R], indicating the
number of times to repeat the string.
.RE
.SS Return value
.PP
A new string containing the specified number of copies of the given
string.
.SS Exceptions
.IP \[bu] 2
\f[V]RangeError\f[R]
.RS 2
.IP \[bu] 2
Thrown if \f[V]count\f[R] is negative or if \f[V]count\f[R] overflows
maximum string length.
.RE
.SH Examples
.SS Using repeat()
.IP
.nf
\f[C]
\[dq]abc\[dq].repeat(-1); // RangeError
\[dq]abc\[dq].repeat(0); // \[aq]\[aq]
\[dq]abc\[dq].repeat(1); // \[aq]abc\[aq]
\[dq]abc\[dq].repeat(2); // \[aq]abcabc\[aq]
\[dq]abc\[dq].repeat(3.5); // \[aq]abcabcabc\[aq] (count will be converted to integer)
\[dq]abc\[dq].repeat(1 / 0); // RangeError

({ toString: () => \[dq]abc\[dq], repeat: String.prototype.repeat }).repeat(2);
// \[aq]abcabc\[aq] (repeat() is a generic method)
\f[R]
.fi
.SH See also
.IP \[bu] 2
Polyfill of \f[V]String.prototype.repeat\f[R] in
\f[V]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-string-and-regexp)
.IP \[bu] 2
\f[V]String.prototype.concat()\f[R]
