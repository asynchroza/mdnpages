.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "SharedArrayBuffer.SharedArrayBuffer" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
SharedArrayBuffer.SharedArrayBuffer - SharedArrayBuffer() constructor
.SH SYNOPSIS
.RS
.PP
\f[B]Note:\f[R] The \f[V]SharedArrayBuffer\f[R] constructor may not
always be globally available unless certain security requirements are
met.
.RE
.PP
The \f[B]\f[VB]SharedArrayBuffer()\f[B]\f[R] constructor creates
\f[V]SharedArrayBuffer\f[R] objects.
.SH SYNTAX
.IP
.nf
\f[C]
new SharedArrayBuffer()
new SharedArrayBuffer(length)
new SharedArrayBuffer(length, options)
\f[R]
.fi
.RS
.PP
\f[B]Note:\f[R] \f[V]SharedArrayBuffer()\f[R] can only be constructed
with \f[V]new\f[R].
Attempting to call it without \f[V]new\f[R] throws a
\f[V]TypeError\f[R].
.RE
.SS Parameters
.TP
\f[B]length\f[R] \f[I](optional)\f[R]
The size, in bytes, of the array buffer to create.
.TP
\f[B]options\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
An object, which can contain the following properties:
.RS
.TP
\f[B]maxByteLength\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
The maximum size, in bytes, that the shared array buffer can be resized
to.
.RE
.SS Return value
.PP
A new \f[V]SharedArrayBuffer\f[R] object of the specified size, with its
\f[V]maxByteLength\f[R] property set to the specified
\f[V]maxByteLength\f[R] if one was specified.
Its contents are initialized to 0.
.SH EXAMPLES
.SS Always use the new operator to create a SharedArrayBuffer
.PP
\f[V]SharedArrayBuffer\f[R] constructors are required to be constructed
with a \f[V]new\f[R] operator.
Calling a \f[V]SharedArrayBuffer\f[R] constructor as a function without
\f[V]new\f[R] will throw a \f[V]TypeError\f[R].
.PP
\f[B]Bad\f[R]
.IP
.nf
\f[C]
const sab = SharedArrayBuffer(1024);
// TypeError: calling a builtin SharedArrayBuffer constructor
// without new is forbidden
\f[R]
.fi
.PP
\f[B]Good\f[R]
.IP
.nf
\f[C]
const sab = new SharedArrayBuffer(1024);
\f[R]
.fi
.SS Growing a growable SharedArrayBuffer
.PP
In this example, we create an 8-byte buffer that is growable to a max
length of 16 bytes, then \f[V]grow()\f[R] it to 12 bytes:
.IP
.nf
\f[C]
const buffer = new SharedArrayBuffer(8, { maxByteLength: 16 });

buffer.grow(12);
\f[R]
.fi
.RS
.PP
\f[B]Note:\f[R] It is recommended that \f[V]maxByteLength\f[R] is set to
the smallest value possible for your use case.
It should never exceed \f[V]1073741824\f[R] (1GB), to reduce the risk of
out-of-memory errors.
.RE
.SH SEE ALSO
.IP \[bu] 2
\f[V]Atomics\f[R]
.IP \[bu] 2
\f[V]ArrayBuffer\f[R]
.IP \[bu] 2
JavaScript typed arrays
