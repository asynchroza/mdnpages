.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "VideoTrack.label" "JS" "April 8, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
VideoTrack.label \- VideoTrack: label property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]VideoTrack\f[B]\f[R] property
\f[B]\f[CB]label\f[B]\f[R] returns a string specifying the video
track\[cq]s human\-readable label, if one is available; otherwise, it
returns an empty string.
.SH VALUE
A string specifying the track\[cq]s human\-readable label, if one is
available in the track metadata.
Otherwise, an empty string (\f[CR]\[dq]\[dq]\f[R]) is returned.
.PP
For example, a track whose \f[CR]kind\f[R] is \f[CR]\[dq]sign\[dq]\f[R]
might have a \f[CR]label\f[R] such as
\f[CR]\[dq]A sign\-language interpretation.\[dq]\f[R].
.SH EXAMPLES
This example returns an array of track kinds and labels for potential
use in a user interface to select video tracks for a specified media
element.
The list is filtered to only allow certain track kinds through.
.IP
.EX
function getTrackList(el) {
  const trackList = [];
  const wantedKinds = [\[dq]main\[dq], \[dq]alternative\[dq], \[dq]commentary\[dq]];

  el.videoTracks.forEach((track) => {
    if (wantedKinds.includes(track.kind)) {
      trackList.push({
        id: track.id,
        kind: track.kind,
        label: track.label,
      });
    }
  });
  return trackList;
}
.EE
.PP
The resulting \f[CR]trackList\f[R] contains an array of video tracks
whose \f[CR]kind\f[R] is one of those in the array
\f[CR]wantedKinds\f[R], with each entry providing the track\[cq]s
\f[CR]id\f[R], \f[CR]kind\f[R], and \f[CR]label\f[R].
