.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "GeneratorFunction.GeneratorFunction" "JS" "September 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GeneratorFunction.GeneratorFunction - GeneratorFunction() constructor
.SH SYNOPSIS
The \f[B]\f[CB]GeneratorFunction()\f[B]\f[R] constructor creates
\f[CR]GeneratorFunction\f[R] objects.
.PP
Note that \f[CR]GeneratorFunction\f[R] is \f[I]not\f[R] a global object.
It can be obtained with the following code:
.IP
.EX
const GeneratorFunction = function* () {}.constructor;
.EE
.PP
The \f[CR]GeneratorFunction()\f[R] constructor is not intended to be
used directly, and all caveats mentioned in the \f[CR]Function()\f[R]
description apply to \f[CR]GeneratorFunction()\f[R].
.SH SYNTAX
.IP
.EX
new GeneratorFunction(functionBody)
new GeneratorFunction(arg1, functionBody)
new GeneratorFunction(arg1, arg2, functionBody)
new GeneratorFunction(arg1, arg2, /* \&..., */ argN, functionBody)

GeneratorFunction(functionBody)
GeneratorFunction(arg1, functionBody)
GeneratorFunction(arg1, arg2, functionBody)
GeneratorFunction(arg1, arg2, /* \&..., */ argN, functionBody)
.EE
.RS
.PP
\f[B]Note:\f[R] \f[CR]GeneratorFunction()\f[R] can be called with or
without \f[CR]new\f[R].
Both create a new \f[CR]GeneratorFunction\f[R] instance.
.RE
.SS Parameters
See \f[CR]Function()\f[R].
.SH EXAMPLES
.SS Creating and using a GeneratorFunction() constructor
.IP
.EX
const GeneratorFunction = function* () {}.constructor;
const g = new GeneratorFunction(\[dq]a\[dq], \[dq]yield a * 2\[dq]);
const iterator = g(10);
console.log(iterator.next().value); // 20
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]function*\f[R]
.IP \[bu] 2
\f[CR]function*\f[R] expression
.IP \[bu] 2
\f[CR]Function()\f[R] constructor
.IP \[bu] 2
Iterators and generators guide
.IP \[bu] 2
\f[CR]Functions\f[R]
