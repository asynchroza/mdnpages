.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "HTMLImageElement.width" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLImageElement.width \- HTMLImageElement: width property
.SH SYNOPSIS
The \f[B]\f[CB]width\f[B]\f[R] property of the
\f[CR]HTMLImageElement\f[R] interface indicates the width at which an
image is drawn in CSS pixels if it\[cq]s being drawn or rendered to any
visual medium such as a screen or printer.
Otherwise, it\[cq]s the natural, pixel density\-corrected width of the
image.
.SH VALUE
An integer value indicating the width of the image.
The way the width is defined depends on whether or not the image is
being rendered to a visual medium, such as a screen or printer:
.IP \[bu] 2
If the image is being rendered to a visual medium, the width is
expressed in CSS pixels.
.IP \[bu] 2
If the image is not being rendered to a visual medium, its width is
represented using the image\[cq]s natural (intrinsic) width, adjusted
for the display density as indicated by \f[CR]naturalWidth\f[R].
.SH EXAMPLES
In this example, two different sizes are provided for an image of a
clock using the \f[CR]srcset\f[R] attribute.
One is 200px wide and the other is 400px wide.
The \f[CR]sizes\f[R] attribute is used to specify the width at which the
image should be drawn given the viewport\[cq]s width.
.SS HTML
For viewports up to 400px wide, the image is drawn at a width of 200px.
Otherwise, it\[cq]s drawn at 400px.
.IP
.EX
<p>Image width: <span class=\[dq]size\[dq]>?</span>px (resize to update)</p>
<img
  src=\[dq]/en\-US/docs/Web/HTML/Element/img/clock\-demo\-200px.png\[dq]
  alt=\[dq]Clock\[dq]
  srcset=\[dq]
    /en\-US/docs/Web/HTML/Element/img/clock\-demo\-200px.png 200w,
    /en\-US/docs/Web/HTML/Element/img/clock\-demo\-400px.png 400w
  \[dq]
  sizes=\[dq](max\-width: 400px) 200px, 400px\[dq] />
.EE
.SS JavaScript
JavaScript looks at the \f[CR]width\f[R] property to determine the width
of the image at the moment.
This is performed in the window\[cq]s \f[CR]load\f[R] and
\f[CR]resize\f[R] event handlers so the most current width information
is always available.
.IP
.EX
const clockImage = document.querySelector(\[dq]img\[dq]);
let output = document.querySelector(\[dq].size\[dq]);

const updateWidth = (event) => {
  output.innerText = clockImage.width;
};

window.addEventListener(\[dq]load\[dq], updateWidth);
window.addEventListener(\[dq]resize\[dq], updateWidth);
.EE
.SS Result
This example may be easier to try out in its own window.
