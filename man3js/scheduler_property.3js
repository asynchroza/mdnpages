.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "scheduler_property" "JS" "November 9, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
scheduler_property \- scheduler global property
.SH SYNOPSIS
The global read\-only \f[B]\f[CB]scheduler\f[B]\f[R] property is the
entry point for using the Prioritized Task Scheduling API.
.PP
It is implemented by both \f[CR]Window\f[R] and
\f[CR]WorkerGlobalScope\f[R].
The existence of the property indicates that the API is supported in the
current context, and can be accessed using \f[CR]this.scheduler\f[R].
.PP
The object has a single instance method \f[CR]Scheduler.postTask()\f[R]
that is used to post prioritized tasks for scheduling.
.SH VALUE
A \f[CR]Scheduler\f[R].
.SH EXAMPLES
The code below shows a very basic use of the property and its associated
interface.
It demonstrates how to check that the property exists and then posts a
task that returns a promise.
.IP
.EX
// Check if the prioritized task API is supported
if (\[dq]scheduler\[dq] in this) {
  // Callback function \- \[dq]the task\[dq]
  const myTask = () => \[dq]Task 1: user\-visible\[dq];

  // Post task with default priority: \[aq]user\-visible\[aq] (no other options)
  // When the task resolves, Promise.then() logs the result.
  scheduler
    .postTask(myTask)
    // Handle resolved value
    .then((taskResult) => console.log(\[ga]${taskResult}\[ga]))
    // Handle error or abort
    .catch((error) => console.log(\[ga]Error: ${error}\[ga]));
} else {
  console.log(\[dq]Feature: NOT Supported\[dq]);
}
.EE
.PP
For comprehensive example code showing to use the API see Prioritized
Task Scheduling API > Examples.
.SH SEE ALSO
.IP \[bu] 2
Prioritized Task Scheduling API
.IP \[bu] 2
\f[CR]Scheduler.postTask()\f[R]
.IP \[bu] 2
\f[CR]TaskController\f[R]
