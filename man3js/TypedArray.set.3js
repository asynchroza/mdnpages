.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "TypedArray.set" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
TypedArray.set - TypedArray.prototype.set()
.SH SYNOPSIS
.PP
The \f[B]\f[VB]set()\f[B]\f[R] method stores multiple values in the
typed array, reading input values from a specified array.
.SH SYNTAX
.IP
.nf
\f[C]
set(array)
set(array, targetOffset)

set(typedarray)
set(typedarray, targetOffset)
\f[R]
.fi
.SS Parameters
.TP
\f[B]array\f[R]
The array from which to copy values.
All values from the source array are copied into the target array,
unless the length of the source array plus the target offset exceeds the
length of the target array, in which case an exception is thrown.
.TP
\f[B]typedarray\f[R]
If the source array is a typed array, the two arrays may share the same
underlying \f[V]ArrayBuffer\f[R]; the JavaScript engine will
intelligently \f[B]copy\f[R] the source range of the buffer to the
destination range.
.TP
\f[B]targetOffset\f[R] \f[I](optional)\f[R]
The offset into the target array at which to begin writing values from
the source array.
If this value is omitted, 0 is assumed (that is, the source array will
overwrite values in the target array starting at index 0).
.SS Return value
.PP
\f[V]undefined\f[R].
.SS Exceptions
.TP
\f[B]RangeError\f[R]
Thrown if one of the two conditions is met:
.RS
.IP \[bu] 2
An element will be stored beyond the end of the typed array, either
because \f[V]targetOffset\f[R] is too large or because \f[V]array\f[R]
or \f[V]typedarray\f[R] is too large.
.IP \[bu] 2
\f[V]targetOffset\f[R] is negative.
.RE
.SH EXAMPLES
.SS Using set()
.IP
.nf
\f[C]
const buffer = new ArrayBuffer(8);
const uint8 = new Uint8Array(buffer);

uint8.set([1, 2, 3], 3);

console.log(uint8); // Uint8Array [ 0, 0, 0, 1, 2, 3, 0, 0 ]
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[V]TypedArray.prototype.set\f[R] in
\f[V]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-typed-arrays)
.IP \[bu] 2
JavaScript typed arrays
.IP \[bu] 2
\f[V]TypedArray\f[R]
.IP \[bu] 2
\f[V]ArrayBuffer\f[R]
