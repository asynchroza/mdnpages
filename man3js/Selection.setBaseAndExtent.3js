.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Selection.setBaseAndExtent" "JS" "April 8, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Selection.setBaseAndExtent \- Selection: setBaseAndExtent() method
.SH SYNOPSIS
The \f[B]\f[CB]setBaseAndExtent()\f[B]\f[R] method of the
\f[CR]Selection\f[R] interface sets the selection to be a range
including all or parts of two specified DOM nodes, and any content
located between them.
.SH SYNTAX
.IP
.EX
setBaseAndExtent(anchorNode, anchorOffset, focusNode, focusOffset)
.EE
.SS Parameters
.TP
\f[B]anchorNode\f[R]
The node at the start of the selection.
.TP
\f[B]anchorOffset\f[R]
The number of child nodes from the start of the anchor node that should
be excluded from the selection.
So for example, if the value is 0 the whole node is included.
If the value is 1, the whole node minus the first child node is
included.
And so on.
.RS
.PP
If \f[CR]anchorNode\f[R] is a \f[CR]Text\f[R] node, the offset refers to
the number of characters from the start of the
\f[CR]Node.textContent\f[R] that should be excluded from the selection.
.RE
.TP
\f[B]focusNode\f[R]
The node at the end of the selection.
.TP
\f[B]focusOffset\f[R]
The number of child nodes from the start of the focus node that should
be included in the selection.
So for example, if the value is 0 the whole node is excluded.
If the value is 1, the first child node is included.
And so on.
.RS
.PP
If \f[CR]focusNode\f[R] is a \f[CR]Text\f[R] node, the offset refers to
the number of characters from the start of the
\f[CR]Node.textContent\f[R] that should be included in the selection.
.RE
.RS
.PP
\f[B]Note:\f[R] If the focus position appears before the anchor position
in the document, the direction of the selection is reversed \[em] the
caret is placed at the beginning of the text rather the end, which
matters for any keyboard command that might follow.
For example, Shift + ➡︎ would cause the selection to narrow from the
beginning rather than grow at the end.
.RE
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.TP
\f[B]IndexSizeError\f[R] \f[B]DOMException\f[R]
Thrown if \f[CR]anchorOffset\f[R] is larger than the number of child
nodes inside \f[CR]anchorNode\f[R], or if \f[CR]focusOffset\f[R] is
larger than the number of child nodes inside \f[CR]focusNode\f[R].
.SH EXAMPLES
In this example, we have two paragraphs containing spans, each one
containing a single word.
The first one is set as the \f[CR]anchorNode\f[R] and the second is set
as the \f[CR]focusNode\f[R].
We also have an additional paragraph that sits in between the two nodes.
.PP
Next, we have two form inputs that allow you to set the
\f[CR]anchorOffset\f[R] and \f[CR]focusOffset\f[R] \[em] they both have
a default value of 0.
.PP
We also have a button that when pressed invokes a function that runs the
\f[CR]setBaseAndExtent()\f[R] method with the specified offsets, and
copies the selection into the output paragraph at the very bottom of the
HTML.
.IP
.EX
<h1>setBaseAndExtent example</h1>
<div>
  <p class=\[dq]one\[dq]>
    <span>Fish</span><span>Dog</span><span>Cat</span><span>Bird</span>
  </p>
  <p>MIDDLE</p>
  <p class=\[dq]two\[dq]>
    <span>Car</span><span>Bike</span><span>Boat</span><span>Plane</span>
  </p>
</div>

<div>
  <p>
    <label for=\[dq]aOffset\[dq]>Anchor offset</label>
    <input id=\[dq]aOffset\[dq] name=\[dq]aOffset\[dq] type=\[dq]number\[dq] value=\[dq]0\[dq] />
  </p>
  <p>
    <label for=\[dq]fOffset\[dq]>Focus offset</label>
    <input id=\[dq]fOffset\[dq] name=\[dq]fOffset\[dq] type=\[dq]number\[dq] value=\[dq]0\[dq] />
  </p>
  <p><button>Capture selection</button></p>
</div>

<p><strong>Output</strong>: <span class=\[dq]output\[dq]></span></p>
.EE
.RS
.PP
\f[B]Note:\f[R] There is intentionally no whitespace between the
\f[CR]<p class=\[dq]one\[dq]>\f[R] and
\f[CR]<p class=\[dq]two\[dq]>\f[R] start tags and the \f[CR]<span>\f[R]
start tags which follow them \[em] to avoid the presence of text nodes
that would affect the number of child nodes expected.
(Even though those text nodes would be whitespace\-only, they would
still be additional child nodes; find out more from the
\f[CR]Node.firstChild\f[R] example).
.RE
.PP
The JavaScript looks like so:
.IP
.EX
const one = document.querySelector(\[dq].one\[dq]);
const two = document.querySelector(\[dq].two\[dq]);

const aOffset = document.getElementById(\[dq]aOffset\[dq]);
const fOffset = document.getElementById(\[dq]fOffset\[dq]);

const button = document.querySelector(\[dq]button\[dq]);

const output = document.querySelector(\[dq].output\[dq]);

let selection;

button.onclick = () => {
  try {
    selection = document.getSelection();
    selection.setBaseAndExtent(one, aOffset.value, two, fOffset.value);
    const text = selection.toString();
    output.textContent = text;
  } catch (e) {
    output.textContent = e.message;
  }
};
.EE
.PP
Play with the live example below, setting different offset values to see
how this affects the selection.
.RS
.PP
\f[B]Note:\f[R] You can find this \c
.UR
https://github.com/chrisdavidmills/selection-api-examples/blob/master/setBaseAndExtent.html
example on GitHub
.UE \c
\ (\c
.UR
https://chrisdavidmills.github.io/selection-api-examples/setBaseAndExtent.html
see it live also
.UE \c
\&.)
.RE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Selection\f[R]
