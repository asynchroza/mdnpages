.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Node.nextSibling" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Node.nextSibling \- Node: nextSibling property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]nextSibling\f[B]\f[R] property of the
\f[CR]Node\f[R] interface returns the node immediately following the
specified one in their parent\[cq]s \f[CR]childNodes\f[R], or returns
\f[CR]null\f[R] if the specified node is the last child in the parent
element.
.RS
.PP
\f[B]Note:\f[R] Browsers insert \f[CR]Text\f[R] nodes into a document to
represent whitespace in the source markup.
Therefore a node obtained, for example, using \f[CR]Node.firstChild\f[R]
or \f[CR]Node.previousSibling\f[R] may refer to a whitespace text node
rather than the actual element the author intended to get.
.PP
The article Whitespace in the DOM contains more information about this
behavior.
.PP
You can use \f[CR]Element.nextElementSibling\f[R] to obtain the next
element skipping any whitespace nodes, other between\-element text, or
comments.
.PP
To navigate the opposite way through the child nodes list use
Node.previousSibling.
.RE
.SH VALUE
A \f[CR]Node\f[R] representing the next sibling of the current node, or
\f[CR]null\f[R] if there are none.
.SH EXAMPLE
.IP
.EX
<div id=\[dq]div\-1\[dq]>Here is div\-1</div>
<div id=\[dq]div\-2\[dq]>Here is div\-2</div>
<br />
<output><em>Not calculated.</em></output>
.EE
.IP
.EX
let el = document.getElementById(\[dq]div\-1\[dq]).nextSibling;
let i = 1;

let result = \[dq]Siblings of div\-1:<br/>\[dq];

while (el) {
  result += \[ga]${i}. ${el.nodeName}<br/>\[ga];
  el = el.nextSibling;
  i++;
}

const output = document.querySelector(\[dq]output\[dq]);
output.innerHTML = result;
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Element.nextElementSibling\f[R]
.IP \[bu] 2
\f[CR]Node.previousSibling\f[R]
