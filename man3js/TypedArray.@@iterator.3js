.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "TypedArray.\[at]\[at]iterator" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
TypedArray.\[at]\[at]iterator - TypedArray.prototype\[at]\[at]iterator
.SH SYNOPSIS
.PP
The \f[B]\f[VB][\[at]\[at]iterator]()\f[B]\f[R] method of
\f[V]TypedArray\f[R] instances implements the iterable protocol and
allows typed arrays to be consumed by most syntaxes expecting iterables,
such as the spread syntax and \f[V]for...of\f[R] loops.
It returns an array iterator object that yields the value of each index
in the typed array.
.PP
The initial value of this property is the same function object as the
initial value of the \f[V]TypedArray.prototype.values\f[R] property.
.SH SYNTAX
.IP
.nf
\f[C]
typedArray[Symbol.iterator]()
\f[R]
.fi
.SS Return value
.PP
The same return value as \f[V]TypedArray.prototype.values()\f[R]: a new
iterable iterator object that yields the value of each index in the
typed array.
.SH EXAMPLES
.SS Iteration using for\&...of loop
.PP
Note that you seldom need to call this method directly.
The existence of the \f[V]\[at]\[at]iterator\f[R] method makes typed
arrays iterable, and iterating syntaxes like the \f[V]for...of\f[R] loop
automatically calls this method to obtain the iterator to loop over.
.IP
.nf
\f[C]
const arr = new Uint8Array([10, 20, 30, 40, 50]);
for (const n of arr) {
  console.log(n);
}
\f[R]
.fi
.SS Manually hand-rolling the iterator
.PP
You may still manually call the \f[V]next()\f[R] method of the returned
iterator object to achieve maximum control over the iteration process.
.IP
.nf
\f[C]
const arr = new Uint8Array([10, 20, 30, 40, 50]);
const arrIter = arr[Symbol.iterator]();
console.log(arrIter.next().value); // 10
console.log(arrIter.next().value); // 20
console.log(arrIter.next().value); // 30
console.log(arrIter.next().value); // 40
console.log(arrIter.next().value); // 50
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[V]TypedArray.prototype[\[at]\[at]iterator]\f[R] in
\f[V]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-typed-arrays)
.IP \[bu] 2
JavaScript typed arrays
.IP \[bu] 2
\f[V]TypedArray\f[R]
.IP \[bu] 2
\f[V]TypedArray.prototype.entries()\f[R]
.IP \[bu] 2
\f[V]TypedArray.prototype.keys()\f[R]
.IP \[bu] 2
\f[V]TypedArray.prototype.values()\f[R]
