.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Object.isExtensible" "JS" "2023-06-02" "JavaScript" "JavaScript Reference Manual"
.hy
.SH Synopsis
.PP
The \f[B]\f[VB]Object.isExtensible()\f[B]\f[R] static method determines
if an object is extensible (whether it can have new properties added to
it).
.SH Syntax
.IP
.nf
\f[C]
Object.isExtensible(obj)
\f[R]
.fi
.SS Parameters
.IP \[bu] 2
\f[V]obj\f[R]
.RS 2
.IP \[bu] 2
The object which should be checked.
.RE
.SS Return value
.PP
A \f[V]Boolean\f[R] indicating whether or not the given object is
extensible.
.SH Description
.PP
Objects are extensible by default: they can have new properties added to
them, and their \f[V][[Prototype]]\f[R] can be re-assigned.
An object can be marked as non-extensible using one of
\f[V]Object.preventExtensions()\f[R], \f[V]Object.seal()\f[R],
\f[V]Object.freeze()\f[R], or \f[V]Reflect.preventExtensions()\f[R].
.SH Examples
.SS Using Object.isExtensible
.IP
.nf
\f[C]
// New objects are extensible.
const empty = {};
Object.isExtensible(empty); // true

// They can be made un-extensible
Object.preventExtensions(empty);
Object.isExtensible(empty); // false

// Sealed objects are by definition non-extensible.
const sealed = Object.seal({});
Object.isExtensible(sealed); // false

// Frozen objects are also by definition non-extensible.
const frozen = Object.freeze({});
Object.isExtensible(frozen); // false
\f[R]
.fi
.SS Non-object argument
.PP
In ES5, if the argument to this method is not an object (a primitive),
then it will cause a \f[V]TypeError\f[R].
In ES2015, it will return \f[V]false\f[R] without any errors if a
non-object argument is passed, since primitives are, by definition,
immutable.
.IP
.nf
\f[C]
Object.isExtensible(1);
// TypeError: 1 is not an object (ES5 code)

Object.isExtensible(1);
// false                         (ES2015 code)
\f[R]
.fi
.SH See also
.IP \[bu] 2
\f[V]Object.preventExtensions()\f[R]
.IP \[bu] 2
\f[V]Object.seal()\f[R]
.IP \[bu] 2
\f[V]Object.isSealed()\f[R]
.IP \[bu] 2
\f[V]Object.freeze()\f[R]
.IP \[bu] 2
\f[V]Object.isFrozen()\f[R]
.IP \[bu] 2
\f[V]Reflect.isExtensible()\f[R]
