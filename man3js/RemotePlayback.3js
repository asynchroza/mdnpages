.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "RemotePlayback" "JS" "December 10, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RemotePlayback \- RemotePlayback
.SH SYNOPSIS
The \f[B]\f[CB]RemotePlayback\f[B]\f[R] interface of the Remote Playback
API allows the page to detect availability of remote playback devices,
then connect to and control playing on these devices.
.SH INSTANCE PROPERTIES
.TP
\f[B]RemotePlayback.state\f[R] \f[I](read\-only)\f[R]
Represents the \f[CR]RemotePlayback\f[R] connection\[cq]s state.
One of:
.RS
.TP
\f[B]\[dq]connecting\[dq]\f[R]
The user agent is attempting to initiate remote playback with the
selected device.
.TP
\f[B]\[dq]connected\[dq]\f[R]
The transition from local to remote playback has happened, all commands
will now take place on the remote device.
.TP
\f[B]\[dq]disconnected\[dq]\f[R]
The remote playback has not been initiated, has failed to initiate, or
has been stopped.
.RE
.SH INSTANCE METHODS
.TP
\f[B]RemotePlayback.watchAvailability()\f[R]
A \f[CR]Promise\f[R] that resolves with a \f[CR]callbackId\f[R] of an
available remote playback device.
.TP
\f[B]RemotePlayback.cancelWatchAvailability()\f[R]
Cancels the request to monitor the availability of remote playback
devices.
.TP
\f[B]RemotePlayback.prompt()\f[R]
Prompts the user to select and give permission to connect to a remote
playback device.
.SH EVENTS
.TP
\f[B]connecting\f[R]
Fired when the user agent initiates remote playback.
.TP
\f[B]connect\f[R]
Fired when the user agent successfully connects to the remote device.
.TP
\f[B]disconnect\f[R]
Fired when the user agent disconnects from the remote device.
.SH EXAMPLES
The following example demonstrates a player with custom controls that
support remote playback.
Initially the button used to select a device is hidden:
.IP
.EX
<video id=\[dq]videoElement\[dq] src=\[dq]https://example.org/media.ext\[dq]>
  <button id=\[dq]deviceBtn\[dq] style=\[dq]display: none;\[dq]>Pick device</button>
</video>
.EE
.PP
The \f[CR]RemotePlayback.watchAvailability()\f[R] method is used to
watch for available remote playback devices.
If a device is available, use the callback to show the button.
.IP
.EX
const deviceBtn = document.getElementById(\[dq]deviceBtn\[dq]);
const videoElem = document.getElementById(\[dq]videoElement\[dq]);

function availabilityCallback(available) {
  // Show or hide the device picker button depending on device availability.
  deviceBtn.style.display = available ? \[dq]inline\[dq] : \[dq]none\[dq];
}

videoElem.remote.watchAvailability(availabilityCallback).catch(() => {
  /* If the device cannot continuously watch available,
  show the button to allow the user to try to prompt for a connection.*/
  deviceBtn.style.display = \[dq]inline\[dq];
});
.EE
