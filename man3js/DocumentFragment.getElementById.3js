.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "DocumentFragment.getElementById" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DocumentFragment.getElementById \- DocumentFragment: getElementById()
method
.SH SYNOPSIS
The \f[B]\f[CB]getElementById()\f[B]\f[R] method of the
\f[CR]DocumentFragment\f[R] returns an \f[CR]Element\f[R] object
representing the element whose \f[CR]id\f[R] property matches the
specified string.
Since element IDs are required to be unique if specified, they\[cq]re a
useful way to get access to a specific element quickly.
.PP
If you need to get access to an element which doesn\[cq]t have an ID,
you can use \f[CR]querySelector()\f[R] to find the element using any
selector.
.RS
.PP
\f[B]Note:\f[R] IDs should be unique inside a document fragment.
If two or more elements in a document fragment have the same ID, this
method returns the first element found.
.RE
.SH SYNTAX
.IP
.EX
getElementById(id)
.EE
.RS
.PP
\f[B]Note:\f[R] The capitalization of \f[CR]\[dq]Id\[dq]\f[R] in the
name of this method \f[I]must\f[R] be correct for the code to function;
\f[CR]getElementByID()\f[R] is \f[I]not\f[R] valid and will not work,
however natural it may seem.
.RE
.SS Parameters
.TP
\f[B]id\f[R]
The ID of the element to locate.
The ID is a case\-sensitive string which is unique within the document
fragment: only one element should have any given ID.
.SS Return value
An \f[CR]Element\f[R] object describing the DOM element object matching
the specified ID, or \f[CR]null\f[R] if no matching element was found in
the document fragment.
.SH EXAMPLES
.SS Extend a list of elements
In this example, the document contains a list with a single item
\f[CR]Cherry\f[R].
We also create a document fragment containing four more items,
\f[CR]Apple\f[R], \f[CR]Orange\f[R], \f[CR]Banana\f[R], and
\f[CR]Melon\f[R].
.PP
We then log the result of using \f[CR]getElementById()\f[R] to look for
\f[CR]Apple\f[R] and \f[CR]Cherry\f[R] in the document and in the
fragment.
At this point, \f[CR]Cherry\f[R] appears only in the document while
\f[CR]Apple\f[R] appears only in the fragment.
.PP
If you click \[lq]Add fragment to document\[rq], we append the fragment
to the list inside the document, and again log the result of looking for
both \f[CR]Apple\f[R] and \f[CR]Cherry\f[R] in the document and in the
fragment.
This time, both \f[CR]Apple\f[R] and \f[CR]Cherry\f[R] appear in the
document, and neither appear in the fragment.
.PP
This is because appending a fragment to a document moves the
fragment\[cq]s nodes into the DOM, leaving behind an empty
\f[CR]DocumentFragment\f[R].
.SS HTML
.IP
.EX
<button id=\[dq]add\[dq]>Add fragment to document</button>
<button id=\[dq]reset\[dq]>Reset example</button> <br />
List content:
<ul>
  <li id=\[dq]Cherry\[dq]>Cherry</li>
</ul>
Fragment content:
<ul id=\[dq]fragment\[dq]></ul>
Current status:
<pre id=\[dq]log\[dq] />
.EE
.SS JavaScript
.IP
.EX
// Create the document fragment with its initial content
const fragment = new DocumentFragment();
[\[dq]Apple\[dq], \[dq]Orange\[dq], \[dq]Banana\[dq], \[dq]Melon\[dq]].forEach((fruit) => {
  const li = document.createElement(\[dq]li\[dq]);
  li.textContent = fruit;
  li.id = fruit;
  fragment.append(li);
});

// When the button is clicked, add the fragment to the list
document.getElementById(\[dq]add\[dq]).addEventListener(\[dq]click\[dq], () => {
  document.querySelector(\[dq]ul\[dq]).append(fragment);
  displayStatus();
});

// Log the results of both getElementById()
function displayStatus() {
  const log = document.getElementById(\[dq]log\[dq]);
  log.textContent = \[dq]\[dq];
  [\[dq]Apple\[dq], \[dq]Cherry\[dq]].forEach((id) => {
    log.textContent += \[ga]document.getElementById(\[dq]${id}\[dq]) ${
      document.getElementById(id) ? \[dq]Yes\[dq] : \[dq]No\[dq]
    }\[rs]n\[ga];
    log.textContent += \[ga]fragment.getElementById(\[dq]${id}\[dq]) ${
      fragment.getElementById(id) ? \[dq]Yes\[dq] : \[dq]No\[dq]
    }\[rs]n\[ga];
  });

  // Empty the fragment viewer and fill it with the current content
  const fragmentViewer = document.getElementById(\[dq]fragment\[dq]);
  while (fragmentViewer.hasChildNodes()) {
    fragmentViewer.removeChild(fragmentViewer.lastChild);
  }
  for (entry of fragment.children) {
    fragmentViewer.appendChild(entry.cloneNode(true));
  }
}

// Log the initial state
displayStatus();

// Hook the reset button
document.getElementById(\[dq]reset\[dq]).addEventListener(\[dq]click\[dq], () => {
  document.location.reload();
});
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Document.getElementById()\f[R]
