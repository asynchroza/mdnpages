.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "Array.toString" "JS" "April 17, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Array.toString - Array.prototype.toString()
.SH SYNOPSIS
The \f[B]\f[CB]toString()\f[B]\f[R] method returns a string representing
the specified array and its elements.
.SH SYNTAX
.IP
.EX
toString()
.EE
.SS Return value
A string representing the elements of the array.
.SH DESCRIPTION
The \f[CR]Array\f[R] object overrides the \f[CR]toString\f[R] method of
\f[CR]Object\f[R].
The \f[CR]toString\f[R] method of arrays calls \f[CR]join()\f[R]
internally, which joins the array and returns one string containing each
array element separated by commas.
If the \f[CR]join\f[R] method is unavailable or is not a function,
\f[CR]Object.prototype.toString\f[R] is used instead, returning
\f[CR][object Array]\f[R].
.IP
.EX
const arr = [];
arr.join = 1; // re-assign \[ga]join\[ga] with a non-function
console.log(arr.toString()); // [object Array]

console.log(Array.prototype.toString.call({ join: () => 1 })); // 1
.EE
.PP
JavaScript calls the \f[CR]toString\f[R] method automatically when an
array is to be represented as a text value or when an array is referred
to in a string concatenation.
.SH EXAMPLES
.SS Using toString()
.IP
.EX
const array1 = [1, 2, \[dq]a\[dq], \[dq]1a\[dq]];

console.log(array1.toString()); // \[dq]1,2,a,1a\[dq]
.EE
.SS Using toString() on sparse arrays
Following the behavior of \f[CR]join()\f[R], \f[CR]toString()\f[R]
treats empty slots the same as \f[CR]undefined\f[R] and produces an
extra separator:
.IP
.EX
console.log([1, , 3].toString()); // \[aq]1,,3\[aq]
.EE
.SS Calling toString() on non-array objects
\f[CR]toString()\f[R] is generic.
It expects \f[CR]this\f[R] to have a \f[CR]join()\f[R] method; or,
failing that, uses \f[CR]Object.prototype.toString()\f[R] instead.
.IP
.EX
console.log(Array.prototype.toString.call({ join: () => 1 }));
// 1; a number
console.log(Array.prototype.toString.call({ join: () => undefined }));
// undefined
console.log(Array.prototype.toString.call({ join: \[dq]not function\[dq] }));
// \[dq][object Object]\[dq]
.EE
.SH SEE ALSO
.IP \[bu] 2
Indexed collections
.IP \[bu] 2
\f[CR]Array\f[R]
.IP \[bu] 2
\f[CR]Array.prototype.join()\f[R]
.IP \[bu] 2
\f[CR]Array.prototype.toLocaleString()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.toString()\f[R]
.IP \[bu] 2
\f[CR]String.prototype.toString()\f[R]
