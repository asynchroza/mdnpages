.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Attr.ownerElement" "JS" "May 22, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Attr.ownerElement \- Attr: ownerElement property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]ownerElement\f[B]\f[R] property of the
\f[CR]Attr\f[R] interface returns the \f[CR]Element\f[R] the attribute
belongs to.
.SH VALUE
The \f[CR]Element\f[R] the attribute belongs to, or \f[CR]null\f[R] if
the attribute is not linked to an element.
.SH EXAMPLE
The following example displays the qualified name of the element of the
two first elements, when we click on the appropriate button.
.SS HTML
.IP
.EX
<svg xml:lang=\[dq]en\-US\[dq] class=\[dq]struct\[dq] height=\[dq]1\[dq] width=\[dq]1\[dq]>Click me</svg>
<label xml:lang=\[dq]en\-US\[dq] class=\[dq]struct\[dq]></label>

<p>
  <button>Show value for &lt;svg&gt;</button>
  <button>Show value for &lt;label&gt;</button>
</p>

<p>
  Qualified name of the owner element of the attribute <code>xml:lang</code>:
  <output id=\[dq]result\[dq]>None.</output>
</p>
.EE
.SS JavaScript
.IP
.EX
const elements = document.querySelectorAll(\[dq].struct\[dq]);
const buttons = document.querySelectorAll(\[dq]button\[dq]);
const outputEl = document.querySelector(\[dq]#result\[dq]);

let i = 0;
for (const button of buttons) {
  const element = elements[i];
  button.addEventListener(\[dq]click\[dq], () => {
    const attribute = element.attributes[0];
    outputEl.value = attribute.ownerElement.tagName.toLowerCase();
  });
  i++;
}
.EE
