.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "IDBVersionChangeEvent" "JS" "February 28, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
IDBVersionChangeEvent \- IDBVersionChangeEvent
.SH SYNOPSIS
The \f[B]\f[CB]IDBVersionChangeEvent\f[B]\f[R] interface of the
IndexedDB API indicates that the version of the database has changed, as
the result of an \f[CR]onupgradeneeded\f[R] event handler function.
.PP
This feature is available in Web Workers.
.SH CONSTRUCTOR
.TP
\f[B]IDBVersionChangeEvent()\f[R]
Creates and returns a new \f[CR]IDBVersionChangeEvent\f[R] object which
is used to represent when a version of the database has changed.
.SH INSTANCE PROPERTIES
\f[I]Also inherits properties from its parent, \f[CI]Event\f[I]
interface.\f[R]
.TP
\f[B]IDBVersionChangeEvent.oldVersion\f[R] \f[I](read\-only)\f[R]
Returns the old version of the database.
.TP
\f[B]IDBVersionChangeEvent.newVersion\f[R] \f[I](read\-only)\f[R]
Returns the new version of the database.
.SH INSTANCE METHODS
\f[I]No specific method, but inherits methods from its parent,
\f[CI]Event\f[I] interface.\f[R]
.SH EXAMPLE
In the following code snippet, we make a request to open a database, and
include handlers for the success and error cases.
Upon a version change (after an \f[CR]upgradeneeded\f[R] event), the
\f[CR]success\f[R] event will implement the
\f[CR]IDBVersionChangeEvent\f[R] interface.
For a full working example, see our \c
.UR https://github.com/mdn/dom-examples/tree/main/to-do-notifications
To\-do Notifications
.UE \c
\ app (\c
.UR https://mdn.github.io/dom-examples/to-do-notifications/
view example live
.UE \c
).
.IP
.EX
const note = document.querySelector(\[dq]ul\[dq]);

// Let us open version 4 of our database
const DBOpenRequest = window.indexedDB.open(\[dq]toDoList\[dq], 4);

// these two event handlers act on the database being opened successfully, or not
DBOpenRequest.onerror = (event) => {
  note.innerHTML += \[dq]<li>Error loading database.</li>\[dq];
};

DBOpenRequest.onsuccess = (event) => {
  note.innerHTML += \[dq]<li>Database initialized.</li>\[dq];

  // store the result of opening the database in the db variable. This is used a lot later on, for opening transactions and suchlike.
  const db = DBOpenRequest.result;
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Using IndexedDB
.IP \[bu] 2
Starting transactions: \f[CR]IDBDatabase\f[R]
.IP \[bu] 2
Using transactions: \f[CR]IDBTransaction\f[R]
.IP \[bu] 2
Setting a range of keys: \f[CR]IDBKeyRange\f[R]
.IP \[bu] 2
Retrieving and making changes to your data: \f[CR]IDBObjectStore\f[R]
.IP \[bu] 2
Using cursors: \f[CR]IDBCursor\f[R]
.IP \[bu] 2
Reference example: \c
.UR https://github.com/mdn/dom-examples/tree/main/to-do-notifications
To\-do Notifications
.UE \c
\ (\c
.UR https://mdn.github.io/dom-examples/to-do-notifications/
View the example live
.UE \c
).
