.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "HTMLInputElement.stepUp" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLInputElement.stepUp \- HTMLInputElement: stepUp() method
.SH SYNOPSIS
The \f[B]\f[CB]HTMLInputElement.stepUp()\f[B]\f[R] method increments the
value of a numeric type of \f[CR]<input>\f[R] element by the value of
the \f[CR]step\f[R] attribute, or the default \f[CR]step\f[R] value if
the step attribute is not explicitly set.
The method, when invoked, increments the \f[CR]value\f[R] by
(\f[CR]step\f[R] * n), where \f[CR]n\f[R] defaults to \f[CR]1\f[R] if
not specified, and \f[CR]step\f[R] defaults to the default value for
\f[CR]step\f[R] if not specified.
Input type
Default step value
Example step declaration
\f[CR]date\f[R]
1 (day)
7 day (one week) increments: <input type=\[lq]date\[rq]
min=\[lq]2019\-12\-25\[rq] step=\[lq]7\[rq]>
\f[CR]month\f[R]
1 (month)
12 month (one year) increments: <input type=\[lq]month\[rq]
min=\[lq]2019\-12\[rq] step=\[lq]12\[rq]>
\f[CR]week\f[R]
1 (week)
Two week increments: <input type=\[lq]week\[rq] min=\[lq]2019\-W23\[rq]
step=\[lq]2\[rq]>
\f[CR]time\f[R]
60 (seconds)
900 second (15 minute) increments: <input type=\[lq]time\[rq]
min=\[lq]09:00\[rq] step=\[lq]900\[rq]>
\f[CR]datetime\-local\f[R]
1 (day)
Same day of the week: <input type=\[lq]datetime\-local\[rq]
min=\[lq]019\-12\-25T19:30\[rq] step=\[lq]7\[rq]>
\f[CR]number\f[R]
1
0.1 increments <input type=\[lq]number\[rq] min=\[lq]0\[rq]
step=\[lq]0.1\[rq] max=\[lq]10\[rq]>
\f[CR]range\f[R]
1
Increments by 2: <input type=\[lq]range\[rq] min=\[lq]0\[rq]
step=\[lq]2\[rq] max=\[lq]10\[rq]>
.PP
The method, when invoked, changes the form control\[cq]s value by the
value given in the \f[CR]step\f[R] attribute, multiplied by the
parameter, within the constraints set on the form control.
The default value for the parameter, if no value is passed, is
\f[CR]1\f[R].
The method will not cause the value to exceed the set \f[CR]max\f[R]
value, or defy the constraints set by the \f[CR]step\f[R] attribute.
.PP
If the value before invoking the \f[CR]stepUp()\f[R] method is
invalid\[em]for example, if it doesn\[cq]t match the constraints set by
the step attribute\[em]invoking the \f[CR]stepUp()\f[R] method will
return a value that does match the form controls constraints.
.PP
If the form control is non time, date, or numeric in nature, and
therefore does not support the \f[CR]step\f[R] attribute (see the list
of supported input types in the table above), or if the step value is
set to \f[CR]any\f[R], an \f[CR]InvalidStateError\f[R] exception is
thrown.
.SH SYNTAX
.IP
.EX
stepUp()
stepUp(stepIncrement)
.EE
.SS Parameters
.TP
\f[B]stepIncrement\f[R] \f[I](optional)\f[R]
A numeric value.
If no parameter is passed, \f[CR]stepIncrement\f[R] defaults to
\f[CR]1\f[R].
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
Click the button in this example to increment the \f[CR]number\f[R]
input type:
.SS HTML
.IP
.EX
<p>
  <label for=\[dq]theNumber\[dq]>
    Enter a number between 0 and 400 that is divisible by 5:
  </label>
  <input type=\[dq]number\[dq] step=\[dq]5\[dq] id=\[dq]theNumber\[dq] min=\[dq]0\[dq] max=\[dq]400\[dq] />
</p>
<p>
  <label>
    Enter how many values of step you would like to increment by or leave it
    blank:
  </label>
  <input type=\[dq]number\[dq] step=\[dq]1\[dq] id=\[dq]incrementInput\[dq] min=\[dq]0\[dq] max=\[dq]25\[dq] />
</p>
<input type=\[dq]button\[dq] value=\[dq]Increment\[dq] id=\[dq]theButton\[dq] />
.EE
.SS JavaScript
.IP
.EX
/* make the button call the function */
const button = document.getElementById(\[dq]theButton\[dq]);
button.addEventListener(\[dq]click\[dq], () => {
  stepOnUp();
});

function stepOnUp() {
  let input = document.getElementById(\[dq]theNumber\[dq]);
  let val = document.getElementById(\[dq]incrementInput\[dq]).value;

  if (val) {
    /* increment with a parameter */
    input.stepUp(val);
  } else {
    /* or without a parameter. Try it with 0 */
    input.stepUp();
  }
}
.EE
.SS CSS
.IP
.EX
input:invalid {
  border: red solid 3px;
}
.EE
.SS Result
Note if you don\[cq]t pass a parameter to the \f[CR]stepUp\f[R] method,
it defaults to \f[CR]1\f[R].
Any other value is a multiplier of the \f[CR]step\f[R] attribute value,
which in this case is \f[CR]5\f[R].
If you pass \f[CR]4\f[R] as the \f[CR]stepIncrement\f[R], the input will
\f[CR]stepUp\f[R] by \f[CR]4 * 5\f[R], or \f[CR]20\f[R].
If the parameter is \f[CR]0\f[R], the number will not be incremented.
The stepUp will not allow the input to out of range, in this case
stopping when it reaches \f[CR]400\f[R], and rounding down any floats
that are passed as a parameter.
.PP
Try setting the step increment input to \f[CR]1.2\f[R].
What happens when you invoke the method?
.PP
Try setting the value to \f[CR]4\f[R], which is not valid.
What happens when you invoke the method?
.SH SEE ALSO
.IP \[bu] 2
\f[CR]<input>\f[R]
.IP \[bu] 2
\f[CR]HTMLInputElement\f[R]
.IP \[bu] 2
\f[CR]HTMLInputElement.stepDown\f[R]
.IP \[bu] 2
\f[CR]step\f[R], \f[CR]min\f[R] and \f[CR]max\f[R] attributes
