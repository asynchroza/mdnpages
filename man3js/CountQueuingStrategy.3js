.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "CountQueuingStrategy" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CountQueuingStrategy \- CountQueuingStrategy
.SH SYNOPSIS
The \f[B]\f[CB]CountQueuingStrategy\f[B]\f[R] interface of the Streams
API provides a built\-in chunk counting queuing strategy that can be
used when constructing streams.
.SH CONSTRUCTOR
.TP
\f[B]CountQueuingStrategy()\f[R]
Creates a new \f[CR]CountQueuingStrategy\f[R] object instance.
.SH INSTANCE PROPERTIES
.TP
\f[B]CountQueuingStrategy.highWaterMark\f[R] \f[I](read\-only)\f[R]
The total number of chunks that can be contained in the internal queue
before backpressure is applied.
.SH INSTANCE METHODS
.TP
\f[B]CountQueuingStrategy.size()\f[R]
Always returns \f[CR]1\f[R].
.SH EXAMPLES
.IP
.EX
const queueingStrategy = new CountQueuingStrategy({ highWaterMark: 1 });

const writableStream = new WritableStream(
  {
    // Implement the sink
    write(chunk) {
      // \&...
    },
    close() {
      // \&...
    },
    abort(err) {
      console.log(\[dq]Sink error:\[dq], err);
    },
  },
  queueingStrategy,
);

const size = queueingStrategy.size();
.EE
.SH SEE ALSO
.IP \[bu] 2
Streams API
.IP \[bu] 2
\f[CR]CountQueuingStrategy()\f[R] constructor
.IP \[bu] 2
Internal queues and queuing strategies
