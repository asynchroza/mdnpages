.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Element.scrollWidth" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Element.scrollWidth \- Element: scrollWidth property
.SH SYNOPSIS
The \f[B]\f[CB]Element.scrollWidth\f[B]\f[R] read\-only property is a
measurement of the width of an element\[cq]s content, including content
not visible on the screen due to overflow.
.PP
The \f[CR]scrollWidth\f[R] value is equal to the minimum width the
element would require in order to fit all the content in the viewport
without using a horizontal scrollbar.
The width is measured in the same way as \f[CR]clientWidth\f[R]: it
includes the element\[cq]s padding, but not its border, margin or
vertical scrollbar (if present).
It can also include the width of pseudo\-elements such as
\f[CR]::before\f[R] or \f[CR]::after\f[R].
If the element\[cq]s content can fit without a need for horizontal
scrollbar, its \f[CR]scrollWidth\f[R] is equal to \f[CR]clientWidth\f[R]
.RS
.PP
\f[B]Note:\f[R] This property will round the value to an integer.
If you need a fractional value, use
\f[CR]element.getBoundingClientRect()\f[R].
.RE
.SH VALUE
A number.
.SH EXAMPLES
.IP
.EX
<!doctype html>
<html lang=\[dq]en\-US\[dq]>
  <head>
    <meta charset=\[dq]UTF\-8\[dq] />
    <title>Example</title>
    <style>
      div {
        overflow: hidden;
        white\-space: nowrap;
        text\-overflow: ellipsis;
      }

      #aDiv {
        width: 100px;
      }

      button {
        margin\-bottom: 2em;
      }
    </style>
  </head>

  <body>
    <div id=\[dq]aDiv\[dq]>FooBar\-FooBar\-FooBar\-FooBar</div>
    <button id=\[dq]aButton\[dq]>Check for overflow</button>

    <div id=\[dq]anotherDiv\[dq]>FooBar\-FooBar\-FooBar\-FooBar</div>
    <button id=\[dq]anotherButton\[dq]>Check for overflow</button>
  </body>
  <script>
    const buttonOne = document.getElementById(\[dq]aButton\[dq]);
    const buttonTwo = document.getElementById(\[dq]anotherButton\[dq]);
    const divOne = document.getElementById(\[dq]aDiv\[dq]);
    const divTwo = document.getElementById(\[dq]anotherDiv\[dq]);

    //check to determine if an overflow is happening
    function isOverflowing(element) {
      return element.scrollWidth > element.offsetWidth;
    }

    function alertOverflow(element) {
      if (isOverflowing(element)) {
        alert(\[dq]Contents are overflowing the container.\[dq]);
      } else {
        alert(\[dq]No overflows!\[dq]);
      }
    }

    buttonOne.addEventListener(\[dq]click\[dq], () => {
      alertOverflow(divOne);
    });

    buttonTwo.addEventListener(\[dq]click\[dq], () => {
      alertOverflow(divTwo);
    });
  </script>
</html>
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Element.clientWidth\f[R]
.IP \[bu] 2
\f[CR]HTMLElement.offsetWidth\f[R]
.IP \[bu] 2
Determining the dimensions of elements
