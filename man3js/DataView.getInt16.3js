.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "DataView.getInt16" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
DataView.getInt16 - DataView.prototype.getInt16()
.SH SYNOPSIS
.PP
The \f[B]\f[VB]getInt16()\f[B]\f[R] method gets a signed 16-bit integer
(short) at the specified byte offset from the start of the
\f[V]DataView\f[R].
.SH SYNTAX
.IP
.nf
\f[C]
getInt16(byteOffset)
getInt16(byteOffset, littleEndian)
\f[R]
.fi
.SS Parameters
.TP
\f[B]byteOffset\f[R]
The offset, in byte, from the start of the view where to read the data.
.TP
\f[B]littleEndian\f[R] \f[I](optional)\f[R]
Indicates whether the 16-bit int is stored in little- or big-endian
format.
If \f[V]false\f[R] or \f[V]undefined\f[R], a big-endian value is read.
.SS Return value
.PP
A signed 16-bit integer number.
.SS Errors thrown
.TP
\f[B]RangeError\f[R]
Thrown if the \f[V]byteOffset\f[R] is set such as it would read beyond
the end of the view.
.SH DESCRIPTION
.PP
There is no alignment constraint; multi-byte values may be fetched from
any offset.
.SH EXAMPLES
.SS Using the getInt16 method
.IP
.nf
\f[C]
const buffer = new ArrayBuffer(8);
const dataview = new DataView(buffer);
dataview.getInt16(1); // 0
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
\f[V]DataView\f[R]
.IP \[bu] 2
\f[V]ArrayBuffer\f[R]
