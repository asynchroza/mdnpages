.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "String.fontcolor" "JS" "February 21, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
String.fontcolor - String.prototype.fontcolor()
.SH SYNOPSIS
\f[I](deprecated)\f[R]
.PP
The \f[B]\f[CB]fontcolor()\f[B]\f[R] method creates a string that embeds
a string in a \f[CR]<font>\f[R] element
(\f[CR]<font color=\[dq]...\[dq]>str</font>\f[R]), which causes a string
to be displayed in the specified font color.
.RS
.PP
\f[B]Note:\f[R] All HTML wrapper methods are deprecated and only
standardized for compatibility purposes.
For the case of \f[CR]fontcolor()\f[R], the \f[CR]<font>\f[R] element
itself has been removed in HTML5 and shouldn\[cq]t be used anymore.
Web developers should use CSS properties instead.
.RE
.SH SYNTAX
.IP
.EX
fontcolor(color)
.EE
.SS Parameters
.TP
\f[B]color\f[R]
A string expressing the color as a hexadecimal RGB triplet or as a
string literal.
String literals for color names are listed in the CSS color reference.
.SS Return value
A string beginning with a \f[CR]<font color=\[dq]color\[dq]>\f[R] start
tag (double quotes in \f[CR]color\f[R] are replaced with
\f[CR]&quot;\f[R]), then the text \f[CR]str\f[R], and then a
\f[CR]</font>\f[R] end tag.
.SH DESCRIPTION
The \f[CR]fontcolor()\f[R] method itself simply joins the string parts
together without any validation or normalization.
However, to create valid \f[CR]<font>\f[R] elements, if you express
color as a hexadecimal RGB triplet, you must use the format
\f[CR]rrggbb\f[R].
For example, the hexadecimal RGB values for salmon are red=FA, green=80,
and blue=72, so the RGB triplet for salmon is
\f[CR]\[dq]FA8072\[dq]\f[R].
.SH EXAMPLES
.SS Using fontcolor()
The following example uses the \f[CR]fontcolor()\f[R] method to change
the color of a string by producing a string with the HTML
\f[CR]<font>\f[R] element.
.IP
.EX
const worldString = \[dq]Hello, world\[dq];

console.log(\[ga]${worldString.fontcolor(\[dq]red\[dq])} is red in this line\[ga]);
// \[aq]<font color=\[dq]red\[dq]>Hello, world</font> is red in this line\[aq]

console.log(
  \[ga]${worldString.fontcolor(\[dq]FF00\[dq])} is red in hexadecimal in this line\[ga],
);
// \[aq]<font color=\[dq]FF00\[dq]>Hello, world</font> is red in hexadecimal in this line\[aq]
.EE
.PP
With the \f[CR]element.style\f[R] object you can get the element\[cq]s
\f[CR]style\f[R] attribute and manipulate it more generically, for
example:
.IP
.EX
document.getElementById(\[dq]yourElemId\[dq]).style.color = \[dq]red\[dq];
.EE
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[CR]String.prototype.fontcolor\f[R] in
\f[CR]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-string-and-regexp)
.IP \[bu] 2
\f[CR]String.prototype.fontsize()\f[R]
