.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "HTMLImageElement.x" "JS" "May 10, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLImageElement.x \- HTMLImageElement: x property
.SH SYNOPSIS
The read\-only \f[CR]HTMLImageElement\f[R] property
\f[B]\f[CB]x\f[B]\f[R] indicates the x\-coordinate of the
\f[CR]<img>\f[R] element\[cq]s left border edge relative to the root
element\[cq]s origin.
.PP
The \f[CR]x\f[R] and \f[CR]y\f[R] properties are only valid for an image
if its \f[CR]display\f[R] property has the computed value
\f[CR]table\-column\f[R] or \f[CR]table\-column\-group\f[R].
In other words: it has either of those values set explicitly on it, or
it has inherited it from a containing element, or by being located
within a column described by either \f[CR]<col>\f[R] or
\f[CR]<colgroup>\f[R].
.SH VALUE
An integer value indicating the distance in pixels from the left edge of
the element\[cq]s nearest root element and the left edge of the
\f[CR]<img>\f[R] element\[cq]s border box.
The nearest root element is the outermost \f[CR]<html>\f[R] element that
contains the image.
If the image is in an \f[CR]<iframe>\f[R], its \f[CR]x\f[R] is relative
to that frame.
.PP
In the diagram below, the left border edge is the left edge of the blue
padding area.
So the value returned by \f[CR]x\f[R] would be the distance from that
point to the left edge of the content area.
[IMAGE: Diagram showing the relationships between the various boxes
associated with an element]
Diagram showing the relationships between the various boxes associated
with an element
.RS
.PP
\f[B]Note:\f[R] The \f[CR]x\f[R] property is only valid if the computed
value of the image\[cq]s \f[CR]display\f[R] property is either
\f[CR]table\-column\f[R] or \f[CR]table\-column\-group\f[R]; in other
words, either of those are set directly on the \f[CR]<img>\f[R] or
they\[cq]re inherited from a containing element or by being located
within a column described by either \f[CR]<col>\f[R] or
\f[CR]<colgroup>\f[R].
.RE
.SH EXAMPLE
The example below demonstrates the use of the
\f[CR]HTMLImageElement\f[R] properties \f[CR]x\f[R] and \f[CR]y\f[R].
.SS HTML
In this example, we see a table showing information about users of a
website, including their user ID, their full name, and their avatar
image.
.IP
.EX
<table id=\[dq]userinfo\[dq]>
  <colgroup>
    <col span=\[dq]2\[dq] class=\[dq]group1\[dq]>
    <col>
  </colgroup>
  <tr>
    <th>UserID</th>
    <th>Name</th>
    <th>Avatar</th>
  </tr>
  <tr>
    <td>12345678</td>
    <td>Johnny Rocket</td>
    <td><img src=\[dq]https://interactive\-examples.mdn.mozilla.net/media/examples/grapefruit\-slice\-332\-332.jpg\[dq]></td>
  </th>
</table>
<pre id=\[dq]log\[dq]>
</pre>
.EE
.SS JavaScript
The JavaScript code that fetches the image from the table and looks up
its \f[CR]x\f[R] and \f[CR]y\f[R] values is below.
.IP
.EX
let logBox = document.querySelector(\[dq]pre\[dq]);
let tbl = document.getElementById(\[dq]userinfo\[dq]);

let log = (msg) => {
  logBox.innerHTML += \[ga]${msg}<br>\[ga];
};

let cell = tbl.rows[1].cells[2];
let image = cell.querySelector(\[dq]img\[dq]);

log(\[ga]Image\[aq]s global X: ${image.x}\[ga]);
log(\[ga]Image\[aq]s global Y: ${image.y}\[ga]);
.EE
.PP
This uses the \f[CR]<table>\f[R]\[cq]s \f[CR]rows\f[R] property to get a
list of the rows in the table, from which it looks up row 1 (which,
being a zero\-based index, means the second row from the top).
Then it looks at that \f[CR]<tr>\f[R] (table row) element\[cq]s
\f[CR]cells\f[R] property to get a list of the cells in that row.
The third cell is taken from that row (once again, specifying 2 as the
zero\-based offset).
.PP
From there, we can get the \f[CR]<img>\f[R] element itself from the cell
by calling \f[CR]querySelector()\f[R] on the
\f[CR]HTMLTableCellElement\f[R] representing that cell.
.PP
Finally, we can look up and display the values of the
\f[CR]HTMLImageElement\f[R]\[cq]s \f[CR]x\f[R] and \f[CR]y\f[R]
properties.
.SS CSS
The CSS defining the appearance of the table:
.IP
.EX
\&.group1 {
  background\-color: #d7d9f2;
}

table {
  border\-collapse: collapse;
  border: 2px solid rgb(100, 100, 100);
  font\-family: sans\-serif;
}

td,
th {
  border: 1px solid rgb(100, 100, 100);
  padding: 10px 14px;
}

td > img {
  max\-width: 4em;
}
.EE
.SS Result
The resulting table looks like this:
