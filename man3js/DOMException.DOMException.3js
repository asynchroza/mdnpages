.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "DOMException.DOMException" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DOMException.DOMException \- DOMException: DOMException() constructor
.SH SYNOPSIS
The \f[B]\f[CB]DOMException()\f[B]\f[R] constructor returns a
\f[CR]DOMException\f[R] object with a specified message and name.
.SH SYNTAX
.IP
.EX
new DOMException()
new DOMException(message)
new DOMException(message, name)
.EE
.SS Parameters
.TP
\f[B]message\f[R] \f[I](optional)\f[R]
A description of the exception.
If not present, the empty string \f[CR]\[aq]\[aq]\f[R] is used.
.TP
\f[B]name\f[R] \f[I](optional)\f[R]
A string.
If the specified name is a standard error name, then getting the
\f[CR]code\f[R] property of the \f[CR]DOMException\f[R] object will
return the code number corresponding to the specified name.
.SS Return value
A newly created \f[CR]DOMException\f[R] object.
.SH EXAMPLES
In this example, pressing the button causes a custom
\f[CR]DOMException\f[R] to be thrown, which is then caught and the
custom error message shown in an alert.
.SS HTML
.IP
.EX
<button>Trigger DOM Exception</button>

<p id=\[dq]output\[dq]></p>
.EE
.SS JavaScript
.IP
.EX
const button = document.querySelector(\[dq]button\[dq]);

button.onclick = () => {
  try {
    throw new DOMException(\[dq]Custom DOM Exception Triggered.\[dq]);
  } catch (error) {
    document.querySelector(\[dq]#output\[dq]).textContent = \[ga]Error: ${error.message}\[ga];
  }
};
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://github.com/zloirock/core-js#domexception
A polyfill of \f[CR]DOMException\f[R] constructor
.UE \c
\ is available in \c
.UR https://github.com/zloirock/core-js
\f[CR]core\-js\f[R]
.UE \c
