.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "MediaSource.MediaSource" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MediaSource.MediaSource \- MediaSource: MediaSource() constructor
.SH SYNOPSIS
The \f[B]\f[CB]MediaSource()\f[B]\f[R] constructor of the
\f[CR]MediaSource\f[R] interface constructs and returns a new
\f[CR]MediaSource\f[R] object with no associated source buffers.
.SH SYNTAX
.IP
.EX
new MediaSource()
.EE
.SS Parameters
None.
.SH EXAMPLES
The following snippet is taken from a simple example written by Nick
Desaulniers (\c
.UR https://nickdesaulniers.github.io/netfix/demo/bufferAll.html
view the full demo live
.UE \c
, or \c
.UR
https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html
download the source
.UE \c
\ for further investigation).
.IP
.EX
const video = document.querySelector(\[dq]video\[dq]);

const assetURL = \[dq]frag_bunny.mp4\[dq];
// Need to be specific for Blink regarding codecs
// ./mp4info frag_bunny.mp4 | grep Codec
const mimeCodec = \[aq]video/mp4; codecs=\[dq]avc1.42E01E, mp4a.40.2\[dq]\[aq];

if (\[dq]MediaSource\[dq] in window && MediaSource.isTypeSupported(mimeCodec)) {
  const mediaSource = new MediaSource();
  //console.log(mediaSource.readyState); // closed
  video.src = URL.createObjectURL(mediaSource);
  mediaSource.addEventListener(\[dq]sourceopen\[dq], sourceOpen);
} else {
  console.error(\[dq]Unsupported MIME type or codec: \[dq], mimeCodec);
}

// \&...
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]SourceBuffer\f[R]
.IP \[bu] 2
\f[CR]SourceBufferList\f[R]
