.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "ArrayBuffer.ArrayBuffer" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
ArrayBuffer.ArrayBuffer - ArrayBuffer() constructor
.SH SYNOPSIS
.PP
The \f[B]\f[VB]ArrayBuffer()\f[B]\f[R] constructor creates
\f[V]ArrayBuffer\f[R] objects.
.SH SYNTAX
.IP
.nf
\f[C]
new ArrayBuffer(length)
new ArrayBuffer(length, options)
\f[R]
.fi
.RS
.PP
\f[B]Note:\f[R] \f[V]ArrayBuffer()\f[R] can only be constructed with
\f[V]new\f[R].
Attempting to call it without \f[V]new\f[R] throws a
\f[V]TypeError\f[R].
.RE
.SS Parameters
.TP
\f[B]length\f[R]
The size, in bytes, of the array buffer to create.
.TP
\f[B]options\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
An object, which can contain the following properties:
.RS
.TP
\f[B]maxByteLength\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
The maximum size, in bytes, that the array buffer can be resized to.
.RE
.SS Return value
.PP
A new \f[V]ArrayBuffer\f[R] object of the specified size, with its
\f[V]maxByteLength\f[R] property set to the specified
\f[V]maxByteLength\f[R] if one was specified.
Its contents are initialized to 0.
.SS Exceptions
.TP
\f[B]RangeError\f[R]
Thrown if one of the following is true:
.RS
.IP \[bu] 2
\f[V]length\f[R] or \f[V]maxByteLength\f[R] is larger than
\f[V]Number.MAX_SAFE_INTEGER\f[R] (â‰¥ 253) or negative.
.IP \[bu] 2
\f[V]length\f[R] is larger than \f[V]maxByteLength\f[R].
.RE
.SH EXAMPLES
.SS Creating an ArrayBuffer
.PP
In this example, we create a 8-byte buffer with a \f[V]Int32Array\f[R]
view referring to the buffer:
.IP
.nf
\f[C]
const buffer = new ArrayBuffer(8);
const view = new Int32Array(buffer);
\f[R]
.fi
.SS Creating a resizable ArrayBuffer
.PP
In this example, we create a 8-byte buffer that is resizable to a max
length of 16 bytes, then \f[V]resize()\f[R] it to 12 bytes:
.IP
.nf
\f[C]
const buffer = new ArrayBuffer(8, { maxByteLength: 16 });

buffer.resize(12);
\f[R]
.fi
.RS
.PP
\f[B]Note:\f[R] It is recommended that \f[V]maxByteLength\f[R] is set to
the smallest value possible for your use case.
It should never exceed \f[V]1073741824\f[R] (1GB) to reduce the risk of
out-of-memory errors.
.RE
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[V]ArrayBuffer\f[R] in
\f[V]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-typed-arrays)
.IP \[bu] 2
JavaScript typed arrays
.IP \[bu] 2
\f[V]SharedArrayBuffer\f[R]
