.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Element.getElementsByTagNameNS" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Element.getElementsByTagNameNS \- Element: getElementsByTagNameNS()
method
.SH SYNOPSIS
The \f[B]\f[CB]Element.getElementsByTagNameNS()\f[B]\f[R] method returns
a live \f[CR]HTMLCollection\f[R] of elements with the given tag name
belonging to the given namespace.
It is similar to \f[CR]Document.getElementsByTagNameNS\f[R], except that
its search is restricted to descendants of the specified element.
.SH SYNTAX
.IP
.EX
getElementsByTagNameNS(namespaceURI, localName)
.EE
.SS Parameters
.IP \[bu] 2
\f[CR]namespaceURI\f[R] is the namespace URI of elements to look for
(see \f[CR]Element.namespaceURI\f[R] and \f[CR]Attr.namespaceURI\f[R]).
For example, if you need to look for XHTML elements, use the XHTML
namespace URI, \f[CR]http://www.w3.org/1999/xhtml\f[R].
.IP \[bu] 2
\f[CR]localName\f[R] is either the local name of elements to look for or
the special value \f[CR]\[dq]*\[dq]\f[R], which matches all elements
(see \f[CR]Element.localName\f[R] and \f[CR]Attr.localName\f[R]).
.SS Return value
A live \f[CR]HTMLCollection\f[R] of found elements in the order they
appear in the tree.
.SH EXAMPLES
.IP
.EX
// Check the alignment on a number of cells in a table in an XHTML document.
const table = document.getElementById(\[dq]forecast\-table\[dq]);
const cells = table.getElementsByTagNameNS(
  \[dq]http://www.w3.org/1999/xhtml\[dq],
  \[dq]td\[dq],
);

for (const cell of cells) {
  const axis = cell.getAttribute(\[dq]axis\[dq]);
  if (axis === \[dq]year\[dq]) {
    // Grab the data
  }
}
.EE
