.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Response.url" "JS" "September 21, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Response.url \- Response: url property
.SH SYNOPSIS
The \f[B]\f[CB]url\f[B]\f[R] read\-only property of the
\f[CR]Response\f[R] interface contains the URL of the response.
The value of the \f[CR]url\f[R] property will be the final URL obtained
after any redirects.
.SH VALUE
A string.
.SH EXAMPLES
In our \c
.UR https://github.com/mdn/dom-examples/tree/main/fetch/fetch-response
Fetch Response example
.UE \c
\ (see \c
.UR https://mdn.github.io/dom-examples/fetch/fetch-response/
Fetch Response live
.UE \c
) we create a new \f[CR]Request\f[R] object using the
\f[CR]Request()\f[R] constructor, passing it a JPG path.
We then fetch this request using \f[CR]fetch()\f[R], extract a blob from
the response using \f[CR]Response.blob\f[R], create an object URL out of
it using \f[CR]URL.createObjectURL()\f[R], and display this in an
\f[CR]<img>\f[R].
.PP
Note that at the top of the \f[CR]fetch()\f[R] block we log the response
\f[CR]URL\f[R] to the console.
.IP
.EX
const myImage = document.querySelector(\[dq]img\[dq]);

const myRequest = new Request(\[dq]flowers.jpg\[dq]);

fetch(myRequest)
  .then((response) => {
    console.log(\[dq]response.url =\[dq], response.url); // response.url = https://mdn.github.io/dom\-examples/fetch/fetch\-response/flowers.jpg
    return response.blob();
  })
  .then((myBlob) => {
    const objectURL = URL.createObjectURL(myBlob);
    myImage.src = objectURL;
  });
.EE
.SH SEE ALSO
.IP \[bu] 2
ServiceWorker API
.IP \[bu] 2
HTTP access control (CORS)
.IP \[bu] 2
HTTP
