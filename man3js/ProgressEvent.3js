.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "ProgressEvent" "JS" "November 8, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ProgressEvent \- ProgressEvent
.SH SYNOPSIS
The \f[B]\f[CB]ProgressEvent\f[B]\f[R] interface represents events
measuring progress of an underlying process, like an HTTP request (for
an \f[CR]XMLHttpRequest\f[R], or the loading of the underlying resource
of an \f[CR]<img>\f[R], \f[CR]<audio>\f[R], \f[CR]<video>\f[R],
\f[CR]<style>\f[R] or \f[CR]<link>\f[R]).
.SH CONSTRUCTOR
.TP
\f[B]ProgressEvent()\f[R]
Creates a \f[CR]ProgressEvent\f[R] event with the given parameters.
.SH INSTANCE PROPERTIES
\f[I]Also inherits properties from its parent \f[CI]Event\f[I]\f[R].
.TP
\f[B]ProgressEvent.lengthComputable\f[R] \f[I](read\-only)\f[R]
A boolean flag indicating if the total work to be done, and the amount
of work already done, by the underlying process is calculable.
In other words, it tells if the progress is measurable or not.
.TP
\f[B]ProgressEvent.loaded\f[R] \f[I](read\-only)\f[R]
A 64\-bit unsigned integer value indicating the amount of work already
performed by the underlying process.
The ratio of work done can be calculated by dividing \f[CR]total\f[R] by
the value of this property.
When downloading a resource using HTTP, this only counts the body of the
HTTP message, and doesn\[cq]t include headers and other overhead.
.TP
\f[B]ProgressEvent.total\f[R] \f[I](read\-only)\f[R]
A 64\-bit unsigned integer representing the total amount of work that
the underlying process is in the progress of performing.
When downloading a resource using HTTP, this is the
\f[CR]Content\-Length\f[R] (the size of the body of the message), and
doesn\[cq]t include the headers and other overhead.
.SH INSTANCE METHODS
\f[I]Inherits methods from its parent, \f[CI]Event\f[I].\f[R]
.SH EXAMPLES
The following example adds a \f[CR]ProgressEvent\f[R] to a new
\f[CR]XMLHTTPRequest\f[R] and uses it to display the status of the
request.
.IP
.EX
const progressBar = document.getElementById(\[dq]p\[dq]),
  client = new XMLHttpRequest();
client.open(\[dq]GET\[dq], \[dq]magical\-unicorns\[dq]);
client.onprogress = (pe) => {
  if (pe.lengthComputable) {
    progressBar.max = pe.total;
    progressBar.value = pe.loaded;
  }
};
client.onloadend = (pe) => {
  progressBar.value = pe.loaded;
};
client.send();
.EE
.SH SEE ALSO
.IP \[bu] 2
The \f[CR]Event\f[R] base interface.
