.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "BaseAudioContext.createConvolver" "JS" "November 21, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
BaseAudioContext.createConvolver \- BaseAudioContext: createConvolver()
method
.SH SYNOPSIS
The \f[CR]createConvolver()\f[R] method of the
\f[CR]BaseAudioContext\f[R] interface creates a
\f[CR]ConvolverNode\f[R], which is commonly used to apply reverb effects
to your audio.
See the \c
.UR https://webaudio.github.io/web-audio-api/#background-3
spec definition of Convolution
.UE \c
\ for more information.
.RS
.PP
\f[B]Note:\f[R] The \f[CR]ConvolverNode()\f[R] constructor is the
recommended way to create a \f[CR]ConvolverNode\f[R]; see Creating an
AudioNode.
.RE
.SH SYNTAX
.IP
.EX
createConvolver()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]ConvolverNode\f[R].
.SH EXAMPLES
.SS Creating a convolver node
The following example shows how to use an AudioContext to create a
convolver node.
You create an \f[CR]AudioBuffer\f[R] containing a sound sample to be
used as an ambience to shape the convolution (called the \f[I]impulse
response\f[R]) and apply that to the convolver.
The example below uses a short sample of a concert hall crowd, so the
reverb effect applied is really deep and echoey.
.PP
For more complete applied examples/information, check out our \c
.UR https://mdn.github.io/webaudio-examples/voice-change-o-matic/
Voice\-change\-O\-matic
.UE \c
\ demo (see \c
.UR
https://github.com/mdn/webaudio-examples/blob/main/voice-change-o-matic/scripts/app.js
app.js
.UE \c
\ for the code that is excerpted below).
.IP
.EX
const audioCtx = new AudioContext();
// ...

const convolver = audioCtx.createConvolver();
// ...

// Grab audio track via fetch() for convolver node
try {
  const response = await fetch(
    \[dq]https://mdn.github.io/voice\-change\-o\-matic/audio/concert\-crowd.ogg\[dq],
  );
  const arrayBuffer = await response.arrayBuffer();
  const decodedAudio = await audioCtx.decodeAudioData(arrayBuffer);
  convolver.buffer = decodedAudio;
} catch (error) {
  console.error(
    \[ga]Unable to fetch the audio file: ${name} Error: ${err.message}\[ga],
  );
}
.EE
.SH SEE ALSO
.IP \[bu] 2
Using the Web Audio API
