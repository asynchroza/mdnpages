.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "RangeError" "JS" "2023-06-02" "JavaScript" "JavaScript Reference Manual"
.hy
.SH Synopsis
.PP
The \f[B]\f[VB]RangeError\f[B]\f[R] object indicates an error when a
value is not in the set or range of allowed values.
.SH Description
.PP
A \f[V]RangeError\f[R] is thrown when trying to pass a value as an
argument to a function that does not allow a range that includes the
value.
.PP
This can be encountered when:
.IP \[bu] 2
passing a value that is not one of the allowed string values to
\f[V]String.prototype.normalize()\f[R], or
.IP \[bu] 2
when attempting to create an array of an illegal length with the
\f[V]Array\f[R] constructor, or
.IP \[bu] 2
when passing bad values to the numeric methods
\f[V]Number.prototype.toExponential()\f[R],
\f[V]Number.prototype.toFixed()\f[R] or
\f[V]Number.prototype.toPrecision()\f[R].
.PP
\f[V]RangeError\f[R] is a serializable object, so it can be cloned with
\f[V]structuredClone()\f[R] or copied between Workers using
\f[V]postMessage()\f[R].
.PP
\f[V]RangeError\f[R] is a subclass of \f[V]Error\f[R].
.SH Constructor
.IP \[bu] 2
\f[V]RangeError()\f[R]
.RS 2
.IP \[bu] 2
Creates a new \f[V]RangeError\f[R] object.
.RE
.SH Instance properties
.PP
\f[I]Also inherits instance properties from its parent
\f[VI]Error\f[I]\f[R].
.PP
These properties are defined on \f[V]RangeError.prototype\f[R] and
shared by all \f[V]RangeError\f[R] instances.
.IP \[bu] 2
\f[V]RangeError.prototype.constructor\f[R]
.RS 2
.IP \[bu] 2
The constructor function that created the instance object.
For \f[V]RangeError\f[R] instances, the initial value is the
\f[V]RangeError\f[R] constructor.
.RE
.IP \[bu] 2
\f[V]RangeError.prototype.name\f[R]
.RS 2
.IP \[bu] 2
Represents the name for the type of error.
For \f[V]RangeError.prototype.name\f[R], the initial value is
\f[V]\[dq]RangeError\[dq]\f[R].
.RE
.SH Instance methods
.PP
\f[I]Inherits instance methods from its parent \f[VI]Error\f[I]\f[R].
.SH Examples
.SS Using RangeError (for numeric values)
.IP
.nf
\f[C]
function check(n) {
  if (!(n >= -500 && n <= 500)) {
    throw new RangeError(\[dq]The argument must be between -500 and 500.\[dq]);
  }
}

try {
  check(2000);
} catch (error) {
  if (error instanceof RangeError) {
    // Handle the error
  }
}
\f[R]
.fi
.SS Using RangeError (for non-numeric values)
.IP
.nf
\f[C]
function check(value) {
  if (![\[dq]apple\[dq], \[dq]banana\[dq], \[dq]carrot\[dq]].includes(value)) {
    throw new RangeError(
      \[aq]The argument must be an \[dq]apple\[dq], \[dq]banana\[dq], or \[dq]carrot\[dq].\[aq],
    );
  }
}

try {
  check(\[dq]cabbage\[dq]);
} catch (error) {
  if (error instanceof RangeError) {
    // Handle the error
  }
}
\f[R]
.fi
.SH See also
.IP \[bu] 2
\f[V]Error\f[R]
.IP \[bu] 2
\f[V]Array\f[R]
.IP \[bu] 2
\f[V]Number.prototype.toExponential()\f[R]
.IP \[bu] 2
\f[V]Number.prototype.toFixed()\f[R]
.IP \[bu] 2
\f[V]Number.prototype.toPrecision()\f[R]
.IP \[bu] 2
\f[V]String.prototype.normalize()\f[R]
