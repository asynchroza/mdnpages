.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Object.getOwnPropertySymbols" "JS" "2023-06-02" "JavaScript" "JavaScript Reference Manual"
.hy
.SH Synopsis
.PP
The \f[B]\f[VB]Object.getOwnPropertySymbols()\f[B]\f[R] static method
returns an array of all symbol properties found directly upon a given
object.
.SH Syntax
.IP
.nf
\f[C]
Object.getOwnPropertySymbols(obj)
\f[R]
.fi
.SS Parameters
.IP \[bu] 2
\f[V]obj\f[R]
.RS 2
.IP \[bu] 2
The object whose symbol properties are to be returned.
.RE
.SS Return value
.PP
An array of all symbol properties found directly upon the given object.
.SH Description
.PP
Similar to \f[V]Object.getOwnPropertyNames()\f[R], you can get all
symbol properties of a given object as an array of symbols.
Note that \f[V]Object.getOwnPropertyNames()\f[R] itself does not contain
the symbol properties of an object and only the string properties.
.PP
As all objects have no own symbol properties initially,
\f[V]Object.getOwnPropertySymbols()\f[R] returns an empty array unless
you have set symbol properties on your object.
.SH Examples
.SS Using getOwnPropertySymbols
.IP
.nf
\f[C]
const obj = {};
const a = Symbol(\[dq]a\[dq]);
const b = Symbol.for(\[dq]b\[dq]);

obj[a] = \[dq]localSymbol\[dq];
obj[b] = \[dq]globalSymbol\[dq];

const objectSymbols = Object.getOwnPropertySymbols(obj);

console.log(objectSymbols.length); // 2
console.log(objectSymbols); // [Symbol(a), Symbol(b)]
console.log(objectSymbols[0]); // Symbol(a)
\f[R]
.fi
.SH See also
.IP \[bu] 2
Polyfill of \f[V]Object.getOwnPropertySymbols\f[R] in
\f[V]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-symbol)
.IP \[bu] 2
\f[V]Object.getOwnPropertyNames()\f[R]
.IP \[bu] 2
\f[V]Symbol\f[R]
