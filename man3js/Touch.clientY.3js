.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Touch.clientY" "JS" "November 3, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Touch.clientY \- Touch: clientY property
.SH SYNOPSIS
The \f[B]\f[CB]Touch.clientY\f[B]\f[R] read\-only property returns the Y
coordinate of the touch point relative to the browser\[cq]s viewport,
not including any scroll offset.
.SH VALUE
A \f[CR]double\f[R] floating point value representing the Y coordinate
of the touch point relative to the viewport, not including any scroll
offset.
.SH EXAMPLES
This example illustrates using the \f[CR]Touch\f[R] object\[cq]s
\f[CR]Touch.clientX\f[R] and \f[CR]Touch.clientY\f[R] properties.
The \f[CR]Touch.clientX\f[R] property is the horizontal coordinate of a
touch point relative to the browser\[cq]s viewport excluding any scroll
offset.
The \f[CR]Touch.clientY\f[R] property is the vertical coordinate of the
touch point relative to the browser\[cq]s viewport excluding any scroll
offset .
.PP
In this example, we assume the user initiates a touch on an element with
an id of \f[CR]source\f[R], moves within the element or out of the
element and then releases contact with the surface.
When the \f[CR]touchend\f[R] event handler is invoked, the changes in
the \f[CR]Touch.clientX\f[R] and \f[CR]Touch.clientY\f[R] coordinates,
from the starting touch point to the ending touch point, are calculated.
.IP
.EX
// Register touchstart and touchend listeners for element \[aq]source\[aq]
const src = document.getElementById(\[dq]source\[dq]);
let clientX;
let clientY;

src.addEventListener(
  \[dq]touchstart\[dq],
  (e) => {
    // Cache the client X/Y coordinates
    clientX = e.touches[0].clientX;
    clientY = e.touches[0].clientY;
  },
  false,
);

src.addEventListener(
  \[dq]touchend\[dq],
  (e) => {
    let deltaX;
    let deltaY;

    // Compute the change in X and Y coordinates.
    // The first touch point in the changedTouches
    // list is the touch point that was just removed from the surface.
    deltaX = e.changedTouches[0].clientX \- clientX;
    deltaY = e.changedTouches[0].clientY \- clientY;

    // Process the data\&...
  },
  false,
);
.EE
