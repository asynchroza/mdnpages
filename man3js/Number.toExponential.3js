.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Number.toExponential" "JS" "2023-06-02" "JavaScript" "JavaScript Reference Manual"
.hy
.SH Synopsis
.PP
The \f[B]\f[VB]toExponential()\f[B]\f[R] method returns a string
representing the \f[V]Number\f[R] object in exponential notation.
.SH Syntax
.IP
.nf
\f[C]
toExponential()
toExponential(fractionDigits)
\f[R]
.fi
.SS Parameters
.IP \[bu] 2
\f[V]fractionDigits\f[R] \f[I](optional)\f[R]
.RS 2
.IP \[bu] 2
Optional.
An integer specifying the number of digits after the decimal point.
Defaults to as many digits as necessary to specify the number.
.RE
.SS Return value
.PP
A string representing the given \f[V]Number\f[R] object in exponential
notation with one digit before the decimal point, rounded to
\f[V]fractionDigits\f[R] digits after the decimal point.
.SS Exceptions
.IP \[bu] 2
\f[V]RangeError\f[R]
.RS 2
.IP \[bu] 2
Thrown if \f[V]fractionDigits\f[R] is not between \f[V]1\f[R] and
\f[V]100\f[R] (inclusive).
.RE
.IP \[bu] 2
\f[V]TypeError\f[R]
.RS 2
.IP \[bu] 2
Thrown if this method is invoked on an object that is not a
\f[V]Number\f[R].
.RE
.SH Description
.PP
If the \f[V]fractionDigits\f[R] argument is omitted, the number of
digits after the decimal point defaults to the number of digits
necessary to represent the value uniquely.
.PP
If you use the \f[V]toExponential()\f[R] method for a numeric literal
and the numeric literal has no exponent and no decimal point, leave
whitespace(s) before the dot that precedes the method call to prevent
the dot from being interpreted as a decimal point.
.PP
If a number has more digits than requested by the
\f[V]fractionDigits\f[R] parameter, the number is rounded to the nearest
number represented by \f[V]fractionDigits\f[R] digits.
See the discussion of rounding in the description of the
\f[V]toFixed()\f[R] method, which also applies to
\f[V]toExponential()\f[R].
.SH Examples
.SS Using toExponential
.IP
.nf
\f[C]
const numObj = 77.1234;

console.log(numObj.toExponential()); // 7.71234e+1
console.log(numObj.toExponential(4)); // 7.7123e+1
console.log(numObj.toExponential(2)); // 7.71e+1
console.log((77.1234).toExponential()); // 7.71234e+1
console.log((77).toExponential()); // 7.7e+1
\f[R]
.fi
.SH See also
.IP \[bu] 2
A polyfill of
\f[V]Number.prototype.toExponential\f[R] (https://github.com/zloirock/core-js#ecmascript-number)
with many bug fixes is available in
\f[V]core-js\f[R] (https://github.com/zloirock/core-js)
.IP \[bu] 2
\f[V]Number.prototype.toFixed()\f[R]
.IP \[bu] 2
\f[V]Number.prototype.toPrecision()\f[R]
.IP \[bu] 2
\f[V]Number.prototype.toString()\f[R]
