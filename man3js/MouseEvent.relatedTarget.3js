.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "MouseEvent.relatedTarget" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MouseEvent.relatedTarget \- MouseEvent: relatedTarget property
.SH SYNOPSIS
The \f[B]\f[CB]MouseEvent.relatedTarget\f[B]\f[R] read\-only property is
the secondary target for the mouse event, if there is one.
.PP
That is:
Event name
target
relatedTarget
\f[CR]mouseenter\f[R]
The \f[CR]EventTarget\f[R] the pointing device entered to
The \f[CR]EventTarget\f[R] the pointing device exited from
\f[CR]mouseleave\f[R]
The \f[CR]EventTarget\f[R] the pointing device exited from
The \f[CR]EventTarget\f[R] the pointing device entered to
\f[CR]mouseout\f[R]
The \f[CR]EventTarget\f[R] the pointing device exited from
The \f[CR]EventTarget\f[R] the pointing device entered to
\f[CR]mouseover\f[R]
The \f[CR]EventTarget\f[R] the pointing device entered to
The \f[CR]EventTarget\f[R] the pointing device exited from
\f[CR]dragenter\f[R]
The \f[CR]EventTarget\f[R] the pointing device entered to
The \f[CR]EventTarget\f[R] the pointing device exited from
\f[CR]dragleave\f[R]
The \f[CR]EventTarget\f[R] the pointing device exited from
The \f[CR]EventTarget\f[R] the pointing device entered to
.PP
For events with no secondary target, \f[CR]relatedTarget\f[R] returns
\f[CR]null\f[R].
.PP
\f[CR]FocusEvent.relatedTarget\f[R] is a similar property for focus
events.
.SH VALUE
An \f[CR]EventTarget\f[R] object or \f[CR]null\f[R].
.SH EXAMPLES
Try moving your mouse cursor into and out of the red and blue boxes.
.SS HTML
.IP
.EX
<body id=\[dq]body\[dq]>
  <div id=\[dq]outer\[dq]>
    <div id=\[dq]red\[dq]></div>
    <div id=\[dq]blue\[dq]></div>
  </div>
  <p id=\[dq]log\[dq]></p>
</body>
.EE
.SS CSS
.IP
.EX
outer {
  width: 250px;
  height: 125px;
  display: flex;
}

red {
  flex\-grow: 1;
  background: red;
}

blue {
  flex\-grow: 1;
  background: blue;
}

log {
  max\-height: 120px;
  overflow\-y: scroll;
}
.EE
.SS JavaScript
.IP
.EX
const mouseoutLog = document.getElementById(\[dq]log\[dq]),
  red = document.getElementById(\[dq]red\[dq]),
  blue = document.getElementById(\[dq]blue\[dq]);

red.addEventListener(\[dq]mouseover\[dq], overListener);
red.addEventListener(\[dq]mouseout\[dq], outListener);
blue.addEventListener(\[dq]mouseover\[dq], overListener);
blue.addEventListener(\[dq]mouseout\[dq], outListener);

function outListener(event) {
  let related = event.relatedTarget ? event.relatedTarget.id : \[dq]unknown\[dq];

  mouseoutLog.innerText = \[ga]\[rs]nfrom ${event.target.id} into ${related} ${mouseoutLog.innerText}\[ga];
}

function overListener(event) {
  let related = event.relatedTarget ? event.relatedTarget.id : \[dq]unknown\[dq];

  mouseoutLog.innerText = \[ga]\[rs]ninto ${event.target.id} from ${related} ${mouseoutLog.innerText}\[ga];
}
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
\f[CR]MouseEvent\f[R]
.IP \[bu] 2
Comparison of Event Targets
