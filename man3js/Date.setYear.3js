.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "Date.setYear" "JS" "September 25, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Date.setYear - Date.prototype.setYear()
.SH SYNOPSIS
\f[I](deprecated)\f[R]
.PP
The \f[B]\f[CB]setYear()\f[B]\f[R] method of \f[CR]Date\f[R] instances
sets the year for a specified date according to local time.
.PP
However, the way the legacy \f[CR]setYear()\f[R] method sets year values
is different from how the preferred \f[CR]setFullYear()\f[R] method sets
year values \[em] and in some cases, also different from how
\f[CR]new Date()\f[R] and \f[CR]Date.parse()\f[R] set year values.
Specifically, given two-digit numbers, such as \f[CR]22\f[R] and
\f[CR]61\f[R]:
.IP \[bu] 2
\f[CR]setYear()\f[R] interprets any two-digit number as an offset to
\f[CR]1900\f[R]; so \f[CR]date.setYear(22)\f[R] results in the year
value being set to \f[CR]1922\f[R], and \f[CR]date.setYear(61)\f[R]
results in the year value being set to \f[CR]1961\f[R].
(In contrast, while \f[CR]new Date(61, 1)\f[R] also results in the year
value being set to \f[CR]1961\f[R],
\f[CR]new Date(\[dq]2/1/22\[dq])\f[R] results in the year value being
set to \f[CR]2022\f[R]; and similarly for \f[CR]Date.parse()\f[R]).
.IP \[bu] 2
\f[CR]setFullYear()\f[R] does no special interpretation but instead uses
the literal two-digit value as-is to set the year; so
\f[CR]date.setFullYear(61)\f[R] results in the year value being set to
\f[CR]0061\f[R], and \f[CR]date.setFullYear(22)\f[R] results in the year
value being set to \f[CR]0022\f[R].
.PP
Because of those differences in behavior, you should no longer use the
legacy \f[CR]setYear()\f[R] method, but should instead use the preferred
\f[CR]setFullYear()\f[R] method.
.SH SYNTAX
.IP
.EX
setYear(yearValue)
.EE
.SS Parameters
.TP
\f[B]yearValue\f[R]
An integer.
.SS Return value
Changes the \f[CR]Date\f[R] object in place, and returns its new
timestamp.
If \f[CR]yearValue\f[R] is \f[CR]NaN\f[R] (or other values that get
coerced to \f[CR]NaN\f[R], such as \f[CR]undefined\f[R]), the date is
set to Invalid Date and \f[CR]NaN\f[R] is returned.
.SH DESCRIPTION
If \f[CR]yearValue\f[R] is a number between 0 and 99 (inclusive), then
the year for \f[CR]dateObj\f[R] is set to \f[CR]1900 + yearValue\f[R].
Otherwise, the year for \f[CR]dateObj\f[R] is set to
\f[CR]yearValue\f[R].
.SH EXAMPLES
.SS Using setYear()
The first two lines set the year to 1996.
The third sets the year to 2000.
.IP
.EX
const theBigDay = new Date();

theBigDay.setYear(96);
theBigDay.setYear(1996);
theBigDay.setYear(2000);
.EE
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[CR]Date.prototype.setYear\f[R] in
\f[CR]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-date)
.IP \[bu] 2
\f[CR]Date.prototype.getFullYear()\f[R]
.IP \[bu] 2
\f[CR]Date.prototype.getUTCFullYear()\f[R]
.IP \[bu] 2
\f[CR]Date.prototype.setFullYear()\f[R]
.IP \[bu] 2
\f[CR]Date.prototype.setUTCFullYear()\f[R]
