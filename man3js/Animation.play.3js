.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Animation.play" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Animation.play \- Animation: play() method
.SH SYNOPSIS
The \f[B]\f[CB]play()\f[B]\f[R] method of the Web Animations API\[cq]s
\f[CR]Animation\f[R] Interface starts or resumes playing of an
animation.
If the animation is finished, calling \f[CR]play()\f[R] restarts the
animation, playing it from the beginning.
.SH SYNTAX
.IP
.EX
play()
.EE
.SS Parameters
None.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
In the \c
.UR https://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010
Growing/Shrinking Alice Game
.UE \c
\ example, clicking or tapping the cake causes Alice\[cq]s growing
animation (\f[CR]aliceChange\f[R]) to play forward, causing her to get
bigger, as well as triggering the cake\[cq]s animation.
Two \f[CR]Animation.play()\f[R]s, one \f[CR]EventListener\f[R]:
.IP
.EX
// The cake has its own animation:
const nommingCake = document
  .getElementById(\[dq]eat\-me_sprite\[dq])
  .animate(
    [{ transform: \[dq]translateY(0)\[dq] }, { transform: \[dq]translateY(\-80%)\[dq] }],
    {
      fill: \[dq]forwards\[dq],
      easing: \[dq]steps(4, end)\[dq],
      duration: aliceChange.effect.timing.duration / 2,
    },
  );

// Pause the cake\[aq]s animation so it doesn\[aq]t play immediately.
nommingCake.pause();

// This function will play when ever a user clicks or taps
const growAlice = () => {
  // Play Alice\[aq]s animation.
  aliceChange.play();

  // Play the cake\[aq]s animation.
  nommingCake.play();
};

// When a user holds their mouse down or taps, call growAlice to make all the animations play.
cake.addEventListener(\[dq]mousedown\[dq], growAlice, false);
cake.addEventListener(\[dq]touchstart\[dq], growAlice, false);
.EE
.SH SEE ALSO
.IP \[bu] 2
Web Animations API
.IP \[bu] 2
\f[CR]Animation\f[R] for other methods and properties you can use to
control web page animation.
.IP \[bu] 2
\f[CR]Animation.pause()\f[R] to pause an animation.
.IP \[bu] 2
\f[CR]Animation.reverse()\f[R] to play an animation backwards.
.IP \[bu] 2
\f[CR]Animation.finish()\f[R] to finish an animation.
.IP \[bu] 2
\f[CR]Animation.cancel()\f[R] to cancel an animation.
