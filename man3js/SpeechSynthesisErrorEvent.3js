.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "SpeechSynthesisErrorEvent" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SpeechSynthesisErrorEvent \- SpeechSynthesisErrorEvent
.SH SYNOPSIS
The \f[B]\f[CB]SpeechSynthesisErrorEvent\f[B]\f[R] interface of the Web
Speech API contains information about any errors that occur while
processing \f[CR]SpeechSynthesisUtterance\f[R] objects in the speech
service.
.SH CONSTRUCTOR
.TP
\f[B]SpeechSynthesisErrorEvent()\f[R]
Creates a new \f[CR]SpeechSynthesisErrorEvent\f[R].
.SH INSTANCE PROPERTIES
\f[I]\f[CI]SpeechSynthesisErrorEvent\f[I] extends the
\f[CI]SpeechSynthesisEvent\f[I] interface, which inherits properties
from its parent interface, \f[CI]Event\f[I].\f[R]
.TP
\f[B]SpeechSynthesisErrorEvent.error\f[R] \f[I](read\-only)\f[R]
Returns an error code indicating what has gone wrong with a speech
synthesis attempt.
.SH INSTANCE METHODS
\f[I]\f[CI]SpeechSynthesisErrorEvent\f[I] extends the
\f[CI]SpeechSynthesisEvent\f[I] interface, which inherits methods from
its parent interface, \f[CI]Event\f[I].\f[R]
.SH EXAMPLES
.IP
.EX
const synth = window.speechSynthesis;

const inputForm = document.querySelector(\[dq]form\[dq]);
const inputTxt = document.querySelector(\[dq]input\[dq]);
const voiceSelect = document.querySelector(\[dq]select\[dq]);

const voices = synth.getVoices();

// ...

inputForm.onsubmit = (event) => {
  event.preventDefault();

  const utterThis = new SpeechSynthesisUtterance(inputTxt.value);
  const selectedOption =
    voiceSelect.selectedOptions[0].getAttribute(\[dq]data\-name\[dq]);
  for (let i = 0; i < voices.length; i++) {
    if (voices[i].name === selectedOption) {
      utterThis.voice = voices[i];
    }
  }

  synth.speak(utterThis);

  utterThis.onerror = (event) => {
    console.log(
      \[ga]An error has occurred with the speech synthesis: ${event.error}\[ga],
    );
  };

  inputTxt.blur();
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Web Speech API
