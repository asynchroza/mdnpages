.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "TypeError" "JS" "2023-06-02" "JavaScript" "JavaScript Reference Manual"
.hy
.SH Synopsis
.PP
The \f[B]\f[VB]TypeError\f[B]\f[R] object represents an error when an
operation could not be performed, typically (but not exclusively) when a
value is not of the expected type.
.PP
A \f[V]TypeError\f[R] may be thrown when:
.IP \[bu] 2
an operand or argument passed to a function is incompatible with the
type expected by that operator or function; or
.IP \[bu] 2
when attempting to modify a value that cannot be changed; or
.IP \[bu] 2
when attempting to use a value in an inappropriate way.
.PP
\f[V]TypeError\f[R] is a serializable object, so it can be cloned with
\f[V]structuredClone()\f[R] or copied between Workers using
\f[V]postMessage()\f[R].
.PP
\f[V]TypeError\f[R] is a subclass of \f[V]Error\f[R].
.SH Constructor
.IP \[bu] 2
\f[V]TypeError()\f[R]
.RS 2
.IP \[bu] 2
Creates a new \f[V]TypeError\f[R] object.
.RE
.SH Instance properties
.PP
\f[I]Also inherits instance properties from its parent
\f[VI]Error\f[I]\f[R].
.PP
These properties are defined on \f[V]TypeError.prototype\f[R] and shared
by all \f[V]TypeError\f[R] instances.
.IP \[bu] 2
\f[V]TypeError.prototype.constructor\f[R]
.RS 2
.IP \[bu] 2
The constructor function that created the instance object.
For \f[V]TypeError\f[R] instances, the initial value is the
\f[V]TypeError\f[R] constructor.
.RE
.IP \[bu] 2
\f[V]TypeError.prototype.name\f[R]
.RS 2
.IP \[bu] 2
Represents the name for the type of error.
For \f[V]TypeError.prototype.name\f[R], the initial value is
\f[V]\[dq]TypeError\[dq]\f[R].
.RE
.SH Instance methods
.PP
\f[I]Inherits instance methods from its parent \f[VI]Error\f[I]\f[R].
.SH Examples
.SS Catching a TypeError
.IP
.nf
\f[C]
try {
  null.f();
} catch (e) {
  console.log(e instanceof TypeError); // true
  console.log(e.message); // \[dq]null has no properties\[dq]
  console.log(e.name); // \[dq]TypeError\[dq]
  console.log(e.stack); // Stack of the error
}
\f[R]
.fi
.SS Creating a TypeError
.IP
.nf
\f[C]
try {
  throw new TypeError(\[dq]Hello\[dq]);
} catch (e) {
  console.log(e instanceof TypeError); // true
  console.log(e.message); // \[dq]Hello\[dq]
  console.log(e.name); // \[dq]TypeError\[dq]
  console.log(e.stack); // Stack of the error
}
\f[R]
.fi
.SH See also
.IP \[bu] 2
\f[V]Error\f[R]
