.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "String.small" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
String.small - String.prototype.small()
.SH SYNOPSIS
.PP
\f[I](deprecated)\f[R]
.PP
The \f[B]\f[VB]small()\f[B]\f[R] method creates a string that embeds a
string in a \f[V]<small>\f[R] element (\f[V]<small>str</small>\f[R]),
which causes a string to be displayed in a small font.
.RS
.PP
\f[B]Note:\f[R] All HTML wrapper methods are deprecated and only
standardized for compatibility purposes.
Use DOM APIs such as \f[V]document.createElement()\f[R] instead.
.RE
.SH SYNTAX
.IP
.nf
\f[C]
small()
\f[R]
.fi
.SS Return value
.PP
A string beginning with a \f[V]<small>\f[R] start tag, then the text
\f[V]str\f[R], and then a \f[V]</small>\f[R] end tag.
.SH EXAMPLES
.SS Using small()
.PP
The following example uses string methods to change the size of a
string:
.IP
.nf
\f[C]
const worldString = \[dq]Hello, world\[dq];

console.log(worldString.small()); // <small>Hello, world</small>
console.log(worldString.big()); // <big>Hello, world</big>
console.log(worldString.fontsize(7)); // <font size=\[dq]7\[dq]>Hello, world</fontsize>
\f[R]
.fi
.PP
With the \f[V]element.style\f[R] object you can get the element\[cq]s
\f[V]style\f[R] attribute and manipulate it more generically, for
example:
.IP
.nf
\f[C]
document.getElementById(\[dq]yourElemId\[dq]).style.fontSize = \[dq]0.7em\[dq];
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[V]String.prototype.small\f[R] in
\f[V]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-string-and-regexp)
.IP \[bu] 2
\f[V]String.prototype.fontsize()\f[R]
.IP \[bu] 2
\f[V]String.prototype.big()\f[R]
