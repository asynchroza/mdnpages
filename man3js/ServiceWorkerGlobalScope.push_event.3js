.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "ServiceWorkerGlobalScope.push_event" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ServiceWorkerGlobalScope.push_event \- ServiceWorkerGlobalScope: push
event
.SH SYNOPSIS
The \f[B]\f[CB]push\f[B]\f[R] event is sent to a service worker\[cq]s
global scope (represented by the \f[CR]ServiceWorkerGlobalScope\f[R]
interface) when the service worker has received a push message.
.PP
This event is not cancelable and does not bubble.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]push\[dq], (event) => {});

onpush = (event) => {};
.EE
.SH EVENT TYPE
A \f[CR]PushEvent\f[R].
Inherits from \f[CR]Event\f[R].
.SH EVENT PROPERTIES
\f[I]Inherits properties from its parent, \f[CI]ExtendableEvent\f[I].
Additional properties:\f[R]
.TP
\f[B]PushEvent.data\f[R] \f[I](read\-only)\f[R]
Returns a reference to a \f[CR]PushMessageData\f[R] object containing
data sent to the \f[CR]PushSubscription\f[R].
.SH EXAMPLE
This example sets up a handler for \f[CR]push\f[R] events that takes
JSON data, parses it, and dispatches the message for handling based on
information contained within the message.
.IP
.EX
self.addEventListener(
  \[dq]push\[dq],
  (event) => {
    let message = event.data.json();

    switch (message.type) {
      case \[dq]init\[dq]:
        doInit();
        break;
      case \[dq]shutdown\[dq]:
        doShutdown();
        break;
    }
  },
  false,
);
.EE
.SH SEE ALSO
.IP \[bu] 2
Using the Push API
.IP \[bu] 2
\f[CR]pushsubscriptionchange\f[R] event
