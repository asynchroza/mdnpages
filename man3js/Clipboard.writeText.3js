.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Clipboard.writeText" "JS" "January 3, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Clipboard.writeText \- Clipboard: writeText() method
.SH SYNOPSIS
The \f[CR]Clipboard\f[R] interface\[cq]s
\f[B]\f[CB]writeText()\f[B]\f[R] property writes the specified text
string to the system clipboard.
Text may be read back using either \f[CR]read()\f[R] or
\f[CR]readText()\f[R].
.SH SYNTAX
.IP
.EX
writeText(newClipText)
.EE
.SS Parameters
.TP
\f[B]newClipText\f[R]
The string to be written to the clipboard.
.SS Return value
A \f[CR]Promise\f[R] which is resolved once the clipboard\[cq]s contents
have been updated.
The promise is rejected if the caller does not have permission to write
to the clipboard.
.SH SECURITY
Transient user activation is required.
The user has to interact with the page or a UI element in order for this
feature to work.
.PP
The \f[CR]\[dq]clipboard\-write\[dq]\f[R] permission of the Permissions
API is granted automatically to pages when they are in the active tab.
.SH EXAMPLES
This example sets the clipboard\[cq]s contents to the string \[lq]<empty
clipboard>\[rq].
.IP
.EX
navigator.clipboard.writeText(\[dq]<empty clipboard>\[dq]).then(
  () => {
    /* clipboard successfully set */
  },
  () => {
    /* clipboard write failed */
  },
);
.EE
.SH SEE ALSO
.IP \[bu] 2
Clipboard API
.IP \[bu] 2
\c
.UR https://web.dev/articles/async-clipboard
Image support for Async Clipboard article
.UE \c
