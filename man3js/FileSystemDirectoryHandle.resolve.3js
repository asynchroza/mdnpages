.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "FileSystemDirectoryHandle.resolve" "JS" "December 10, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
FileSystemDirectoryHandle.resolve \- FileSystemDirectoryHandle:
resolve() method
.SH SYNOPSIS
\f[B]Secure context\f[R]: This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]resolve()\f[B]\f[R] method of the
\f[CR]FileSystemDirectoryHandle\f[R] interface returns an
\f[CR]Array\f[R] of directory names from the parent handle to the
specified child entry, with the name of the child entry as the last
array item.
.SH SYNTAX
.IP
.EX
resolve(possibleDescendant)
.EE
.SS Parameters
.TP
\f[B]possibleDescendant\f[R]
The \f[CR]FileSystemHandle\f[R] from which to return the relative path.
.SS Return value
A \f[CR]Promise\f[R] which resolves with an \f[CR]Array\f[R] of strings,
or \f[CR]null\f[R] if \f[CR]possibleDescendant\f[R] is not a descendant
of this \f[CR]FileSystemDirectoryHandle\f[R].
.SS Exceptions
No exceptions are thrown.
.SH EXAMPLES
The following asynchronous function uses \f[CR]resolve()\f[R] to find
the path to a chosen file, relative to a specified directory handle.
.IP
.EX
async function returnPathDirectories(directoryHandle) {
  // Get a file handle by showing a file picker:
  const [handle] = await self.showOpenFilePicker();
  if (!handle) {
    // User cancelled, or otherwise failed to open a file.
    return;
  }

  // Check if handle exists inside our directory handle
  const relativePaths = await directoryHandle.resolve(handle);

  if (relativePaths === null) {
    // Not inside directory handle
  } else {
    // relativePath is an array of names, giving the relative path
    for (const name of relativePaths) {
      // log each entry
      console.log(name);
    }
  }
}
.EE
.SH SEE ALSO
.IP \[bu] 2
File System API
.IP \[bu] 2
\c
.UR
https://developer.chrome.com/docs/capabilities/web-apis/file-system-access
The File System Access API: simplifying access to local files
.UE \c
