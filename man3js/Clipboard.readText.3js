.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Clipboard.readText" "JS" "January 3, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Clipboard.readText \- Clipboard: readText() method
.SH SYNOPSIS
The \f[B]\f[CB]Clipboard\f[B]\f[R] interface\[cq]s
\f[B]\f[CB]readText()\f[B]\f[R] method returns a \f[CR]Promise\f[R]
which resolves with a copy of the textual contents of the system
clipboard.
.SH SYNTAX
.IP
.EX
readText()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]Promise\f[R] that resolves with a string containing the textual
contents of the clipboard.
Returns an empty string if the clipboard is empty, does not contain
text, or does not include a textual representation among the
\f[CR]DataTransfer\f[R] objects representing the clipboard\[cq]s
contents.
.PP
To read non\-text contents from the clipboard, use the \f[CR]read()\f[R]
method instead.
You can write text to the clipboard using \f[CR]writeText()\f[R].
.SH SECURITY
Transient user activation is required.
The user has to interact with the page or a UI element in order for this
feature to work.
.PP
The \f[CR]\[dq]clipboard\-read\[dq]\f[R] permission of the Permissions
API must be granted before you can read data from the clipboard.
.SH EXAMPLES
This example retrieves the textual contents of the clipboard and inserts
the returned text into an element\[cq]s contents.
.IP
.EX
navigator.clipboard
  .readText()
  .then((clipText) => (document.getElementById(\[dq]outbox\[dq]).innerText = clipText));
.EE
.SH SEE ALSO
.IP \[bu] 2
Clipboard API
.IP \[bu] 2
\c
.UR https://web.dev/articles/async-clipboard
Image support for Async Clipboard article
.UE \c
.IP \[bu] 2
\f[CR]Clipboard.writeText()\f[R]
.IP \[bu] 2
\f[CR]Clipboard.write()\f[R]
