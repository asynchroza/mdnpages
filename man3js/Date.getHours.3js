.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Date.getHours" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
Date.getHours - Date.prototype.getHours()
.SH SYNOPSIS
.PP
The \f[B]\f[VB]getHours()\f[B]\f[R] method of \f[V]Date\f[R] instances
returns the hours for this date according to local time.
.SH SYNTAX
.IP
.nf
\f[C]
getHours()
\f[R]
.fi
.SS Return value
.PP
An integer, between 0 and 23, representing the hours for the given date
according to local time.
Returns \f[V]NaN\f[R] if the date is invalid.
.SH EXAMPLES
.SS Using getHours()
.PP
The \f[V]hours\f[R] variable has value \f[V]23\f[R], based on the value
of the \f[V]Date\f[R] object \f[V]xmas95\f[R].
.IP
.nf
\f[C]
const xmas95 = new Date(\[dq]1995-12-25T23:15:30\[dq]);
const hours = xmas95.getHours();

console.log(hours); // 23
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
\f[V]Date.prototype.getUTCHours()\f[R]
.IP \[bu] 2
\f[V]Date.prototype.setHours()\f[R]
