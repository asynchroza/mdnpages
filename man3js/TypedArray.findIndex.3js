.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "TypedArray.findIndex" "JS" "March 30, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TypedArray.findIndex - TypedArray.prototype.findIndex()
.SH SYNOPSIS
The \f[B]\f[CB]findIndex()\f[B]\f[R] method returns an \f[B]index\f[R]
in the typed array, if an element in the typed array satisfies the
provided testing function.
Otherwise -1 is returned.
.PP
See also the \f[CR]find()\f[R] method, which returns the \f[B]value\f[R]
of a found element in the typed array instead of its index.
.SH SYNTAX
.IP
.EX
findIndex(callbackFn)
findIndex(callbackFn, thisArg)
.EE
.SS Parameters
.TP
\f[B]callbackFn\f[R]
A function to execute for each element in the typed array.
It should return a truthy value to indicate a matching element has been
found, and a falsy value otherwise.
The function is called with the following arguments:
.RS
.TP
\f[B]element\f[R]
The current element being processed in the typed array.
.TP
\f[B]index\f[R]
The index of the current element being processed in the typed array.
.TP
\f[B]array\f[R]
The typed array \f[CR]findIndex()\f[R] was called upon.
.RE
.TP
\f[B]thisArg\f[R] \f[I](optional)\f[R]
A value to use as \f[CR]this\f[R] when executing \f[CR]callbackFn\f[R].
See iterative methods.
.SS Return value
An index in the array if an element passes the test; otherwise,
\f[CR]-1\f[R].
.SH DESCRIPTION
The \f[CR]findIndex()\f[R] method executes the \f[CR]callbackFn\f[R]
function once for each element present in the typed array until it finds
one where \f[CR]callbackFn\f[R] returns a true value.
If such an element is found, \f[CR]findIndex()\f[R] immediately returns
the index of that element.
Otherwise, \f[CR]findIndex()\f[R] returns -1.
\f[CR]callbackFn\f[R] is invoked only for indexes of the typed array
which have assigned values; it is not invoked for indexes which have
been deleted or which have never been assigned values.
.PP
\f[CR]callbackFn\f[R] is invoked with three arguments: the value of the
element, the index of the element, and the typed array object being
traversed.
.PP
If a \f[CR]thisArg\f[R] parameter is provided to \f[CR]findIndex()\f[R],
it will be used as the \f[CR]this\f[R] for each invocation of the
\f[CR]callback\f[R].
If it is not provided, then \f[CR]undefined\f[R] is used.
.PP
\f[CR]findIndex()\f[R] does not mutate the typed array on which it is
called.
.PP
The range of elements processed by \f[CR]findIndex()\f[R] is set before
the first invocation of \f[CR]callbackFn\f[R].
Elements that are appended to the typed array after the call to
\f[CR]findIndex()\f[R] begins will not be visited by
\f[CR]callbackFn\f[R].
If an existing, unvisited element of the typed array is changed by
\f[CR]callbackFn\f[R], its value passed to the visiting
\f[CR]callbackFn\f[R] will be the value at the time that
\f[CR]findIndex()\f[R] visits that element\[cq]s index; elements that
are deleted are not visited.
.SH EXAMPLES
.SS Find the index of a prime number in a typed array
The following example finds the index of an element in the typed array
that is a prime number (or returns \f[CR]-1\f[R] if there is no prime
number).
.IP
.EX
function isPrime(element, index, array) {
  let start = 2;
  while (start <= Math.sqrt(element)) {
    if (element % start++ < 1) {
      return false;
    }
  }
  return element > 1;
}

const uint8 = new Uint8Array([4, 6, 8, 12]);
const uint16 = new Uint16Array([4, 6, 7, 12]);

console.log(uint8.findIndex(isPrime)); // -1, not found
console.log(uint16.findIndex(isPrime)); // 2
.EE
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[CR]TypedArray.prototype.findIndex\f[R] in
\f[CR]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-typed-arrays)
.IP \[bu] 2
\f[CR]TypedArray.prototype.find()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.indexOf()\f[R]
