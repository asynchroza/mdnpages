.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "ToggleEvent.ToggleEvent" "JS" "June 16, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ToggleEvent.ToggleEvent \- ToggleEvent: ToggleEvent() constructor
.SH SYNOPSIS
The \f[B]\f[CB]ToggleEvent()\f[B]\f[R] constructor creates a new
\f[CR]ToggleEvent\f[R] object.
.SH SYNTAX
.IP
.EX
new ToggleEvent(type, init)
.EE
.SS Parameters
.TP
\f[B]type\f[R]
A string representing the type of event.
In the case of \f[CR]ToggleEvent\f[R] this is always
\f[CR]toggleevent\f[R].
.TP
\f[B]init\f[R]
An object containing the following properties:
.RS
.TP
\f[B]newState\f[R]
A string representing the state the element is transitioning to.
Possible values are \f[CR]\[dq]open\[dq]\f[R] and
\f[CR]\[dq]closed\[dq]\f[R].
.TP
\f[B]oldState\f[R]
A string representing the state the element is transitioning from.
Possible values are \f[CR]\[dq]open\[dq]\f[R] and
\f[CR]\[dq]closed\[dq]\f[R].
.RE
.SH EXAMPLES
A developer would not use this constructor manually.
A new \f[CR]ToggleEvent\f[R] object is constructed when a handler is
invoked as a result of a relevant event firing.
.PP
For example:
.IP
.EX
const popover = document.getElementById(\[dq]mypopover\[dq]);

// ...

popover.addEventListener(\[dq]beforetoggle\[dq], (event) => {
  if (event.newState === \[dq]open\[dq]) {
    console.log(\[dq]Popover is being shown\[dq]);
  } else {
    console.log(\[dq]Popover is being hidden\[dq]);
  }
});
.EE
.SH SEE ALSO
.IP \[bu] 2
Popover API
