.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "ReadableStreamDefaultController.enqueue" "JS" "May 10, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ReadableStreamDefaultController.enqueue \-
ReadableStreamDefaultController: enqueue() method
.SH SYNOPSIS
The \f[B]\f[CB]enqueue()\f[B]\f[R] method of the
\f[CR]ReadableStreamDefaultController\f[R] interface enqueues a given
chunk in the associated stream.
.SH SYNTAX
.IP
.EX
enqueue(chunk)
.EE
.SS Parameters
.TP
\f[B]chunk\f[R]
The chunk to enqueue.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if the source object is not a
\f[CR]ReadableStreamDefaultController\f[R].
.SH EXAMPLES
In the following simple example, a custom \f[CR]ReadableStream\f[R] is
created using a constructor (see our \c
.UR https://mdn.github.io/dom-examples/streams/simple-random-stream/
Simple random stream example
.UE \c
\ for the full code).
The \f[CR]start()\f[R] function generates a random string of text every
second and enqueues it into the stream \[em] see
\f[CR]controller.enqueue(string)\f[R].
A \f[CR]cancel()\f[R] function is also provided to stop the generation
if \f[CR]ReadableStream.cancel()\f[R] is called for any reason.
.PP
When a button is pressed, the generation is stopped, the stream is
closed using \f[CR]ReadableStreamDefaultController.close()\f[R], and
another function is run, which reads the data back out of the stream.
.IP
.EX
let interval;
const stream = new ReadableStream({
  start(controller) {
    interval = setInterval(() => {
      let string = randomChars();

      // Add the string to the stream
      controller.enqueue(string);

      // show it on the screen
      let listItem = document.createElement(\[dq]li\[dq]);
      listItem.textContent = string;
      list1.appendChild(listItem);
    }, 1000);

    button.addEventListener(\[dq]click\[dq], () => {
      clearInterval(interval);
      fetchStream();
      controller.close();
    });
  },
  pull(controller) {
    // We don\[aq]t really need a pull in this example
  },
  cancel() {
    // This is called if the reader cancels,
    // so we should stop generating strings
    clearInterval(interval);
  },
});
.EE
.SH SEE ALSO
.IP \[bu] 2
Using readable streams
.IP \[bu] 2
\f[CR]ReadableStreamDefaultController\f[R]
