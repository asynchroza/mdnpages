.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "RegExp.n" "JS" "February 21, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RegExp.n - RegExp.$1, \&..., RegExp.$9
.SH SYNOPSIS
\f[I](deprecated)\f[R]
.RS
.PP
\f[B]Note:\f[R] All \f[CR]RegExp\f[R] static properties that expose the
last match state globally are deprecated.
See deprecated RegExp features for more information.
.RE
.PP
The \f[B]\f[CB]RegExp.$1, \&..., RegExp.$9\f[B]\f[R] static accessor
properties return parenthesized substring matches.
.SH DESCRIPTION
Because \f[CR]$1\f[R]\[en]\f[CR]$9\f[R] are static properties of
\f[CR]RegExp\f[R], you always use them as \f[CR]RegExp.$1\f[R],
\f[CR]RegExp.$2\f[R], etc., rather than as properties of a
\f[CR]RegExp\f[R] object you created.
.PP
The values of \f[CR]$1, \&..., $9\f[R] update whenever a
\f[CR]RegExp\f[R] (but not a \f[CR]RegExp\f[R] subclass) instance makes
a successful match.
If no matches have been made, or if the last match does not have the
corresponding capturing group, the respective property is an empty
string.
The set accessor of each property is \f[CR]undefined\f[R], so you cannot
change the properties directly.
.PP
The number of possible parenthesized substrings is unlimited, but the
\f[CR]RegExp\f[R] object can only hold the first nine.
You can access all parenthesized substrings through the returned
array\[cq]s indexes.
.PP
\f[CR]$1, \&..., $9\f[R] can also be used in the replacement string of
\f[CR]String.prototype.replace()\f[R], but that\[cq]s unrelated to the
\f[CR]RegExp.$n\f[R] legacy properties.
.SH EXAMPLES
.SS Using $n with RegExp.prototype.test()
The following script uses the \f[CR]test()\f[R] method of the
\f[CR]RegExp\f[R] instance to grab a number in a generic string.
.IP
.EX
const str = \[dq]Test 24\[dq];
const number = /(\[rs]d+)/.test(str) ? RegExp.$1 : \[dq]0\[dq];
number; // \[dq]24\[dq]
.EE
.PP
Please note that any operation involving the usage of other regular
expressions between a \f[CR]re.test(str)\f[R] call and the
\f[CR]RegExp.$n\f[R] property, might have side effects, so that
accessing these special properties should be done instantly, otherwise
the result might be unexpected.
.SH SEE ALSO
.IP \[bu] 2
\f[CR]RegExp.input ($_)\f[R]
.IP \[bu] 2
\f[CR]RegExp.lastMatch ($&amp;)\f[R]
.IP \[bu] 2
\f[CR]RegExp.lastParen ($+)\f[R]
.IP \[bu] 2
\f[CR]RegExp.leftContext ($\f[R])\[ga]
.IP \[bu] 2
\f[CR]RegExp.rightContext ($\[aq])\f[R]
