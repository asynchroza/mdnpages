.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "VideoDecoder.isConfigSupported_static" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
VideoDecoder.isConfigSupported_static \- VideoDecoder:
isConfigSupported() static method
.SH SYNOPSIS
\f[B]Secure context\f[R]: This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]isConfigSupported()\f[B]\f[R] static method of the
\f[CR]VideoDecoder\f[R] interface checks if the given config is
supported (that is, if \f[CR]VideoDecoder\f[R] objects can be
successfully configured with the given config).
.SH SYNTAX
.IP
.EX
VideoDecoder.isConfigSupported(config)
.EE
.SS Parameters
.TP
\f[B]config\f[R]
The dictionary object accepted by \f[CR]VideoDecoder.configure\f[R]
.SS Return value
A \f[CR]Promise\f[R] that resolves with an object containing the
following members:
.TP
\f[B]supported\f[R]
A boolean value which is \f[CR]true\f[R] if the given config is
supported by the decoder.
.TP
\f[B]config\f[R]
A copy of the given config with all the fields recognized by the
decoder.
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if the provided \f[CR]config\f[R] is invalid; that is, if
doesn\[cq]t have required values (such as an empty \f[CR]codec\f[R]
field) or has invalid values (such as a negative \f[CR]codedWidth\f[R]).
.SH EXAMPLES
The following example tests if the browser supports accelerated and
un\-accelerated versions of several video codecs.
.IP
.EX
const codecs = [\[dq]avc1.42001E\[dq], \[dq]vp8\[dq], \[dq]vp09.00.10.08\[dq], \[dq]av01.0.04M.08\[dq]];
const accelerations = [\[dq]prefer\-hardware\[dq], \[dq]prefer\-software\[dq]];

const configs = [];
for (const codec of codecs) {
  for (const acceleration of accelerations) {
    configs.push({
      codec,
      hardwareAcceleration: acceleration,
      codedWidth: 1280,
      codedHeight: 720,
      not_supported_field: 123,
    });
  }
}

for (const config of configs) {
  const support = await VideoDecoder.isConfigSupported(config);
  console.log(
    \[ga]VideoDecoder\[aq]s config ${JSON.stringify(support.config)} support: ${
      support.supported
    }\[ga],
  );
}
.EE
