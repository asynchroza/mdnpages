.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "ServiceWorkerGlobalScope.skipWaiting" "JS" "December 10, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ServiceWorkerGlobalScope.skipWaiting \- ServiceWorkerGlobalScope:
skipWaiting() method
.SH SYNOPSIS
The \f[B]\f[CB]ServiceWorkerGlobalScope.skipWaiting()\f[B]\f[R] method
of the \f[CR]ServiceWorkerGlobalScope\f[R] forces the waiting service
worker to become the active service worker.
.PP
Use this method with \f[CR]Clients.claim()\f[R] to ensure that updates
to the underlying service worker take effect immediately for both the
current client and all other active clients.
.SH SYNTAX
.IP
.EX
skipWaiting()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]Promise\f[R] that resolves with \f[CR]undefined\f[R] after
trying to activate the newly installed service worker.
.SH EXAMPLES
While \f[CR]self.skipWaiting()\f[R] can be called at any point during
the service worker\[cq]s execution, it will only have an effect if
there\[cq]s a newly installed service worker that might otherwise remain
in the \f[CR]waiting\f[R] state.
Therefore, it\[cq]s common to call \f[CR]self.skipWaiting()\f[R] from
inside of an \f[CR]InstallEvent\f[R] handler.
.PP
The following example causes a newly installed service worker to
progress into the \f[CR]activating\f[R] state, regardless of whether
there is already an active service worker.
.IP
.EX
self.addEventListener(\[dq]install\[dq], (event) => {
  // The promise that skipWaiting() returns can be safely ignored.
  self.skipWaiting();

  // Perform any other actions required for your
  // service worker to install, potentially inside
  // of event.waitUntil();
});
.EE
.SH SEE ALSO
.IP \[bu] 2
Using Service Workers
.IP \[bu] 2
\c
.UR
https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker
Service workers basic code example
.UE \c
.IP \[bu] 2
\f[CR]Clients.claim()\f[R]
.IP \[bu] 2
Using web workers
