.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Highlight.entries" "JS" "December 2, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Highlight.entries \- Highlight: entries() method
.SH SYNOPSIS
The \f[B]\f[CB]entries()\f[B]\f[R] method of the \f[CR]Highlight\f[R]
interface returns a new Iterator object that contains an array of
\f[CR][range, range]\f[R] for each \f[CR]Range\f[R] object in the
\f[CR]Highlight\f[R] object, in insertion order.
.PP
\f[CR]Highlight\f[R] is a \f[CR]Set\f[R]\-like object, so this is
similar to using \f[CR]Set.entries()\f[R].
.SH SYNTAX
.IP
.EX
entries()
.EE
.SS Return value
A new iterator object that contains an array of
\f[CR][range, range]\f[R] for each \f[CR]Range\f[R] object in the given
\f[CR]Highlight\f[R], in insertion order.
.SH EXAMPLES
The code snippet below shows how create a new highlight with two ranges,
and then log the ranges by using the iterator returned by the
\f[CR]entries()\f[R] method:
.IP
.EX
const text = new Text(\[dq]Time is an illusion. Lunchtime doubly so.\[dq]);

const range1 = document.createRange();
range1.setStart(text, 0);
range1.setEnd(text, 4);

const range2 = document.createRange();
range2.setStart(text, 21);
range2.setEnd(text, 30);

const myHighlight = new Highlight();
myHighlight.add(range1);
myHighlight.add(range2);

const iter = myHighlight.entries();

console.log(iter.next().value); // [Range, Range]
console.log(iter.next().value); // [Range, Range]
.EE
.PP
The following code example shows how to iterate over the ranges in a
highlight by using a \f[CR]for...of\f[R] loop:
.IP
.EX
const text = new Text(\[dq]Time is an illusion. Lunchtime doubly so.\[dq]);

const range1 = document.createRange();
range1.setStart(text, 0);
range1.setEnd(text, 4);

const range2 = document.createRange();
range2.setStart(text, 21);
range2.setEnd(text, 30);

const highlight = new Highlight();
highlight.add(range1);
highlight.add(range2);

for (const [range] of highlight.entries()) {
  console.log(range.toString());
  // Time
  // Lunchtime
}
.EE
.SH SEE ALSO
.IP \[bu] 2
The CSS Custom Highlight API
.IP \[bu] 2
\c
.UR https://css-tricks.com/css-custom-highlight-api-early-look/
CSS Custom Highlight API: The Future of Highlighting Text Ranges on the
Web
.UE \c
