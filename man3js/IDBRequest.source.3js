.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "IDBRequest.source" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
IDBRequest.source \- IDBRequest: source property
.SH SYNOPSIS
The \f[B]\f[CB]source\f[B]\f[R] read\-only property of the
\f[CR]IDBRequest\f[R] interface returns the source of the request, such
as an Index or an object store.
If no source exists (such as when calling \f[CR]IDBFactory.open\f[R]),
it returns null.
.PP
This feature is available in Web Workers.
.SH VALUE
An object representing the source of the request, such as an
\f[CR]IDBIndex\f[R], \f[CR]IDBObjectStore\f[R] or \f[CR]IDBCursor\f[R].
.SH EXAMPLES
The following example requests a given record title,
\f[CR]onsuccess\f[R] gets the associated record from the
\f[CR]IDBObjectStore\f[R] (made available as
\f[CR]objectStoreTitleRequest.result\f[R]), updates one property of the
record, and then puts the updated record back into the object store in
another request.
The source of the 2nd request is logged to the developer console.
For a full working example, see our \c
.UR https://github.com/mdn/dom-examples/tree/main/to-do-notifications
To\-do Notifications
.UE \c
\ app (\c
.UR https://mdn.github.io/dom-examples/to-do-notifications/
View the example live
.UE \c
).
.IP
.EX
const title = \[dq]Walk dog\[dq];

// Open up a transaction as usual
const objectStore = db
  .transaction([\[dq]toDoList\[dq]], \[dq]readwrite\[dq])
  .objectStore(\[dq]toDoList\[dq]);

// Get the to\-do list object that has this title as its title
const objectStoreTitleRequest = objectStore.get(title);

objectStoreTitleRequest.onsuccess = () => {
  // Grab the data object returned as the result
  const data = objectStoreTitleRequest.result;

  // Update the notified value in the object to \[dq]yes\[dq]
  data.notified = \[dq]yes\[dq];

  // Create another request that inserts the item
  // back into the database
  const updateTitleRequest = objectStore.put(data);

  // Log the source of this request
  console.log(\[ga]The source of this request is ${updateTitleRequest.source}\[ga]);
  // When this new request succeeds, run the displayData()
  // function again to update the display
  updateTitleRequest.onsuccess = () => {
    displayData();
  };
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Using IndexedDB
.IP \[bu] 2
Starting transactions: \f[CR]IDBDatabase\f[R]
.IP \[bu] 2
Using transactions: \f[CR]IDBTransaction\f[R]
.IP \[bu] 2
Setting a range of keys: \f[CR]IDBKeyRange\f[R]
.IP \[bu] 2
Retrieving and making changes to your data: \f[CR]IDBObjectStore\f[R]
.IP \[bu] 2
Using cursors: \f[CR]IDBCursor\f[R]
.IP \[bu] 2
Reference example: \c
.UR https://github.com/mdn/dom-examples/tree/main/to-do-notifications
To\-do Notifications
.UE \c
\ (\c
.UR https://mdn.github.io/dom-examples/to-do-notifications/
View the example live
.UE \c
).
