.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "MessageChannel" "JS" "February 28, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MessageChannel \- MessageChannel
.SH SYNOPSIS
The \f[B]\f[CB]MessageChannel\f[B]\f[R] interface of the Channel
Messaging API allows us to create a new message channel and send data
through it via its two \f[CR]MessagePort\f[R] properties.
.PP
This feature is available in Web Workers.
.SH INSTANCE PROPERTIES
.TP
\f[B]MessageChannel.port1\f[R] \f[I](read\-only)\f[R]
Returns port1 of the channel.
.TP
\f[B]MessageChannel.port2\f[R] \f[I](read\-only)\f[R]
Returns port2 of the channel.
.SH CONSTRUCTOR
.TP
\f[B]MessageChannel()\f[R]
Returns a new \f[CR]MessageChannel\f[R] object with two new
\f[CR]MessagePort\f[R] objects.
.SH EXAMPLE
In the following example, you can see a new channel being created using
the \f[CR]MessageChannel.MessageChannel\f[R] constructor.
.PP
When the IFrame has loaded, we register an \f[CR]onmessage\f[R] handler
for \f[CR]MessageChannel.port1\f[R] and transfer
\f[CR]MessageChannel.port2\f[R] to the IFrame using the
\f[CR]window.postMessage\f[R] method along with a message.
.PP
When a message is received back from the IFrame, the
\f[CR]onMessage\f[R] function outputs the message to a paragraph.
.IP
.EX
const channel = new MessageChannel();
const output = document.querySelector(\[dq].output\[dq]);
const iframe = document.querySelector(\[dq]iframe\[dq]);

// Wait for the iframe to load
iframe.addEventListener(\[dq]load\[dq], onLoad);

function onLoad() {
  // Listen for messages on port1
  channel.port1.onmessage = onMessage;

  // Transfer port2 to the iframe
  iframe.contentWindow.postMessage(\[dq]Hello from the main page!\[dq], \[dq]*\[dq], [
    channel.port2,
  ]);
}

// Handle messages received on port1
function onMessage(e) {
  output.innerHTML = e.data;
}
.EE
.PP
For a full working example, see our \c
.UR
https://github.com/mdn/dom-examples/tree/main/channel-messaging-basic
channel messaging basic demo
.UE \c
\ on GitHub (\c
.UR https://mdn.github.io/dom-examples/channel-messaging-basic/
run it live too
.UE \c
).
.SH SEE ALSO
.IP \[bu] 2
Using channel messaging
