.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Response.text" "JS" "December 15, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Response.text \- Response: text() method
.SH SYNOPSIS
The \f[B]\f[CB]text()\f[B]\f[R] method of the \f[CR]Response\f[R]
interface takes a \f[CR]Response\f[R] stream and reads it to completion.
It returns a promise that resolves with a \f[CR]String\f[R].
The response is \f[I]always\f[R] decoded using UTF\-8.
.SH SYNTAX
.IP
.EX
text()
.EE
.SS Parameters
None.
.SS Return value
A Promise that resolves with a \f[CR]String\f[R].
.SH EXAMPLES
In our \c
.UR https://github.com/mdn/dom-examples/tree/main/fetch/fetch-text
fetch text example
.UE \c
\ (run \c
.UR https://mdn.github.io/dom-examples/fetch/fetch-text/
fetch text live
.UE \c
), we have an \f[CR]<article>\f[R] element and three links (stored in
the \f[CR]myLinks\f[R] array.)
First, we loop through all of these and give each one an
\f[CR]onclick\f[R] event handler so that the \f[CR]getData()\f[R]
function is run \[em] with the link\[cq]s \f[CR]data\-page\f[R]
identifier passed to it as an argument \[em] when one of the links is
clicked.
.PP
When \f[CR]getData()\f[R] is run, we create a new request using the
\f[CR]Request()\f[R] constructor, then use it to fetch a specific
\f[CR].txt\f[R] file.
When the fetch is successful, we read a string out of the response using
\f[CR]text()\f[R], then set the \f[CR]innerText\f[R] of the
\f[CR]<article>\f[R] element equal to the text object.
.IP
.EX
const myArticle = document.querySelector(\[dq]article\[dq]);
const myLinks = document.querySelectorAll(\[dq]ul a\[dq]);

for (const link of myLinks) {
  link.onclick = (e) => {
    e.preventDefault();
    const linkData = e.target.getAttribute(\[dq]data\-page\[dq]);
    getData(linkData);
  };
}

function getData(pageId) {
  console.log(pageId);
  const myRequest = new Request(\[ga]${pageId}.txt\[ga]);
  fetch(myRequest)
    .then((response) => response.text())
    .then((text) => {
      myArticle.innertext = text;
    });
}
.EE
.SH SEE ALSO
.IP \[bu] 2
ServiceWorker API
.IP \[bu] 2
HTTP access control (CORS)
.IP \[bu] 2
HTTP
