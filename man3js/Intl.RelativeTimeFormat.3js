.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Intl.RelativeTimeFormat" "JS" "2023-06-02" "JavaScript" "JavaScript Reference Manual"
.hy
.SH Synopsis
.PP
The \f[B]\f[VB]Intl.RelativeTimeFormat\f[B]\f[R] object enables
language-sensitive relative time formatting.
.SH Constructor
.IP \[bu] 2
\f[V]Intl.RelativeTimeFormat()\f[R]
.RS 2
.IP \[bu] 2
Creates a new \f[V]Intl.RelativeTimeFormat\f[R] object.
.RE
.SH Static methods
.IP \[bu] 2
\f[V]Intl.RelativeTimeFormat.supportedLocalesOf()\f[R]
.RS 2
.IP \[bu] 2
Returns an array containing those of the provided locales that are
supported without having to fall back to the runtime\[cq]s default
locale.
.RE
.SH Instance properties
.PP
These properties are defined on
\f[V]Intl.RelativeTimeFormat.prototype\f[R] and shared by all
\f[V]Intl.RelativeTimeFormat\f[R] instances.
.IP \[bu] 2
\f[V]Intl.RelativeTimeFormat.prototype.constructor\f[R]
.RS 2
.IP \[bu] 2
The constructor function that created the instance object.
For \f[V]Intl.RelativeTimeFormat\f[R] instances, the initial value is
the \f[V]Intl.RelativeTimeFormat\f[R] constructor.
.RE
.IP \[bu] 2
\f[V]Intl.RelativeTimeFormat.prototype[\[at]\[at]toStringTag]\f[R]
.RS 2
.IP \[bu] 2
The initial value of the \f[V]\[at]\[at]toStringTag\f[R] property is the
string \f[V]\[dq]Intl.RelativeTimeFormat\[dq]\f[R].
This property is used in \f[V]Object.prototype.toString()\f[R].
.RE
.SH Instance methods
.IP \[bu] 2
\f[V]Intl.RelativeTimeFormat.prototype.format()\f[R]
.RS 2
.IP \[bu] 2
Formats a \f[V]value\f[R] and a \f[V]unit\f[R] according to the locale
and formatting options of the given \f[V]Intl.RelativeTimeFormat\f[R]
object.
.RE
.IP \[bu] 2
\f[V]Intl.RelativeTimeFormat.prototype.formatToParts()\f[R]
.RS 2
.IP \[bu] 2
Returns an \f[V]Array\f[R] of objects representing the relative time
format in parts that can be used for custom locale-aware formatting.
.RE
.IP \[bu] 2
\f[V]Intl.RelativeTimeFormat.prototype.resolvedOptions()\f[R]
.RS 2
.IP \[bu] 2
Returns a new object with properties reflecting the locale and
formatting options computed during initialization of the object.
.RE
.SH Examples
.SS Basic format usage
.PP
The following example shows how to use a relative time formatter for the
English language.
.IP
.nf
\f[C]
// Create a relative time formatter in your locale
// with default values explicitly passed in.
const rtf = new Intl.RelativeTimeFormat(\[dq]en\[dq], {
  localeMatcher: \[dq]best fit\[dq], // other values: \[dq]lookup\[dq]
  numeric: \[dq]always\[dq], // other values: \[dq]auto\[dq]
  style: \[dq]long\[dq], // other values: \[dq]short\[dq] or \[dq]narrow\[dq]
});

// Format relative time using negative value (-1).
rtf.format(-1, \[dq]day\[dq]); // \[dq]1 day ago\[dq]

// Format relative time using positive value (1).
rtf.format(1, \[dq]day\[dq]); // \[dq]in 1 day\[dq]
\f[R]
.fi
.SS Using formatToParts
.PP
The following example shows how to create a relative time formatter
returning formatted parts.
.IP
.nf
\f[C]
const rtf = new Intl.RelativeTimeFormat(\[dq]en\[dq], { numeric: \[dq]auto\[dq] });

// Format relative time using the day unit.
rtf.formatToParts(-1, \[dq]day\[dq]);
// [{ type: \[dq]literal\[dq], value: \[dq]yesterday\[dq]}]

rtf.formatToParts(100, \[dq]day\[dq]);
// [
//   { type: \[dq]literal\[dq], value: \[dq]in \[dq] },
//   { type: \[dq]integer\[dq], value: \[dq]100\[dq], unit: \[dq]day\[dq] },
//   { type: \[dq]literal\[dq], value: \[dq] days\[dq] }
// ]
\f[R]
.fi
.SH See also
.IP \[bu] 2
\f[V]Intl\f[R]
.IP \[bu] 2
The Intl.RelativeTimeFormat
API (https://v8.dev/features/intl-relativetimeformat)
.IP \[bu] 2
A polyfill of \f[V]Intl.RelativeTimeFormat\f[R] in
FormatJS (https://formatjs.io/docs/polyfills/intl-relativetimeformat/)
