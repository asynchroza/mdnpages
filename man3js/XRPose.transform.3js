.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "XRPose.transform" "JS" "April 8, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
XRPose.transform \- XRPose: transform property
.SH SYNOPSIS
\f[B]Secure context\f[R]: This feature is available only in secure
contexts (HTTPS).
.PP
The \f[CR]transform\f[R] read\-only attribute of the \f[CR]XRPose\f[R]
interface is a \f[CR]XRRigidTransform\f[R] object providing the position
and orientation of the pose relative to the base \f[CR]XRSpace\f[R] as
specified when the pose was obtained by calling
\f[CR]XRFrame.getPose()\f[R].
.SH VALUE
An \f[CR]XRRigidTransform\f[R] which provides the position and
orientation of the \f[CR]XRPose\f[R] relative to the \f[CR]XRFrame\f[R]
to which this \f[CR]XRPose\f[R] is aligned.
This is the same pose that\[cq]s returned by the frame\[cq]s
\f[CR]getPose()\f[R] method.
.SH EXAMPLES
This handler for the \f[CR]XRSession\f[R] event \f[CR]select\f[R]
handles events for tracked pointers.
It determines the targeted object by passing the event frame\[cq]s pose
into a function called \f[CR]findTargetUsingRay()\f[R], then dispatches
the event differently depending on the user\[cq]s handedness; this is
done by comparing the value of the \f[CR]XRInputSource\f[R] property
\f[CR]handedness\f[R] to a value in the variable
\f[CR]user.handedness\f[R].
If the source is a controller in the user\[cq]s primary hand, a function
is called on the targeted object called \f[CR]primaryAction()\f[R];
otherwise, it calls the targeted object\[cq]s \f[CR]offHandAction()\f[R]
function.
.IP
.EX
xrSession.addEventListener(\[dq]select\[dq], (event) => {
  let source = event.inputSource;
  let frame = event.frame;
  let targetRayPose = frame.getPose(source.targetRaySpace, myRefSpace);
  let targetObject = findTargetUsingRay(targetRay.transform.matrix);

  if (source.targetRayMode === \[dq]tracked\-pointer\[dq]) {
    if (source.handedness === user.handedness) {
      targetObject.primaryAction();
    } else {
      targetObject.offHandAction();
    }
  }
});
.EE
