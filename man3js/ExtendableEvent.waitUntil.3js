.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "ExtendableEvent.waitUntil" "JS" "December 10, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ExtendableEvent.waitUntil \- ExtendableEvent: waitUntil() method
.SH SYNOPSIS
The \f[B]\f[CB]ExtendableEvent.waitUntil()\f[B]\f[R] method tells the
event dispatcher that work is ongoing.
It can also be used to detect whether that work was successful.
In service workers, \f[CR]waitUntil()\f[R] tells the browser that work
is ongoing until the promise settles, and it shouldn\[cq]t terminate the
service worker if it wants that work to complete.
.PP
The \f[CR]install\f[R] events in service workers use
\f[CR]waitUntil()\f[R] to hold the service worker in the
\f[CR]installing\f[R] phase until tasks complete.
If the promise passed to \f[CR]waitUntil()\f[R] rejects, the install is
considered a failure, and the installing service worker is discarded.
This is primarily used to ensure that a service worker is not considered
installed until all of the core caches it depends on are successfully
populated.
.PP
The \f[CR]activate\f[R] events in service workers use
\f[CR]waitUntil()\f[R] to buffer functional events such as
\f[CR]fetch\f[R] and \f[CR]push\f[R] until the promise passed to
\f[CR]waitUntil()\f[R] settles.
This gives the service worker time to update database schemas and delete
outdated \f[CR]caches\f[R], so other events can rely on a completely
upgraded state.
.PP
The \f[CR]waitUntil()\f[R] method must be initially called within the
event callback, but after that it can be called multiple times, until
all the promises passed to it settle.
.RS
.PP
\f[B]Note:\f[R] The behavior described in the above paragraph was fixed
in Firefox 43 (see \c
.UR https://bugzil.la/1180274
Firefox bug 1180274
.UE \c
).
.RE
.SH SYNTAX
.IP
.EX
waitUntil(promise)
.EE
.SS Parameters
A \f[CR]Promise\f[R].
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
Using \f[CR]waitUntil()\f[R] within a service worker\[cq]s
\f[CR]install\f[R] event:
.IP
.EX
addEventListener(\[dq]install\[dq], (event) => {
  const preCache = async () => {
    const cache = await caches.open(\[dq]static\-v1\[dq]);
    return cache.addAll([\[dq]/\[dq], \[dq]/about/\[dq], \[dq]/static/styles.css\[dq]]);
  };
  event.waitUntil(preCache());
});
.EE
.SH SEE ALSO
.IP \[bu] 2
Using Service Workers
