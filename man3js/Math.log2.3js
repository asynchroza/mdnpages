.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "Math.log2" "JS" "February 21, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Math.log2 - Math.log2()
.SH SYNOPSIS
The \f[B]\f[CB]Math.log2()\f[B]\f[R] static method returns the base 2
logarithm of a number.
That is
.PP
∀x>0,𝙼𝚊𝚝𝚑.𝚕𝚘𝚐𝟸(𝚡)=log2(x)=the unique\ y\ such that\ 2y=xx > 0,; = _2(x)
= y 2\[ha]y = x
.SH SYNTAX
.IP
.EX
Math.log2(x)
.EE
.SS Parameters
.TP
\f[B]x\f[R]
A number greater than or equal to 0.
.SS Return value
The base 2 logarithm of \f[CR]x\f[R].
If \f[CR]x < 0\f[R], returns \f[CR]NaN\f[R].
.SH DESCRIPTION
Because \f[CR]log2()\f[R] is a static method of \f[CR]Math\f[R], you
always use it as \f[CR]Math.log2()\f[R], rather than as a method of a
\f[CR]Math\f[R] object you created (\f[CR]Math\f[R] is not a
constructor).
.PP
This function is the equivalent of \f[CR]Math.log(x) / Math.log(2)\f[R].
For \f[CR]log2(e)\f[R], use the constant \f[CR]Math.LOG2E\f[R], which is
1 / \f[CR]Math.LN2\f[R].
.SH EXAMPLES
.SS Using Math.log2()
.IP
.EX
Math.log2(-2); // NaN
Math.log2(-0); // -Infinity
Math.log2(0); // -Infinity
Math.log2(1); // 0
Math.log2(2); // 1
Math.log2(3); // 1.584962500721156
Math.log2(1024); // 10
Math.log2(Infinity); // Infinity
.EE
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[CR]Math.log2\f[R] in
\f[CR]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-math)
.IP \[bu] 2
\f[CR]Math.exp()\f[R]
.IP \[bu] 2
\f[CR]Math.log()\f[R]
.IP \[bu] 2
\f[CR]Math.log10()\f[R]
.IP \[bu] 2
\f[CR]Math.log1p()\f[R]
.IP \[bu] 2
\f[CR]Math.pow()\f[R]
