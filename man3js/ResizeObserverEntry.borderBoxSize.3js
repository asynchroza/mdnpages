.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "ResizeObserverEntry.borderBoxSize" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ResizeObserverEntry.borderBoxSize \- ResizeObserverEntry: borderBoxSize
property
.SH SYNOPSIS
The \f[B]\f[CB]borderBoxSize\f[B]\f[R] read\-only property of the
\f[CR]ResizeObserverEntry\f[R] interface returns an array containing the
new border box size of the observed element when the callback is run.
.SH VALUE
An array containing objects with the new border box size of the observed
element.
The array is necessary to support elements that have multiple fragments,
which occur in multi\-column scenarios.
Each object in the array contains two properties:
.TP
\f[B]blockSize\f[R]
The length of the observed element\[cq]s border box in the block
dimension.
For boxes with a horizontal \f[CR]writing\-mode\f[R], this is the
vertical dimension, or height; if the writing\-mode is vertical, this is
the horizontal dimension, or width.
.TP
\f[B]inlineSize\f[R]
The length of the observed element\[cq]s border box in the inline
dimension.
For boxes with a horizontal \f[CR]writing\-mode\f[R], this is the
horizontal dimension, or width; if the writing\-mode is vertical, this
is the vertical dimension, or height.
.RS
.PP
\f[B]Note:\f[R] For more explanation of writing modes and block and
inline dimensions, read Handling different text directions.
.RE
.SH EXAMPLES
.IP
.EX
const resizeObserver = new ResizeObserver((entries) => {
  const calcBorderRadius = (size1, size2) =>
    \[ga]${Math.min(100, size1 / 10 + size2 / 10)}px\[ga];

  for (const entry of entries) {
    if (entry.borderBoxSize?.length > 0) {
      entry.target.style.borderRadius = calcBorderRadius(
        entry.borderBoxSize[0].inlineSize,
        entry.borderBoxSize[0].blockSize,
      );
    } else {
      entry.target.style.borderRadius = calcBorderRadius(
        entry.contentRect.width,
        entry.contentRect.height,
      );
    }
  }
});

resizeObserver.observe(document.querySelector(\[dq]div\[dq]));
.EE
