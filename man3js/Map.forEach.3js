.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Map.forEach" "JS" "2023-06-02" "JavaScript" "JavaScript Reference Manual"
.hy
.SH Synopsis
.PP
The \f[B]\f[VB]forEach()\f[B]\f[R] method executes a provided function
once per each key/value pair in the \f[V]Map\f[R] object, in insertion
order.
.SH Syntax
.IP
.nf
\f[C]
forEach(callbackFn)
forEach(callbackFn, thisArg)
\f[R]
.fi
.SS Parameters
.IP \[bu] 2
\f[V]callbackFn\f[R]
.RS 2
.IP \[bu] 2
A function to execute for each entry in the map.
The function is called with the following arguments:
.RS 2
.IP \[bu] 2
\f[V]value\f[R]
.RS 2
.IP \[bu] 2
Value of each iteration.
.RE
.IP \[bu] 2
\f[V]key\f[R]
.RS 2
.IP \[bu] 2
Key of each iteration.
.RE
.IP \[bu] 2
\f[V]map\f[R]
.RS 2
.IP \[bu] 2
The map being iterated.
.RE
.RE
.RE
.IP \[bu] 2
\f[V]thisArg\f[R] \f[I](optional)\f[R]
.RS 2
.IP \[bu] 2
A value to use as \f[V]this\f[R] when executing \f[V]callbackFn\f[R].
.RE
.SS Return value
.PP
\f[V]undefined\f[R].
.SH Description
.PP
The \f[V]forEach\f[R] method executes the provided \f[V]callback\f[R]
once for each key of the map which actually exist.
It is not invoked for keys which have been deleted.
However, it is executed for values which are present but have the value
\f[V]undefined\f[R].
.PP
\f[V]callback\f[R] is invoked with \f[B]three arguments\f[R]:
.IP \[bu] 2
the entry\[cq]s \f[V]value\f[R]
.IP \[bu] 2
the entry\[cq]s \f[V]key\f[R]
.IP \[bu] 2
the \f[B]\f[VB]Map\f[B] object\f[R] being traversed
.PP
If a \f[V]thisArg\f[R] parameter is provided to \f[V]forEach\f[R], it
will be passed to \f[V]callback\f[R] when invoked, for use as its
\f[V]this\f[R] value.
Otherwise, the value \f[V]undefined\f[R] will be passed for use as its
\f[V]this\f[R] value.
The \f[V]this\f[R] value ultimately observable by \f[V]callback\f[R] is
determined according to the usual rules for determining the
\f[V]this\f[R] seen by a function.
.PP
Each value is visited once, except in the case when it was deleted and
re-added before \f[V]forEach\f[R] has finished.
\f[V]callback\f[R] is not invoked for values deleted before being
visited.
New values added before \f[V]forEach\f[R] has finished will be visited.
.SH Examples
.SS Printing the contents of a Map object
.PP
The following code logs a line for each element in an \f[V]Map\f[R]
object:
.IP
.nf
\f[C]
function logMapElements(value, key, map) {
  console.log(\[ga]map.get(\[aq]${key}\[aq]) = ${value}\[ga]);
}
new Map([
  [\[dq]foo\[dq], 3],
  [\[dq]bar\[dq], {}],
  [\[dq]baz\[dq], undefined],
]).forEach(logMapElements);
// Logs:
// \[dq]map.get(\[aq]foo\[aq]) = 3\[dq]
// \[dq]map.get(\[aq]bar\[aq]) = [object Object]\[dq]
// \[dq]map.get(\[aq]baz\[aq]) = undefined\[dq]
\f[R]
.fi
.SH See also
.IP \[bu] 2
\f[V]Array.prototype.forEach()\f[R]
.IP \[bu] 2
\f[V]Set.prototype.forEach()\f[R]
