.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Date.UTC" "JS" "2023-06-02" "JavaScript" "JavaScript Reference Manual"
.hy
.SH Synopsis
.PP
The \f[B]\f[VB]Date.UTC()\f[B]\f[R] static method accepts parameters
representing the date and time components similar to the \f[V]Date\f[R]
constructor, but treats them as UTC.
It returns the number of milliseconds since January 1, 1970, 00:00:00
UTC.
.SH Syntax
.IP
.nf
\f[C]
Date.UTC(year)
Date.UTC(year, monthIndex)
Date.UTC(year, monthIndex, day)
Date.UTC(year, monthIndex, day, hour)
Date.UTC(year, monthIndex, day, hour, minute)
Date.UTC(year, monthIndex, day, hour, minute, second)
Date.UTC(year, monthIndex, day, hour, minute, second, millisecond)
\f[R]
.fi
.IP \[bu] 2
\f[V]year\f[R]
.RS 2
.IP \[bu] 2
Integer value representing the year.
Values from \f[V]0\f[R] to \f[V]99\f[R] map to the years \f[V]1900\f[R]
to \f[V]1999\f[R].
All other values are the actual year.
See the example.
.RE
.IP \[bu] 2
\f[V]monthIndex\f[R] \f[I](optional)\f[R]
.RS 2
.IP \[bu] 2
Integer value representing the month, beginning with \f[V]0\f[R] for
January to \f[V]11\f[R] for December.
Defaults to \f[V]0\f[R].
.RE
.IP \[bu] 2
\f[V]day\f[R] \f[I](optional)\f[R]
.RS 2
.IP \[bu] 2
Integer value representing the day of the month.
Defaults to \f[V]1\f[R].
.RE
.IP \[bu] 2
\f[V]hours\f[R] \f[I](optional)\f[R]
.RS 2
.IP \[bu] 2
Integer value between \f[V]0\f[R] and \f[V]23\f[R] representing the hour
of the day.
Defaults to \f[V]0\f[R].
.RE
.IP \[bu] 2
\f[V]minutes\f[R] \f[I](optional)\f[R]
.RS 2
.IP \[bu] 2
Integer value representing the minute segment of a time.
Defaults to \f[V]0\f[R].
.RE
.IP \[bu] 2
\f[V]seconds\f[R] \f[I](optional)\f[R]
.RS 2
.IP \[bu] 2
Integer value representing the second segment of a time.
Defaults to \f[V]0\f[R].
.RE
.IP \[bu] 2
\f[V]milliseconds\f[R] \f[I](optional)\f[R]
.RS 2
.IP \[bu] 2
Integer value representing the millisecond segment of a time.
Defaults to \f[V]0\f[R].
.RE
.SS Return value
.PP
A number representing the timestamp of the given date.
Returns \f[V]NaN\f[R] if the date is invalid.
.SH Description
.PP
Years between \f[V]0\f[R] and \f[V]99\f[R] are converted to a year in
the 20th century \f[V](1900 + year)\f[R].
For example, \f[V]95\f[R] is converted to the year \f[V]1995\f[R].
.PP
The \f[V]UTC()\f[R] method differs from the \f[V]Date()\f[R] constructor
in three ways:
.IP "1." 3
\f[V]Date.UTC()\f[R] uses universal time instead of the local time.
.IP "2." 3
\f[V]Date.UTC()\f[R] returns a time value as a number instead of
creating a \f[V]Date\f[R] object.
.IP "3." 3
When passed a single number, \f[V]Date.UTC()\f[R] interprets it as a
year instead of a timestamp.
.PP
If a parameter is outside of the expected range, the \f[V]UTC()\f[R]
method updates the other parameters to accommodate the value.
For example, if \f[V]15\f[R] is used for \f[V]monthIndex\f[R], the year
will be incremented by 1 \f[V](year + 1)\f[R] and \f[V]3\f[R] will be
used for the month.
.PP
Because \f[V]UTC()\f[R] is a static method of \f[V]Date\f[R], you always
use it as \f[V]Date.UTC()\f[R], rather than as a method of a
\f[V]Date\f[R] object you created.
.SH Examples
.SS Using Date.UTC()
.PP
The following statement creates a \f[V]Date\f[R] object with the
arguments treated as UTC instead of local:
.IP
.nf
\f[C]
const utcDate = new Date(Date.UTC(2018, 11, 1, 0, 0, 0));
\f[R]
.fi
.SS Behavior of Date.UTC() with one argument
.PP
\f[V]Date.UTC()\f[R] when passed one argument used to have inconsistent
behavior, because implementations only kept the behavior consistent with
the \f[V]Date()\f[R] constructor, which does not interpret a single
argument as the year number.
Implementations are now required to treat omitted \f[V]monthIndex\f[R]
as \f[V]0\f[R], instead of coercing it to \f[V]NaN\f[R].
.IP
.nf
\f[C]
Date.UTC(2017); // 1483228800000
\f[R]
.fi
.SH See also
.IP \[bu] 2
\f[V]Date.parse()\f[R]
.IP \[bu] 2
\f[V]Date\f[R]
