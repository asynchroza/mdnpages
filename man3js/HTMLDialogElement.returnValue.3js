.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "HTMLDialogElement.returnValue" "JS" "August 14, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLDialogElement.returnValue \- HTMLDialogElement: returnValue property
.SH SYNOPSIS
The \f[B]\f[CB]returnValue\f[B]\f[R] property of the
\f[CR]HTMLDialogElement\f[R] interface gets or sets the return value for
the \f[CR]<dialog>\f[R], usually to indicate which button the user
pressed to close it.
.SH VALUE
A string representing the \f[CR]returnValue\f[R] of the dialog.
.SH EXAMPLES
The following example displays a button to open a \f[CR]<dialog>\f[R]
containing a form via the \f[CR]showModal()\f[R] method.
The script assigns the \f[CR]returnValue\f[R] an initial value of
\f[CR]initialValue\f[R].
The confirm button (\f[CR]confirmBtn\f[R]) submits the form with
validation and the \[lq]X\[rq] button submits the form without
validation.
Submitting a form with a \f[CR]method=\[dq]dialog\[dq]\f[R] closes the
dialog and sets the return value to the \f[CR]value\f[R], if any, of the
\f[CR]button\f[R] or \f[CR]input\f[R] elements of
\f[CR]type=submit\f[R].
The reset button has an event handler that closes the dialog; it has no
impact on the \f[CR]returnValue\f[R].
Neither does closing the dialog with the Esc key.
.IP
.EX
<!\-\- Simple pop\-up dialog box containing a form \-\->
<dialog id=\[dq]favDialog\[dq]>
  <form method=\[dq]dialog\[dq]>
    <input
      type=\[dq]submit\[dq]
      aria\-label=\[dq]close\[dq]
      value=\[dq]X\[dq]
      name=\[dq]Xbutton\[dq]
      formnovalidate />
    <p>
      <label
        >Favorite animal:
        <select name=\[dq]favAnimal\[dq] required>
          <option></option>
          <option>Brine shrimp</option>
          <option>Red panda</option>
          <option>Spider monkey</option>
        </select>
      </label>
    </p>
    <menu>
      <button type=\[dq]reset\[dq] value=\[dq]resetBtn\[dq]>Reset</button>
      <button type=\[dq]submit\[dq] value=\[dq]confirmBtn\[dq]>Confirm</button>
    </menu>
  </form>
</dialog>

<p>
  <button id=\[dq]openDialog\[dq]>Open Dialog</button>
</p>
<p id=\[dq]text\[dq]></p>

<script>
  (() => {
    const openDialog = document.getElementById(\[dq]openDialog\[dq]);
    const dialog = document.getElementById(\[dq]favDialog\[dq]);
    const text = document.getElementById(\[dq]text\[dq]);
    const reset = document.querySelector(\[dq][type=\[aq]reset\[aq]]\[dq]);
    dialog.returnValue = \[dq]initialValue\[dq];

    function openCheck(dialog) {
      if (dialog.open) {
        text.innerText = \[dq]Dialog open\[dq];
      } else {
        text.innerText = \[dq]Dialog closed\[dq];
      }
    }

    function handleUserInput(returnValue) {
      if (!returnValue) {
        text.innerText += \[dq]. There was no return value\[dq];
      } else {
        text.innerText += \[dq]. Return value: \[dq] + returnValue;
      }
    }

    // \[dq]Open Dialog\[dq] button opens the <dialog> modally
    openDialog.addEventListener(\[dq]click\[dq], () => {
      dialog.showModal();
      openCheck(dialog);
      handleUserInput(dialog.returnValue);
    });

    reset.addEventListener(\[dq]click\[dq], () => {
      dialog.close();
    });

    // when the dialog is closed, no matter how it is closed
    dialog.addEventListener(\[dq]close\[dq], () => {
      openCheck(dialog);
      handleUserInput(dialog.returnValue);
    });
  })();
</script>
<style>
  [aria\-label=\[dq]close\[dq]] {
    appearance: none;
    border\-radius: 50%;
    border: 1px solid;
    float: right;
  }
</style>
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
The HTML element implementing this interface: \f[CR]<dialog>\f[R].
