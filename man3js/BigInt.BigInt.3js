.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "BigInt.BigInt" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
BigInt.BigInt - BigInt() constructor
.SH SYNOPSIS
.PP
The \f[B]\f[VB]BigInt()\f[B]\f[R] function returns primitive values of
type BigInt.
.SH SYNTAX
.IP
.nf
\f[C]
BigInt(value)
\f[R]
.fi
.RS
.PP
\f[B]Note:\f[R] \f[V]BigInt()\f[R] can only be called without
\f[V]new\f[R].
Attempting to construct it with \f[V]new\f[R] throws a
\f[V]TypeError\f[R].
.RE
.SS Parameters
.TP
\f[B]value\f[R]
The numeric value of the object being created.
It may be a string, an integer, a boolean, or another \f[V]BigInt\f[R].
.SS Return value
.PP
A \f[V]BigInt\f[R] value.
Number values must be integers and are converted to BigInts.
The boolean value \f[V]true\f[R] becomes \f[V]1n\f[R], and
\f[V]false\f[R] becomes \f[V]0n\f[R].
Strings are parsed as if they are source text for integer literals,
which means they can have leading and trailing whitespaces and can be
prefixed with \f[V]0b\f[R], \f[V]0o\f[R], or \f[V]0x\f[R].
.SS Exceptions
.TP
\f[B]RangeError\f[R]
Thrown if the parameter is a non-integral number.
.TP
\f[B]TypeError\f[R]
Thrown if at least one of these conditions is met:
.RS
.IP \[bu] 2
The parameter cannot be converted to a primitive.
.IP \[bu] 2
After conversion to a primitive, the result is \f[V]undefined\f[R],
\f[V]null\f[R], \f[V]symbol\f[R].
.RE
.TP
\f[B]SyntaxError\f[R]
Thrown if the parameter is a string that cannot be parsed as a
\f[V]BigInt\f[R].
.SH EXAMPLES
.SS Using BigInt() to convert a number to a BigInt
.PP
\f[V]BigInt()\f[R] is the only case where a number can be converted to a
BigInt without throwing, because it\[cq]s very explicit.
However, only integers are allowed.
.IP
.nf
\f[C]
BigInt(123); // 123n
BigInt(123.3); // RangeError: The number 123.3 cannot be converted to a BigInt because it is not an integer
\f[R]
.fi
.SS Using string values
.IP
.nf
\f[C]
BigInt(\[dq]123\[dq]); // 123n
BigInt(\[dq]0b10101\[dq]); // 4161n, which is 10101 in binary
BigInt(\[dq]0o123\[dq]); // 83n, which is 123 in octal
BigInt(\[dq]0x123\[dq]); // 291n, which is 123 in hexadecimal
BigInt(\[dq]  123  \[dq]); // 123n, leading and trailing whitespaces are allowed
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
\f[V]BigInt\f[R] class
