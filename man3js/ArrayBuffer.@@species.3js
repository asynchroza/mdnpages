.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "ArrayBuffer.\[at]\[at]species" "JS" "2023-06-02" "JavaScript" "JavaScript Reference Manual"
.hy
.SH Synopsis
.PP
The \f[B]\f[VB]ArrayBuffer[\[at]\[at]species]\f[B]\f[R] static accessor
property returns the constructor used to construct return values from
array buffer methods.
.RS
.PP
\f[B]Warning:\f[R] The existence of \f[V]\[at]\[at]species\f[R] allows
execution of arbitrary code and may create security vulnerabilities.
It also makes certain optimizations much harder.
Engine implementers are investigating whether to remove this
feature (https://github.com/tc39/proposal-rm-builtin-subclassing).
Avoid relying on it if possible.
.RE
.SH Syntax
.IP
.nf
\f[C]
ArrayBuffer[Symbol.species]
\f[R]
.fi
.SS Return value
.PP
The value of the constructor (\f[V]this\f[R]) on which
\f[V]get \[at]\[at]species\f[R] was called.
The return value is used to construct return values from array buffer
methods that create new array buffers.
.SH Description
.PP
The \f[V]\[at]\[at]species\f[R] accessor property returns the default
constructor for \f[V]ArrayBuffer\f[R] objects.
Subclass constructors may override it to change the constructor
assignment.
The default implementation is basically:
.IP
.nf
\f[C]
// Hypothetical underlying implementation for illustration
class ArrayBuffer {
  static get [Symbol.species]() {
    return this;
  }
}
\f[R]
.fi
.PP
Because of this polymorphic implementation, \f[V]\[at]\[at]species\f[R]
of derived subclasses would also return the constructor itself by
default.
.IP
.nf
\f[C]
class SubArrayBuffer extends ArrayBuffer {}
SubArrayBuffer[Symbol.species] === SubArrayBuffer; // true
\f[R]
.fi
.PP
When calling array buffer methods that do not mutate the existing object
but return a new array buffer instance (for example, \f[V]slice()\f[R]),
the object\[cq]s \f[V]constructor[\[at]\[at]species]\f[R] will be
accessed.
The returned constructor will be used to construct the return value of
the array buffer method.
.SH Examples
.SS Species in ordinary objects
.PP
The \f[V]\[at]\[at]species\f[R] property returns the default constructor
function, which is the \f[V]ArrayBuffer\f[R] constructor for
\f[V]ArrayBuffer\f[R].
.IP
.nf
\f[C]
ArrayBuffer[Symbol.species]; // function ArrayBuffer()
\f[R]
.fi
.SS Species in derived objects
.PP
In an instance of a custom \f[V]ArrayBuffer\f[R] subclass, such as
\f[V]MyArrayBuffer\f[R], the \f[V]MyArrayBuffer\f[R] species is the
\f[V]MyArrayBuffer\f[R] constructor.
However, you might want to overwrite this, in order to return parent
\f[V]ArrayBuffer\f[R] objects in your derived class methods:
.IP
.nf
\f[C]
class MyArrayBuffer extends ArrayBuffer {
  // Overwrite MyArrayBuffer species to the parent ArrayBuffer constructor
  static get [Symbol.species]() {
    return ArrayBuffer;
  }
}
\f[R]
.fi
.SH See also
.IP \[bu] 2
\f[V]ArrayBuffer\f[R]
.IP \[bu] 2
\f[V]Symbol.species\f[R]
