.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "ServiceWorkerRegistration.updateViaCache" "JS" "December 10, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ServiceWorkerRegistration.updateViaCache \- ServiceWorkerRegistration:
updateViaCache property
.SH SYNOPSIS
The \f[B]\f[CB]updateViaCache\f[B]\f[R] read\-only property of the
\f[CR]ServiceWorkerRegistration\f[R] interface updates the cache using
the mode specified in the call to
\f[CR]ServiceWorkerContainer.register\f[R].
Requests for \f[CR]importScripts\f[R] still go via the HTTP cache.
\f[CR]updateViaCache\f[R] offers control over this behavior.
.SH VALUE
Returns one of the following values:
.IP \[bu] 2
\f[CR]imports\f[R], meaning the HTTP cache is not consulted for update
of the service worker, but is consulted for \f[CR]importScripts\f[R].
.IP \[bu] 2
\f[CR]all\f[R], meaning the HTTP cache is consulted in both cases
.IP \[bu] 2
\f[CR]none\f[R], meaning the HTTP cache is never consulted.
.SH EXAMPLES
The following example shows the use of updateViaCache.
.IP
.EX
if (\[dq]serviceWorker\[dq] in navigator) {
  navigator.serviceWorker
    .register(\[dq]/service\-worker.js\[dq], {
      updateViaCache: \[dq]none\[dq],
    })
    .then((registration) => {
      registration.addEventListener(\[dq]updatefound\[dq], () => {
        // If updatefound is fired, it means that there\[aq]s
        // a new service worker being installed.
        console.log(\[ga]Value of updateViaCache: ${registration.updateViaCache}\[ga]);
      });
    })
    .catch((error) => {
      console.error(\[ga]Service worker registration failed: ${error}\[ga]);
    });
}
.EE
.SH SEE ALSO
.IP \[bu] 2
Using Service Workers
.IP \[bu] 2
\c
.UR
https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker
Service workers basic code example
.UE \c
.IP \[bu] 2
Using web workers
