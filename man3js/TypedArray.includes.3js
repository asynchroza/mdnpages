.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "TypedArray.includes" "JS" "September 14, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TypedArray.includes - TypedArray.prototype.includes()
.SH SYNOPSIS
The \f[B]\f[CB]includes()\f[B]\f[R] method of \f[CR]TypedArray\f[R]
instances determines whether a typed array includes a certain value
among its entries, returning \f[CR]true\f[R] or \f[CR]false\f[R] as
appropriate.
This method has the same algorithm as
\f[CR]Array.prototype.includes()\f[R].
.SH SYNTAX
.IP
.EX
includes(searchElement)
includes(searchElement, fromIndex)
.EE
.SS Parameters
.TP
\f[B]searchElement\f[R]
The value to search for.
.TP
\f[B]fromIndex\f[R] \f[I](optional)\f[R]
Zero-based index at which to start searching, converted to an integer.
.SS Return value
A boolean value which is \f[CR]true\f[R] if the value
\f[CR]searchElement\f[R] is found within the typed array (or the part of
the typed array indicated by the index \f[CR]fromIndex\f[R], if
specified).
.SH DESCRIPTION
See \f[CR]Array.prototype.includes()\f[R] for more details.
This method is not generic and can only be called on typed array
instances.
.SH EXAMPLES
.SS Using includes()
.IP
.EX
const uint8 = new Uint8Array([1, 2, 3]);
uint8.includes(2); // true
uint8.includes(4); // false
uint8.includes(3, 3); // false

// NaN handling (only true for Float32 and Float64)
new Uint8Array([NaN]).includes(NaN); // false, since the NaN passed to the constructor gets converted to 0
new Float32Array([NaN]).includes(NaN); // true;
new Float64Array([NaN]).includes(NaN); // true;
.EE
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[CR]TypedArray.prototype.includes\f[R] in
\f[CR]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-typed-arrays)
.IP \[bu] 2
JavaScript typed arrays guide
.IP \[bu] 2
\f[CR]TypedArray\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.indexOf()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.find()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.findIndex()\f[R]
.IP \[bu] 2
\f[CR]Array.prototype.includes()\f[R]
.IP \[bu] 2
\f[CR]String.prototype.includes()\f[R]
