.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "DataView.getFloat64" "JS" "March 27, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DataView.getFloat64 - DataView.prototype.getFloat64()
.SH SYNOPSIS
The \f[B]\f[CB]getFloat64()\f[B]\f[R] method gets a signed 64-bit float
(double) at the specified byte offset from the start of the
\f[CR]DataView\f[R].
.SH SYNTAX
.IP
.EX
getFloat64(byteOffset)
getFloat64(byteOffset, littleEndian)
.EE
.SS Parameters
.TP
\f[B]byteOffset\f[R]
The offset, in byte, from the start of the view where to read the data.
.TP
\f[B]littleEndian\f[R] \f[I](optional)\f[R]
Indicates whether the 64-bit float is stored in little- or big-endian
format.
If \f[CR]false\f[R] or \f[CR]undefined\f[R], a big-endian value is read.
.SS Return value
A signed 64-bit float number.
.SS Errors thrown
.TP
\f[B]RangeError\f[R]
Thrown if the \f[CR]byteOffset\f[R] is set such as it would read beyond
the end of the view.
.SH DESCRIPTION
There is no alignment constraint; multi-byte values may be fetched from
any offset.
.SH EXAMPLES
.SS Using the getFloat64 method
.IP
.EX
const buffer = new ArrayBuffer(8);
const dataview = new DataView(buffer);
dataview.getFloat64(0); // 0
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]DataView\f[R]
.IP \[bu] 2
\f[CR]ArrayBuffer\f[R]
