.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "RTCErrorEvent.error" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCErrorEvent.error \- RTCErrorEvent: error property
.SH SYNOPSIS
The read\-only \f[CR]RTCErrorEvent\f[R] property
\f[B]\f[CB]error\f[B]\f[R] contains an \f[CR]RTCError\f[R] object
describing the details of the error which the event is announcing.
.SH VALUE
An \f[CR]RTCError\f[R] object whose properties provide details about the
error which has occurred in the context of a WebRTC operation.
.SH EXAMPLES
In this example, a handler is established for an
\f[CR]RTCDataChannel\f[R]\[cq]s \f[CR]error\f[R] event.
.IP
.EX
dataChannel.addEventListener(\[dq]error\[dq], (event) => {
  let error = event.error;

  if (error.errorDetail === \[dq]sdp\-syntax\-error\[dq]) {
    let errLine = error.sdpLineNumber;
    let errMessage = error.message;

    let alertMessage = \[ga]A syntax error occurred interpreting line ${errLine} of the SDP: ${errMessage}\[ga];
    showMyAlertMessage(\[dq]Data Channel Error\[dq], alertMessage);
  } else {
    terminateMyConnection();
  }
});
.EE
.PP
If the error is an SDP syntax error\[em]indicated by its
\f[CR]errorDetail\f[R] property being
\f[CR]sdp\-syntax\-error\f[R]\[em], a message string is constructed to
present the error message and the line number within the SDP at which
the error occurred.
This message is then displayed using a function called
\f[CR]showMyAlertMessage()\f[R], which stands in for whatever output
mechanism this code might use.
.PP
Any other error is treated as terminal, causing a
\f[CR]terminateMyConnection()\f[R] function to be called.
.PP
The above example uses \f[CR]addEventListener()\f[R] to add the handler
for \f[CR]error\f[R] events.
You can also use the \f[CR]RTCDataChannel\f[R] object\[cq]s
\f[CR]onerror\f[R] event handler property, like this:
.IP
.EX
dataChannel.onerror = (event) => {
  let error = event.error;

  /* and so forth */
};
.EE
