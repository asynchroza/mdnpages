.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Set.delete" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
Set.delete - Set.prototype.delete()
.SH SYNOPSIS
.PP
The \f[B]\f[VB]delete()\f[B]\f[R] method removes a specified value from
a \f[V]Set\f[R] object, if it is in the set.
.SH SYNTAX
.IP
.nf
\f[C]
delete(value)
\f[R]
.fi
.SS Parameters
.TP
\f[B]value\f[R]
The value to remove from \f[V]Set\f[R].
.SS Return value
.PP
Returns \f[V]true\f[R] if \f[V]value\f[R] was already in \f[V]Set\f[R];
otherwise \f[V]false\f[R].
.SH EXAMPLES
.SS Using the delete() method
.IP
.nf
\f[C]
const mySet = new Set();
mySet.add(\[dq]foo\[dq]);

console.log(mySet.delete(\[dq]bar\[dq])); // false; no \[dq]bar\[dq] element found to be deleted.
console.log(mySet.delete(\[dq]foo\[dq])); // true; successfully removed.

console.log(mySet.has(\[dq]foo\[dq])); // false; the \[dq]foo\[dq] element is no longer present.
\f[R]
.fi
.SS Deleting an object from a set
.PP
Because objects are compared by reference, you have to delete them by
checking individual properties if you don\[cq]t have a reference to the
original object.
.IP
.nf
\f[C]
const setObj = new Set(); // Create a new set.

setObj.add({ x: 10, y: 20 }); // Add object in the set.

setObj.add({ x: 20, y: 30 }); // Add object in the set.

// Delete any point with \[ga]x > 10\[ga].
setObj.forEach((point) => {
  if (point.x > 10) {
    setObj.delete(point);
  }
});
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
\f[V]Set\f[R]
.IP \[bu] 2
\f[V]Set.prototype.clear()\f[R]
