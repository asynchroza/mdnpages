.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Document.lastModified" "JS" "November 9, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Document.lastModified \- Document: lastModified property
.SH SYNOPSIS
The \f[B]\f[CB]lastModified\f[B]\f[R] property of the
\f[CR]Document\f[R] interface returns a string containing the date and
local time on which the current document was last modified.
.SH VALUE
A string.
.SH EXAMPLES
.SS Simple usage
This example alerts the value of \f[CR]lastModified\f[R].
.IP
.EX
alert(document.lastModified);
// returns: Tuesday, December 16, 2017 11:09:42
.EE
.SS Transforming lastModified into a Date object
This example transforms \f[CR]lastModified\f[R] into a \f[CR]Date\f[R]
object.
.IP
.EX
let oLastModif = new Date(document.lastModified);
.EE
.SS Transforming lastModified into milliseconds
This example transforms \f[CR]lastModified\f[R] into the number of
milliseconds since January 1, 1970, 00:00:00, local time.
.IP
.EX
let nLastModif = Date.parse(document.lastModified);
.EE
.SH NOTES
Note that as a string, \f[CR]lastModified\f[R] cannot \f[I]easily\f[R]
be used for comparing the modification dates of documents.
Here is a possible example of how to show an alert message when the page
changes (see also: JavaScript cookies API):
.IP
.EX
// Match \[aq]timestamp\[aq] in \[aq]last_modif=timestamp\[aq]
// e.g. \[aq]1687964614822\[aq] in \[aq]last_modif=1687964614822\[aq]
const pattern = /last_modif\[rs]s*=\[rs]s*([\[ha];]*)/;

if (
  Date.parse(document.lastModified) >
  (parseFloat(document.cookie.match(pattern)?.[1]) || 0)
) {
  document.cookie = \[ga]last_modif=${Date.now()}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=${
    location.pathname
  }\[ga];
  alert(\[dq]This page has changed!\[dq]);
}
.EE
.PP
\&...the same example, but skipping the first visit:
.IP
.EX
const pattern = /last_modif\[rs]s*=\[rs]s*([\[ha];]*)/;

const lastVisit = parseFloat(document.cookie.replace(pattern, \[dq]$1\[dq]));
const lastModif = Date.parse(document.lastModified);

if (Number.isNaN(lastVisit) || lastModif > lastVisit) {
  document.cookie = \[ga]last_modif=${Date.now()}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=${
    location.pathname
  }\[ga];

  if (isFinite(lastVisit)) {
    alert(\[dq]This page has been changed!\[dq]);
  }
}
.EE
.PP
If you want to know whether an \f[I]external\f[R] page has changed, you
can make a \f[CR]HEAD\f[R] request using the \f[CR]fetch()\f[R] API, and
examine the \f[CR]Last\-Modified\f[R] response header.
