.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Window.speechSynthesis" "JS" "April 8, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Window.speechSynthesis \- Window: speechSynthesis property
.SH SYNOPSIS
The \f[CR]speechSynthesis\f[R] read\-only property of the Window object
returns a \f[CR]SpeechSynthesis\f[R] object, which is the entry point
into using Web Speech API speech synthesis functionality.
.SH VALUE
A \f[CR]SpeechSynthesis\f[R] object.
.SH EXAMPLES
In our basic \c
.UR
https://github.com/mdn/dom-examples/tree/main/web-speech-api/speak-easy-synthesis
Speech synthesizer demo
.UE \c
, we first grab a reference to the SpeechSynthesis controller using
\f[CR]window.speechSynthesis\f[R].
After defining some necessary variables, we retrieve a list of the
voices available using \f[CR]SpeechSynthesis.getVoices()\f[R] and
populate a select menu with them so the user can choose what voice they
want.
.PP
Inside the \f[CR]inputForm.onsubmit\f[R] handler, we stop the form
submitting with preventDefault(), create a new
\f[CR]SpeechSynthesisUtterance\f[R] instance containing the text from
the text \f[CR]<input>\f[R], set the utterance\[cq]s voice to the voice
selected in the \f[CR]<select>\f[R] element, and start the utterance
speaking via the \f[CR]SpeechSynthesis.speak()\f[R] method.
.IP
.EX
const synth = window.speechSynthesis;

const inputForm = document.querySelector(\[dq]form\[dq]);
const inputTxt = document.querySelector(\[dq]input\[dq]);
const voiceSelect = document.querySelector(\[dq]select\[dq]);

function populateVoiceList() {
  voices = synth.getVoices();

  for (const voice of voices) {
    const option = document.createElement(\[dq]option\[dq]);
    option.textContent = \[ga]${voice.name} (${voice.lang})\[ga];

    if (voice.default) {
      option.textContent += \[dq] \[em] DEFAULT\[dq];
    }

    option.setAttribute(\[dq]data\-lang\[dq], voice.lang);
    option.setAttribute(\[dq]data\-name\[dq], voice.name);
    voiceSelect.appendChild(option);
  }
}

populateVoiceList();
if (speechSynthesis.onvoiceschanged !== undefined) {
  speechSynthesis.onvoiceschanged = populateVoiceList;
}

inputForm.onsubmit = (event) => {
  event.preventDefault();

  const utterThis = new SpeechSynthesisUtterance(inputTxt.value);
  const selectedOption =
    voiceSelect.selectedOptions[0].getAttribute(\[dq]data\-name\[dq]);
  utterThis.voice = voices.find((v) => v.name === selectedOption);
  synth.speak(utterThis);
  inputTxt.blur();
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Web Speech API
