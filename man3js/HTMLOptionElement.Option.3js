.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "HTMLOptionElement.Option" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLOptionElement.Option \- HTMLOptionElement: Option() constructor
.SH SYNOPSIS
The \f[B]\f[CB]Option()\f[B]\f[R] constructor creates a new
\f[CR]HTMLOptionElement\f[R].
.SH SYNTAX
.IP
.EX
new Option()
new Option(text)
new Option(text, value)
new Option(text, value, defaultSelected)
new Option(text, value, defaultSelected, selected)
.EE
.SS Parameters
.TP
\f[B]text\f[R] \f[I](optional)\f[R]
A string representing the content of the element, i.e.\ the displayed
text.
If this is not specified, a default value of \[lq]\[rq] (empty string)
is used.
.TP
\f[B]value\f[R] \f[I](optional)\f[R]
A string representing the value of the \f[CR]HTMLOptionElement\f[R],
i.e.\ the value attribute of the equivalent \f[CR]<option>\f[R].
If this is not specified, the value of text is used as the value,
e.g.\ for the associated \f[CR]<select>\f[R] element\[cq]s value when
the form is submitted to the server.
.TP
\f[B]defaultSelected\f[R] \f[I](optional)\f[R]
A value of either \f[CR]true\f[R] or \f[CR]false\f[R] that sets the
\f[CR]selected\f[R] attribute value, i.e.\ so that this
\f[CR]<option>\f[R] will be the default value selected in the
\f[CR]<select>\f[R] element when the page is first loaded.
If this is not specified, a default value of false is used.
Note that a value of true does not set the option to selected if it is
not already selected.
.TP
\f[B]selected\f[R] \f[I](optional)\f[R]
A value of either \f[CR]true\f[R] or \f[CR]false\f[R] that sets the
option\[cq]s selected state; the default is false (not selected).
If omitted, even if the defaultSelected argument is true, the option is
not selected.
.SH EXAMPLES
.SS Just add new options
.IP
.EX
/* assuming we have the following HTML
<select id=\[aq]s\[aq]>

</select>
*/

const s = document.getElementById(\[dq]s\[dq]);
const options = [Four, Five, Six];

options.forEach((element, key) => {
  s[key] = new Option(element, key);
});
.EE
.SS Append options with different parameters
.IP
.EX
/* assuming we have the following HTML
<select id=\[dq]s\[dq]>
    <option>First</option>
    <option>Second</option>
    <option>Third</option>
</select>
*/

const s = document.getElementById(\[dq]s\[dq]);
const options = [\[dq]zero\[dq], \[dq]one\[dq], \[dq]two\[dq]];

options.forEach((element, key) => {
  if (element === \[dq]zero\[dq]) {
    s[key] = new Option(element, s.options.length, false, false);
  }
  if (element === \[dq]one\[dq]) {
    s[key] = new Option(element, s.options.length, true, false); // Will add the \[dq]selected\[dq] attribute
  }
  if (element === \[dq]two\[dq]) {
    s[key] = new Option(element, s.options.length, false, true); // Just will be selected in \[dq]view\[dq]
  }
});

/* Result
<select id=\[dq]s\[dq]>
  <option value=\[dq]0\[dq]>zero</option>
  <option value=\[dq]1\[dq] selected=\[dq]\[dq]>one</option>
  <option value=\[dq]2\[dq]>two</option> // User will see this as \[aq]selected\[aq]
</select>
*/
.EE
