.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "Proxy.Proxy.construct" "JS" "August 21, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Proxy.Proxy.construct - handler.construct()
.SH SYNOPSIS
The \f[B]\f[CB]handler.construct()\f[B]\f[R] method is a trap for the
\f[CR][[Construct]]\f[R] object internal method, which is used by
operations such as the \f[CR]new\f[R] operator.
In order for the new operation to be valid on the resulting Proxy
object, the target used to initialize the proxy must itself be a valid
constructor.
.SH SYNTAX
.IP
.EX
new Proxy(target, {
  construct(target, argumentsList, newTarget) {
  }
});
.EE
.SS Parameters
The following parameters are passed to the \f[CR]construct()\f[R]
method.
\f[CR]this\f[R] is bound to the handler.
.TP
\f[B]target\f[R]
The target object.
.TP
\f[B]argumentsList\f[R]
The list of arguments for the constructor.
.TP
\f[B]newTarget\f[R]
The constructor that was originally called.
.SS Return value
The \f[CR]construct\f[R] method must return an object.
.SH DESCRIPTION
.SS Interceptions
This trap can intercept these operations:
.IP \[bu] 2
The \f[CR]new\f[R] operator: \f[CR]new myFunction(...args)\f[R]
.IP \[bu] 2
\f[CR]Reflect.construct()\f[R]
.PP
Or any other operation that invokes the \f[CR][[Construct]]\f[R]
internal method.
.SS Invariants
If the following invariants are violated, the trap throws a
\f[CR]TypeError\f[R] when invoked.
.IP \[bu] 2
The result must be an \f[CR]Object\f[R].
.SH EXAMPLES
.SS Trapping the new operator
The following code traps the \f[CR]new\f[R] operator.
.IP
.EX
const p = new Proxy(function () {}, {
  construct(target, argumentsList, newTarget) {
    console.log(\[ga]called: ${argumentsList}\[ga]);
    return { value: argumentsList[0] * 10 };
  },
});

console.log(new p(1).value); // \[dq]called: 1\[dq]
// 10
.EE
.PP
The following code violates the invariant.
.PP
\f[B]Bad\f[R]
.IP
.EX
const p = new Proxy(function () {}, {
  construct(target, argumentsList, newTarget) {
    return 1;
  },
});

new p(); // TypeError is thrown
.EE
.PP
The following code improperly initializes the proxy.
The \f[CR]target\f[R] in Proxy initialization must itself be a valid
constructor for the \f[CR]new\f[R] operator.
.PP
\f[B]Bad\f[R]
.IP
.EX
const p = new Proxy(
  {},
  {
    construct(target, argumentsList, newTarget) {
      return {};
    },
  },
);

new p(); // TypeError is thrown, \[dq]p\[dq] is not a constructor
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Proxy\f[R]
.IP \[bu] 2
\f[CR]Proxy()\f[R] constructor
.IP \[bu] 2
\f[CR]new\f[R]
.IP \[bu] 2
\f[CR]Reflect.construct()\f[R]
