.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Range.selectNodeContents" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Range.selectNodeContents \- Range: selectNodeContents() method
.SH SYNOPSIS
The \f[B]\f[CB]Range.selectNodeContents()\f[B]\f[R] method sets the
\f[CR]Range\f[R] to contain the contents of a \f[CR]Node\f[R].
.PP
The parent \f[CR]Node\f[R] of the start and end of the \f[CR]Range\f[R]
will be the reference node.
The \f[CR]startOffset\f[R] is 0, and the \f[CR]endOffset\f[R] is the
number of child \f[CR]Node\f[R]s or number of characters contained in
the reference node.
.SH SYNTAX
.IP
.EX
selectNodeContents(referenceNode)
.EE
.SS Parameters
.TP
\f[B]referenceNode\f[R]
The \f[CR]Node\f[R] whose contents will be selected within a
\f[CR]Range\f[R].
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.IP
.EX
const range = document.createRange();
const referenceNode = document.querySelector(\[dq]div\[dq]);
range.selectNodeContents(referenceNode);
.EE
.SS Live sample
This example lets the user select and deselect a paragraph with buttons.
\f[CR]Document.createRange()\f[R],
\f[CR]Range.selectNodeContents()\f[R], and
\f[CR]Selection.addRange()\f[R] are used to select the content.
\f[CR]Window.getSelection()\f[R] and
\f[CR]Selection.removeAllRanges()\f[R] are used to deselect it.
.SS HTML
.IP
.EX
<p id=\[dq]p\[dq]>
  <strong>Use the buttons below</strong> to select or deselect the contents of
  this paragraph.
</p>
<button id=\[dq]select\-button\[dq]>Select paragraph</button>
<button id=\[dq]deselect\-button\[dq]>Deselect paragraph</button>
.EE
.SS JavaScript
.IP
.EX
const p = document.getElementById(\[dq]p\[dq]);
const selectButton = document.getElementById(\[dq]select\-button\[dq]);
const deselectButton = document.getElementById(\[dq]deselect\-button\[dq]);

selectButton.addEventListener(\[dq]click\[dq], (e) => {
  // Clear any current selection
  const selection = window.getSelection();
  selection.removeAllRanges();

  // Select paragraph
  const range = document.createRange();
  range.selectNodeContents(p);
  selection.addRange(range);
});

deselectButton.addEventListener(\[dq]click\[dq], (e) => {
  const selection = window.getSelection();
  selection.removeAllRanges();
});
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
The DOM interfaces index
