.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "MessageChannel.port2" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MessageChannel.port2 \- MessageChannel: port2 property
.SH SYNOPSIS
The \f[B]\f[CB]port2\f[B]\f[R] read\-only property of the
\f[CR]MessageChannel\f[R] interface returns the second port of the
message channel \[em] the port attached to the context at the other end
of the channel, which the message is initially sent to.
.PP
This feature is available in Web Workers.
.SH VALUE
A \f[CR]MessagePort\f[R] object representing the second port of the
channel, the port attached to the context at the other end of the
channel.
.SH EXAMPLES
In the following code block, you can see a new channel being created
using the \f[CR]MessageChannel.MessageChannel\f[R] constructor.
When the IFrame has loaded, we pass \f[CR]port2\f[R] to the IFrame using
\f[CR]MessagePort.postMessage\f[R] along with a message.
The \f[CR]handleMessage\f[R] handler then responds to a message being
sent back from the IFrame (using \f[CR]onmessage\f[R]), putting it into
a paragraph.
\f[CR]MessageChannel.port1\f[R] is listened to, to check when the
message arrives.
.IP
.EX
const channel = new MessageChannel();
const para = document.querySelector(\[dq]p\[dq]);

const ifr = document.querySelector(\[dq]iframe\[dq]);
const otherWindow = ifr.contentWindow;

ifr.addEventListener(\[dq]load\[dq], iframeLoaded, false);

function iframeLoaded() {
  otherWindow.postMessage(\[dq]Hello from the main page!\[dq], \[dq]*\[dq], [channel.port2]);
}

channel.port1.onmessage = handleMessage;
function handleMessage(e) {
  para.innerHTML = e.data;
}
.EE
.PP
For a full working example, see our \c
.UR
https://github.com/mdn/dom-examples/tree/main/channel-messaging-basic
channel messaging basic demo
.UE \c
\ on GitHub (\c
.UR https://mdn.github.io/dom-examples/channel-messaging-basic/
run it live too
.UE \c
).
.SH SEE ALSO
.IP \[bu] 2
Using channel messaging
