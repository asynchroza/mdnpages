'\" t
.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "Error.name" "JS" "February 21, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Error.name - Error.prototype.name
.SH SYNOPSIS
The \f[B]\f[CB]name\f[B]\f[R] data property of
\f[CR]Error.prototype\f[R] is shared by all \f[CR]Error\f[R] instances.
It represents the name for the type of error.
For \f[CR]Error.prototype.name\f[R], the initial value is
\f[CR]\[dq]Error\[dq]\f[R].
Subclasses like \f[CR]TypeError\f[R] and \f[CR]SyntaxError\f[R] provide
their own \f[CR]name\f[R] properties.
.SH VALUE
A string.
For \f[CR]Error.prototype.name\f[R], the initial value is
\f[CR]\[dq]Error\[dq]\f[R].
.PP
.TS
tab(@);
l l.
T{
Writable
T}@T{
yes
T}
T{
Enumerable
T}@T{
no
T}
T{
Configurable
T}@T{
yes
T}
.TE
.SH DESCRIPTION
By default, \f[CR]Error\f[R] instances are given the name
\[lq]Error\[rq].
The \f[CR]name\f[R] property, in addition to the \f[CR]message\f[R]
property, is used by the \f[CR]Error.prototype.toString()\f[R] method to
create a string representation of the error.
.SH EXAMPLES
.SS Throwing a custom error
.IP
.EX
const e = new Error(\[dq]Malformed input\[dq]); // e.name is \[aq]Error\[aq]

e.name = \[dq]ParseError\[dq];
throw e;
// e.toString() would return \[aq]ParseError: Malformed input\[aq]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Error.prototype.message\f[R]
.IP \[bu] 2
\f[CR]Error.prototype.toString()\f[R]
