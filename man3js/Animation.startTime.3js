.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Animation.startTime" "JS" "December 4, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Animation.startTime \- Animation: startTime property
.SH SYNOPSIS
The \f[B]\f[CB]Animation.startTime\f[B]\f[R] property of the
\f[CR]Animation\f[R] interface is a double\-precision floating\-point
value which indicates the scheduled time when an animation\[cq]s
playback should begin.
.PP
An animation\[cq]s \f[B]start time\f[R] is the time value of its
\f[CR]timeline\f[R] when its target \f[CR]KeyframeEffect\f[R] is
scheduled to begin playback.
An animation\[cq]s \f[B]start time\f[R] is initially unresolved (meaning
that it\[cq]s \f[CR]null\f[R] because it has no value).
.SH VALUE
A floating\-point number representing the current time in milliseconds,
or \f[CR]null\f[R] if no time is set.
You can read this value to determine what the start time is currently
set at, and you can change this value to make the animation start at a
different time.
.SH EXAMPLES
In the \c
.UR https://codepen.io/rachelnabors/pen/zxYexJ?editors=0010
Running on Web Animations API example
.UE \c
, we can sync all new animated cats by giving them all the same
\f[CR]startTime\f[R] as the original running cat:
.IP
.EX
const catRunning = document
  .getElementById(\[dq]withWAAPI\[dq])
  .animate(keyframes, timing);

/* A function that makes new cats. */
function addCat() {
  const newCat = document.createElement(\[dq]div\[dq]);
  newCat.classList.add(\[dq]cat\[dq]);
  return newCat;
}

/* This is the function that adds a cat to the WAAPI column */
function animateNewCatWithWAAPI() {
  // make a new cat
  const newCat = addCat();

  // animate said cat with the WAAPI\[aq]s \[dq]animate\[dq] function
  const newAnimationPlayer = newCat.animate(keyframes, timing);

  // set the animation\[aq]s start time to be the same as the original .cat#withWAAPI
  newAnimationPlayer.startTime = catRunning.startTime;

  // Add the cat to the pile.
  WAAPICats.appendChild(newCat);
}
.EE
.SH REDUCED TIME PRECISION
To offer protection against timing attacks and fingerprinting, the
precision of \f[CR]animation.startTime\f[R] might get rounded depending
on browser settings.
In Firefox, the \f[CR]privacy.reduceTimerPrecision\f[R] preference is
enabled by default and defaults to 20 Âµs in Firefox 59; in 60 it will be
2 ms.
.IP
.EX
// reduced time precision (2ms) in Firefox 60
animation.startTime;
// 23.404
// 24.192
// 25.514
// \&...

// reduced time precision with \[ga]privacy.resistFingerprinting\[ga] enabled
animation.startTime;
// 49.8
// 50.6
// 51.7
// \&...
.EE
.PP
In Firefox, you can also enabled
\f[CR]privacy.resistFingerprinting\f[R], the precision will be 100ms or
the value of
\f[CR]privacy.resistFingerprinting.reduceTimerPrecision.microseconds\f[R],
whichever is larger.
.SH SEE ALSO
.IP \[bu] 2
Web Animations API
.IP \[bu] 2
\f[CR]Animation\f[R]
.IP \[bu] 2
\f[CR]Animation.currentTime\f[R] for the current time of the animation.
