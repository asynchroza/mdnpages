.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "MouseEvent.button" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MouseEvent.button \- MouseEvent: button property
.SH SYNOPSIS
The \f[B]\f[CB]MouseEvent.button\f[B]\f[R] read\-only property indicates
which button was pressed on the mouse to trigger the event.
.PP
This property only guarantees to indicate which buttons are pressed
during events caused by pressing or releasing one or multiple buttons.
As such, it is not reliable for events such as \f[CR]mouseenter\f[R],
\f[CR]mouseleave\f[R], \f[CR]mouseover\f[R], \f[CR]mouseout\f[R], or
\f[CR]mousemove\f[R].
.PP
Users may change the configuration of buttons on their pointing device
so that if an event\[cq]s button property is zero, it may not have been
caused by the button that is physically left\[en]most on the pointing
device; however, it should behave as if the left button was clicked in
the standard button layout.
.RS
.PP
\f[B]Note:\f[R] Do not confuse this property with the
\f[CR]MouseEvent.buttons\f[R] property, which indicates which buttons
are pressed for all mouse events types.
.RE
.SH VALUE
A number representing a given button:
.IP \[bu] 2
\f[CR]0\f[R]: Main button pressed, usually the left button or the
un\-initialized state
.IP \[bu] 2
\f[CR]1\f[R]: Auxiliary button pressed, usually the wheel button or the
middle button (if present)
.IP \[bu] 2
\f[CR]2\f[R]: Secondary button pressed, usually the right button
.IP \[bu] 2
\f[CR]3\f[R]: Fourth button, typically the \f[I]Browser Back\f[R] button
.IP \[bu] 2
\f[CR]4\f[R]: Fifth button, typically the \f[I]Browser Forward\f[R]
button
.PP
As noted above, buttons may be configured differently to the standard
\[lq]left to right\[rq] layout.
A mouse configured for left\-handed use may have the button actions
reversed.
Some pointing devices only have one button and use keyboard or other
input mechanisms to indicate main, secondary, auxiliary, etc.
Others may have many buttons mapped to different functions and button
values.
.SH EXAMPLES
.SS HTML
.IP
.EX
<button id=\[dq]button\[dq] oncontextmenu=\[dq]event.preventDefault();\[dq]>
  Click here with your mouse\&...
</button>
<p id=\[dq]log\[dq]></p>
.EE
.SS JavaScript
.IP
.EX
let button = document.querySelector(\[dq]#button\[dq]);
button.addEventListener(\[dq]mouseup\[dq], (e) => {
  let log = document.querySelector(\[dq]#log\[dq]);
  switch (e.button) {
    case 0:
      log.textContent = \[dq]Left button clicked.\[dq];
      break;
    case 1:
      log.textContent = \[dq]Middle button clicked.\[dq];
      break;
    case 2:
      log.textContent = \[dq]Right button clicked.\[dq];
      break;
    default:
      log.textContent = \[ga]Unknown button code: ${e.button}\[ga];
  }
});
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
\f[CR]MouseEvent\f[R]
