.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "KeyframeEffect.pseudoElement" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
KeyframeEffect.pseudoElement \- KeyframeEffect: pseudoElement property
.SH SYNOPSIS
The \f[B]\f[CB]pseudoElement\f[B]\f[R] property of a
\f[CR]KeyframeEffect\f[R] interface is a string representing the
pseudo\-element being animated.
It may be \f[CR]null\f[R] for animations that do not target a
pseudo\-element.
It performs as both a getter and a setter, except with animations and
transitions generated by CSS.
.RS
.PP
\f[B]Note:\f[R] If set to the legacy single\-colon syntax of
\f[CR]:before\f[R], \f[CR]:after\f[R], \f[CR]:first\-letter\f[R], or
\f[CR]:first\-line\f[R], the string is transformed into its
double\-colon modern version (\f[CR]::before\f[R], \f[CR]::after\f[R],
\f[CR]::first\-letter\f[R], and \f[CR]::first\-line\f[R], respectively).
.RE
.SH VALUE
A string or \f[CR]null\f[R].
.SH EXCEPTIONS
.TP
\f[B]SyntaxError\f[R] \f[B]DOMException\f[R]
Thrown when trying to set this property to an element, an invalid
pseudo\-element (either non\-existent or misspelled).
The property is then left unchanged.
.SH EXAMPLES
.IP
.EX
<div id=\[dq]text\[dq]>Some text</div>
<pre id=\[dq]log\[dq]></pre>
.EE
.IP
.EX
text::after {
  content: \[dq]‚≠ê\[dq];
  display: inline\-block; /* Needed as the \[ga]transform\[ga] property does not apply to inline elements */
}
text::before {
  content: \[dq]üòä\[dq];
  display: inline\-block;
}
.EE
.IP
.EX
const log = document.getElementById(\[dq]log\[dq]);
const text = document.getElementById(\[dq]text\[dq]);

// Create the keyframe and launch the animation
const animation = text.animate(
  [
    { transform: \[dq]rotate(0)\[dq] },
    { transform: \[dq]rotate(180deg)\[dq] },
    { transform: \[dq]rotate(360deg)\[dq] },
  ],
  { duration: 3000, iterations: Infinity, pseudoElement: \[dq]::after\[dq] },
);

// Get the value of KeyframeEffect.pseudoElement
function logPseudoElement() {
  const keyframeEffect = animation.effect;
  log.textContent = \[ga]Value of pseudoElement animated: ${keyframeEffect.pseudoElement}\[ga];
  requestAnimationFrame(logPseudoElement);
}

// Every 6 seconds, switch the pseudo\-element animated
function switchPseudoElement() {
  const keyframeEffect = animation.effect;
  keyframeEffect.pseudoElement =
    keyframeEffect.pseudoElement === \[dq]::after\[dq] ? \[dq]::before\[dq] : \[dq]::after\[dq];
  setTimeout(switchPseudoElement, 6000);
}

switchPseudoElement();
logPseudoElement();
.EE
.SH SEE ALSO
.IP \[bu] 2
Web Animations API
.IP \[bu] 2
\f[CR]KeyframeEffect\f[R] interface
.IP \[bu] 2
\f[CR]KeyframeEffect()\f[R] constructor
.IP \[bu] 2
\f[CR]target\f[R] property
