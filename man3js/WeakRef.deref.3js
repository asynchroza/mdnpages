.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "WeakRef.deref" "JS" "March 29, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WeakRef.deref - WeakRef.prototype.deref()
.SH SYNOPSIS
The \f[B]\f[CB]deref()\f[B]\f[R] method returns the \f[CR]WeakRef\f[R]
instance\[cq]s target value, or \f[CR]undefined\f[R] if the target value
has been garbage-collected.
.SH SYNTAX
.IP
.EX
deref()
.EE
.SS Return value
The target value of the WeakRef, which is either an object or a
non-registered symbol.
Returns \f[CR]undefined\f[R] if the value has been garbage-collected.
.SH DESCRIPTION
See the Notes on WeakRefs section of the \f[CR]WeakRef\f[R] page for
some important notes.
.SH EXAMPLES
.SS Using deref()
See the Examples section of the \f[CR]WeakRef\f[R] page for the complete
example.
.IP
.EX
const tick = () => {
  // Get the element from the weak reference, if it still exists
  const element = this.ref.deref();
  if (element) {
    element.textContent = ++this.count;
  } else {
    // The element doesn\[aq]t exist anymore
    console.log(\[dq]The element is gone.\[dq]);
    this.stop();
    this.ref = null;
  }
};
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WeakRef\f[R]
