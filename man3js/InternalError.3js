.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "InternalError" "JS" "September 12, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
InternalError - InternalError
.SH SYNOPSIS
\f[I](non-standard)\f[R]
.PP
The \f[B]\f[CB]InternalError\f[B]\f[R] object indicates an error that
occurred internally in the JavaScript engine.
.PP
Example cases are mostly when something is too large, e.g.:
.IP \[bu] 2
\[lq]too many switch cases\[rq],
.IP \[bu] 2
\[lq]too many parentheses in regular expression\[rq],
.IP \[bu] 2
\[lq]array initializer too large\[rq],
.IP \[bu] 2
\[lq]too much recursion\[rq].
.PP
\f[CR]InternalError\f[R] is a subclass of \f[CR]Error\f[R].
.SH CONSTRUCTOR
.TP
\f[B]InternalError()\f[R] \f[I](non-standard)\f[R]
Creates a new \f[CR]InternalError\f[R] object.
.SH INSTANCE PROPERTIES
\f[I]Also inherits instance properties from its parent
\f[CI]Error\f[I]\f[R].
.PP
These properties are defined on \f[CR]InternalError.prototype\f[R] and
shared by all \f[CR]InternalError\f[R] instances.
.TP
\f[B]InternalError.prototype.constructor\f[R]
The constructor function that created the instance object.
For \f[CR]InternalError\f[R] instances, the initial value is the
\f[CR]InternalError\f[R] constructor.
.TP
\f[B]InternalError.prototype.name\f[R]
Represents the name for the type of error.
For \f[CR]InternalError.prototype.name\f[R], the initial value is
\f[CR]\[dq]InternalError\[dq]\f[R].
.SH INSTANCE METHODS
\f[I]Inherits instance methods from its parent \f[CI]Error\f[I]\f[R].
.SH EXAMPLES
.SS Too much recursion
This recursive function runs 10 times, as per the exit condition.
.IP
.EX
function loop(x) {
  // \[dq]x >= 10\[dq] is the exit condition
  if (x >= 10) return;

  // do stuff
  loop(x + 1); // the recursive call
}
loop(0);
.EE
.PP
Setting this condition to an extremely high value, may not work:
.PP
\f[B]Bad\f[R]
.IP
.EX
function loop(x) {
  if (x >= 1000000000000) return;

  // do stuff
  loop(x + 1);
}
loop(0);

// InternalError: too much recursion
.EE
.PP
For more information, see InternalError: too much recursion.
