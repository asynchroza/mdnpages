.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "SpeechSynthesisUtterance.rate" "JS" "June 26, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SpeechSynthesisUtterance.rate \- SpeechSynthesisUtterance: rate property
.SH SYNOPSIS
The \f[B]\f[CB]rate\f[B]\f[R] property of the
\f[CR]SpeechSynthesisUtterance\f[R] interface gets and sets the speed at
which the utterance will be spoken at.
.PP
If unset, a default value of 1 will be used.
.SH VALUE
A float representing the rate value.
It can range between 0.1 (lowest) and 10 (highest), with 1 being the
default rate for the current platform or voice, which should correspond
to a normal speaking rate.
Other values act as a percentage relative to this, so for example 2 is
twice as fast, 0.5 is half as fast, etc.
.PP
Some speech synthesis engines or voices may constrain the minimum and
maximum rates further.
If \c
.UR https://www.w3.org/TR/speech-synthesis/
SSML
.UE \c
\ is used, this value will be overridden by \c
.UR https://www.w3.org/TR/speech-synthesis/#S3.2.4
prosody tags
.UE \c
\ in the markup.
.SH EXAMPLES
.SS Adjusting playback rate
In this example we can adjust the playback rate using the slider, then
play the utterance with the \[lq]Play\[rq] button.
.SS HTML
.IP
.EX
<p id=\[dq]text\[dq]>It was a dark and stormy night.</p>

<div id=\[dq]rate\-control\[dq]>
  <label for=\[dq]rate\[dq]>Rate:</label>
  <input type=\[dq]range\[dq] min=\[dq]0.5\[dq] max=\[dq]2\[dq] value=\[dq]1\[dq] step=\[dq]0.1\[dq] id=\[dq]rate\[dq] />
</div>

<button id=\[dq]play\[dq]>Play</button>
.EE
.SS CSS
.IP
.EX
body {
  font\-family: sans\-serif;
}

rate\-control {
  display: flex;
  align\-items: center;
  gap: 1rem;
  margin: 1rem 0;
}
.EE
.SS JavaScript
.IP
.EX
const synth = window.speechSynthesis;

const text = document.querySelector(\[dq]#text\[dq]);
const play = document.querySelector(\[dq]#play\[dq]);
const rate = document.querySelector(\[dq]#rate\[dq]);

function speak() {
  if (synth.speaking) {
    synth.cancel();
  }
  const utterThis = new SpeechSynthesisUtterance(text.textContent);
  utterThis.addEventListener(\[dq]error\[dq], () => {
    console.error(\[dq]SpeechSynthesisUtterance error\[dq]);
  });
  utterThis.rate = rate.value;
  synth.speak(utterThis);
}

play.addEventListener(\[dq]click\[dq], speak);
.EE
.SS Output
.SH SEE ALSO
.IP \[bu] 2
Web Speech API
