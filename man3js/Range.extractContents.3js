.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Range.extractContents" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Range.extractContents \- Range: extractContents() method
.SH SYNOPSIS
The \f[B]\f[CB]Range.extractContents()\f[B]\f[R] method moves contents
of the \f[CR]Range\f[R] from the document tree into a
\f[CR]DocumentFragment\f[R].
.PP
Event listeners added using DOM Events are not retained during
extraction.
HTML attribute events are retained or duplicated as they are for the
\f[CR]Node.cloneNode()\f[R] method.
HTML \f[CR]id\f[R] attributes are also cloned, which can lead to an
invalid document if a partially\-selected node is extracted and appended
to the document.
.PP
Partially selected nodes are cloned to include the parent tags necessary
to make the document fragment valid.
.SH SYNTAX
.IP
.EX
extractContents()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]DocumentFragment\f[R] object.
.SH EXAMPLES
.SS Basic example
.IP
.EX
const range = document.createRange();
range.selectNode(document.getElementsByTagName(\[dq]div\[dq]).item(0));
const documentFragment = range.extractContents();
document.body.appendChild(documentFragment);
.EE
.SS Moving items between containers
This example lets you move items between two containers.
Select one or more item, and then click \[lq]swap\[rq] to move them to
the opposite container.
.SS HTML
.IP
.EX
<p id=\[dq]list1\[dq]>123456</p>
<button id=\[dq]swap\[dq]>Swap selected item(s)</button>
<p id=\[dq]list2\[dq]>abcdef</p>
.EE
.SS CSS
.IP
.EX
body {
  pointer\-events: none;
}

p {
  border: 1px solid;
  font\-size: 2em;
  padding: 0.3em;
}

button {
  font\-size: 1.2em;
  padding: 0.5em;
  pointer\-events: auto;
}
.EE
.SS JavaScript
.IP
.EX
const list1 = document.getElementById(\[dq]list1\[dq]);
const list2 = document.getElementById(\[dq]list2\[dq]);
const button = document.getElementById(\[dq]swap\[dq]);

button.addEventListener(\[dq]click\[dq], (e) => {
  selection = window.getSelection();

  for (let i = 0; i < selection.rangeCount; i++) {
    const range = selection.getRangeAt(i);

    if (
      range.commonAncestorContainer === list1 ||
      range.commonAncestorContainer.parentNode === list1
    ) {
      const documentFragment = range.extractContents();
      list2.appendChild(documentFragment);
    } else if (
      range.commonAncestorContainer === list2 ||
      range.commonAncestorContainer.parentNode === list2
    ) {
      const documentFragment = range.extractContents();
      list1.appendChild(documentFragment);
    }
  }
});
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
The DOM interfaces index
