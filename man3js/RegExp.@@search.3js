.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "RegExp.\[at]\[at]search" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
RegExp.\[at]\[at]search - RegExp.prototype\[at]\[at]search
.SH SYNOPSIS
.PP
The \f[B]\f[VB][\[at]\[at]search]()\f[B]\f[R] method of \f[V]RegExp\f[R]
instances specifies how \f[V]String.prototype.search\f[R] should behave.
.SH SYNTAX
.IP
.nf
\f[C]
regexp[Symbol.search](str)
\f[R]
.fi
.SS Parameters
.TP
\f[B]str\f[R]
A \f[V]String\f[R] that is a target of the search.
.SS Return value
.PP
The index of the first match between the regular expression and the
given string, or \f[V]-1\f[R] if no match was found.
.SH DESCRIPTION
.PP
This method is called internally in \f[V]String.prototype.search()\f[R].
For example, the following two examples return the same result.
.IP
.nf
\f[C]
\[dq]abc\[dq].search(/a/);

/a/[Symbol.search](\[dq]abc\[dq]);
\f[R]
.fi
.PP
This method does not copy the regular expression, unlike
\f[V]\[at]\[at]split\f[R] or \f[V]\[at]\[at]matchAll\f[R].
However, unlike \f[V]\[at]\[at]match\f[R] or
\f[V]\[at]\[at]replace\f[R], it will set \f[V]lastIndex\f[R] to 0 when
execution starts and restore it to the previous value when it exits,
therefore generally avoiding side effects.
This means that the \f[V]g\f[R] flag has no effect with this method, and
it always returns the first match in the string even when
\f[V]lastIndex\f[R] is non-zero.
This also means sticky regexps will always search strictly at the
beginning of the string.
.IP
.nf
\f[C]
const re = /[abc]/g;
re.lastIndex = 2;
console.log(\[dq]abc\[dq].search(re)); // 0

const re2 = /[bc]/y;
re2.lastIndex = 1;
console.log(\[dq]abc\[dq].search(re2)); // -1
console.log(\[dq]abc\[dq].match(re2)); // [ \[aq]b\[aq] ]
\f[R]
.fi
.PP
\f[V]\[at]\[at]search\f[R] always calls the regex\[cq]s \f[V]exec()\f[R]
method exactly once, and returns the \f[V]index\f[R] property of the
result, or \f[V]-1\f[R] if the result is \f[V]null\f[R].
.PP
This method exists for customizing the search behavior in
\f[V]RegExp\f[R] subclasses.
.SH EXAMPLES
.SS Direct call
.PP
This method can be used in almost the same way as
\f[V]String.prototype.search()\f[R], except for the different value of
\f[V]this\f[R] and the different arguments order.
.IP
.nf
\f[C]
const re = /-/g;
const str = \[dq]2016-01-02\[dq];
const result = re[Symbol.search](str);
console.log(result); // 4
\f[R]
.fi
.SS Using \[at]\[at]search in subclasses
.PP
Subclasses of \f[V]RegExp\f[R] can override
\f[V][\[at]\[at]search]()\f[R] method to modify the behavior.
.IP
.nf
\f[C]
class MyRegExp extends RegExp {
  constructor(str) {
    super(str);
    this.pattern = str;
  }
  [Symbol.search](str) {
    return str.indexOf(this.pattern);
  }
}

const re = new MyRegExp(\[dq]a+b\[dq]);
const str = \[dq]ab a+b\[dq];
const result = str.search(re); // String.prototype.search calls re[\[at]\[at]search].
console.log(result); // 3
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[V]RegExp.prototype[\[at]\[at]search]\f[R] in
\f[V]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-string-and-regexp)
.IP \[bu] 2
\f[V]String.prototype.search()\f[R]
.IP \[bu] 2
\f[V]RegExp.prototype[\[at]\[at]match]()\f[R]
.IP \[bu] 2
\f[V]RegExp.prototype[\[at]\[at]matchAll]()\f[R]
.IP \[bu] 2
\f[V]RegExp.prototype[\[at]\[at]replace]()\f[R]
.IP \[bu] 2
\f[V]RegExp.prototype[\[at]\[at]split]()\f[R]
.IP \[bu] 2
\f[V]RegExp.prototype.exec()\f[R]
.IP \[bu] 2
\f[V]RegExp.prototype.test()\f[R]
.IP \[bu] 2
\f[V]Symbol.search\f[R]
