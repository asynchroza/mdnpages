.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "TypedArray.every" "JS" "March 30, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TypedArray.every - TypedArray.prototype.every()
.SH SYNOPSIS
The \f[B]\f[CB]every()\f[B]\f[R] method tests whether all elements in
the typed array pass the test implemented by the provided function.
This method has the same algorithm as
\f[CR]Array.prototype.every()\f[R].
\f[I]TypedArray\f[R] is one of the typed array types here.
.SH SYNTAX
.IP
.EX
every(callbackFn)
every(callbackFn, thisArg)
.EE
.SS Parameters
.TP
\f[B]callbackFn\f[R]
A function to execute for each element in the typed array.
It should return a truthy value to indicate the element passes the test,
and a falsy value otherwise.
The function is called with the following arguments:
.RS
.TP
\f[B]element\f[R]
The current element being processed in the typed array.
.TP
\f[B]index\f[R]
The index of the current element being processed in the typed array.
.TP
\f[B]array\f[R]
The typed array \f[CR]every()\f[R] was called upon.
.RE
.TP
\f[B]thisArg\f[R] \f[I](optional)\f[R]
A value to use as \f[CR]this\f[R] when executing \f[CR]callbackFn\f[R].
See iterative methods.
.SS Return value
\f[CR]true\f[R] if the callback function returns a truthy value for
every array element; otherwise, \f[CR]false\f[R].
.SH DESCRIPTION
The \f[CR]every\f[R] method executes the provided \f[CR]callbackFn\f[R]
function once for each element present in the typed array until it finds
the one where \f[CR]callbackFn\f[R] returns a falsy value.
If such an element is found, the \f[CR]every\f[R] method immediately
returns \f[CR]false\f[R].
Otherwise, if \f[CR]callbackFn\f[R] returns a truthy value for all
elements, \f[CR]every\f[R] returns \f[CR]true\f[R].
.PP
\f[CR]callbackFn\f[R] is invoked with three arguments: the value of the
element, the index of the element, and the typed array object being
traversed.
.PP
If a \f[CR]thisArg\f[R] parameter is provided to \f[CR]every\f[R], it
will be used as callback\[cq]s \f[CR]this\f[R] value.
Otherwise, the value \f[CR]undefined\f[R] will be used as its
\f[CR]this\f[R] value.
The \f[CR]this\f[R] value ultimately observable by \f[CR]callbackFn\f[R]
is determined according to the usual rules for determining the
\f[CR]this\f[R] seen by a function.
.PP
\f[CR]every\f[R] does not mutate the typed array on which it is called.
.SH EXAMPLES
.SS Testing size of all typed array elements
The following example tests whether all elements in the typed array are
bigger than 9.
.IP
.EX
function isBigEnough(element, index, array) {
  return element >= 10;
}
new Uint8Array([12, 5, 8, 130, 44]).every(isBigEnough); // false
new Uint8Array([12, 54, 18, 130, 44]).every(isBigEnough); // true
.EE
.SS Testing typed array elements using arrow functions
Arrow functions provide a shorter syntax for the same test.
.IP
.EX
new Uint8Array([12, 5, 8, 130, 44]).every((elem) => elem >= 10); // false
new Uint8Array([12, 54, 18, 130, 44]).every((elem) => elem >= 10); // true
.EE
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[CR]TypedArray.prototype.every\f[R] in
\f[CR]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-typed-arrays)
.IP \[bu] 2
\f[CR]TypedArray.prototype.some()\f[R]
.IP \[bu] 2
\f[CR]Array.prototype.every()\f[R]
