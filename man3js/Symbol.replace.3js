'\" t
.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Symbol.replace" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
Symbol.replace - Symbol.replace
.SH SYNOPSIS
.PP
The \f[B]\f[VB]Symbol.replace\f[B]\f[R] static data property represents
the well-known symbol \f[V]\[at]\[at]replace\f[R].
The \f[V]String.prototype.replace()\f[R] method looks up this symbol on
its first argument for the method that replaces substrings matched by
the current object.
.PP
For more information, see
\f[V]RegExp.prototype[\[at]\[at]replace]()\f[R] and
\f[V]String.prototype.replace()\f[R].
.SH VALUE
.PP
The well-known symbol \f[V]\[at]\[at]replace\f[R].
.PP
.TS
tab(@);
l l.
T{
Writable
T}@T{
no
T}
T{
Enumerable
T}@T{
no
T}
T{
Configurable
T}@T{
no
T}
.TE
.SH EXAMPLES
.SS Using Symbol.replace
.IP
.nf
\f[C]
class CustomReplacer {
  constructor(value) {
    this.value = value;
  }
  [Symbol.replace](string) {
    return string.replace(this.value, \[dq]#!\[at]?\[dq]);
  }
}

console.log(\[dq]football\[dq].replace(new CustomReplacer(\[dq]foo\[dq]))); // \[dq]#!\[at]?tball\[dq]
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[V]Symbol.replace\f[R] in
\f[V]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-symbol)
.IP \[bu] 2
\f[V]Symbol.match\f[R]
.IP \[bu] 2
\f[V]Symbol.matchAll\f[R]
.IP \[bu] 2
\f[V]Symbol.search\f[R]
.IP \[bu] 2
\f[V]Symbol.split\f[R]
.IP \[bu] 2
\f[V]String.prototype.replace()\f[R]
.IP \[bu] 2
\f[V]RegExp.prototype[\[at]\[at]replace]()\f[R]
