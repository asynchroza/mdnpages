.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Date.getYear" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
Date.getYear - Date.prototype.getYear()
.SH SYNOPSIS
.PP
\f[I](deprecated)\f[R]
.PP
The \f[B]\f[VB]getYear()\f[B]\f[R] method of \f[V]Date\f[R] instances
returns the year for this date according to local time.
Because \f[V]getYear()\f[R] does not return full years (\[lq]year 2000
problem\[rq]), it is deprecated and has been replaced by the
\f[V]getFullYear()\f[R] method.
.SH SYNTAX
.IP
.nf
\f[C]
getYear()
\f[R]
.fi
.SS Return value
.PP
An integer representing the year for the given date according to local
time, minus 1900.
Returns \f[V]NaN\f[R] if the date is invalid.
.IP \[bu] 2
For years greater than or equal to 2000, the value is 100 or greater.
For example, if the year is 2026, \f[V]getYear()\f[R] returns 126.
.IP \[bu] 2
For years between and including 1900 and 1999, the value returned by
\f[V]getYear()\f[R] is between 0 and 99.
For example, if the year is 1976, \f[V]getYear()\f[R] returns 76.
.IP \[bu] 2
For years less than 1900, the value returned by \f[V]getYear()\f[R] is
less than 0.
For example, if the year is 1800, \f[V]getYear()\f[R] returns -100.
.PP
This method essentially returns the value of \f[V]getFullYear()\f[R]
minus 1900.
You should use \f[V]getFullYear()\f[R] instead, so that the year is
specified in full.
.SH EXAMPLES
.SS Years between 1900 and 1999
.PP
The second statement assigns the value 95 to the variable
\f[V]year\f[R].
.IP
.nf
\f[C]
const xmas = new Date(\[dq]1995-12-25\[dq]);
const year = xmas.getYear(); // returns 95
\f[R]
.fi
.SS Years above 1999
.PP
The second statement assigns the value 100 to the variable
\f[V]year\f[R].
.IP
.nf
\f[C]
const xmas = new Date(\[dq]2000-12-25\[dq]);
const year = xmas.getYear(); // returns 100
\f[R]
.fi
.SS Years below 1900
.PP
The second statement assigns the value -100 to the variable
\f[V]year\f[R].
.IP
.nf
\f[C]
const xmas = new Date(\[dq]1800-12-25\[dq]);
const year = xmas.getYear(); // returns -100
\f[R]
.fi
.SS Setting and getting a year between 1900 and 1999
.PP
The third statement assigns the value 95 to the variable \f[V]year\f[R],
representing the year 1995.
.IP
.nf
\f[C]
const xmas = new Date(\[dq]2015-12-25\[dq]);
xmas.setYear(95);
const year = xmas.getYear(); // returns 95
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[V]Date.prototype.getYear\f[R] in
\f[V]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-date)
.IP \[bu] 2
\f[V]Date.prototype.getFullYear()\f[R]
.IP \[bu] 2
\f[V]Date.prototype.getUTCFullYear()\f[R]
.IP \[bu] 2
\f[V]Date.prototype.setYear()\f[R]
