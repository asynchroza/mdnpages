.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "WritableStreamDefaultWriter.abort" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WritableStreamDefaultWriter.abort \- WritableStreamDefaultWriter:
abort() method
.SH SYNOPSIS
The \f[B]\f[CB]abort()\f[B]\f[R] method of the
\f[CR]WritableStreamDefaultWriter\f[R] interface aborts the stream,
signaling that the producer can no longer successfully write to the
stream and it is to be immediately moved to an error state, with any
queued writes discarded.
.PP
If the writer is active, the \f[CR]abort()\f[R] method behaves the same
as that for the associated stream (\f[CR]WritableStream.abort()\f[R]).
If not, it returns a rejected promise.
.SH SYNTAX
.IP
.EX
abort()
abort(reason)
.EE
.SS Parameters
.TP
\f[B]reason\f[R] \f[I](optional)\f[R]
A string representing a human\-readable reason for the abort.
.SS Return value
A \f[CR]Promise\f[R], which fulfills with the value given in the
\f[CR]reason\f[R] parameter.
.SS Exceptions
.TP
\f[B]TypeError\f[R]
The stream you are trying to abort is not a \f[CR]WritableStream\f[R],
or it is locked.
.SH EXAMPLES
.IP
.EX
const writableStream = new WritableStream(
  {
    write(chunk) {
      // ...
    },
    close() {
      // ...
    },
    abort(err) {
      // ...
    },
  },
  queuingStrategy,
);

// ...

const writer = writableStream.getWriter();

// ...

// abort the stream when desired
writer.abort.then((reason) => {
  console.log(reason);
});
.EE
