.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "AggregateError" "JS" "June 2, 2023" "JavaScript" "JavaScript Reference Manual"
.hy
.SH NAME
.PP
AggregateError - AggregateError
.SH SYNOPSIS
.PP
The \f[B]\f[VB]AggregateError\f[B]\f[R] object represents an error when
several errors need to be wrapped in a single error.
It is thrown when multiple errors need to be reported by an operation,
for example by \f[V]Promise.any()\f[R], when all promises passed to it
reject.
.PP
\f[V]AggregateError\f[R] is a subclass of \f[V]Error\f[R].
.SH CONSTRUCTOR
.TP
\f[B]AggregateError()\f[R]
Creates a new \f[V]AggregateError\f[R] object.
.SH INSTANCE PROPERTIES
.PP
\f[I]Also inherits instance properties from its parent
\f[VI]Error\f[I]\f[R].
.PP
These properties are defined on \f[V]AggregateError.prototype\f[R] and
shared by all \f[V]AggregateError\f[R] instances.
.TP
\f[B]AggregateError.prototype.constructor\f[R]
The constructor function that created the instance object.
For \f[V]AggregateError\f[R] instances, the initial value is the
\f[V]AggregateError\f[R] constructor.
.TP
\f[B]AggregateError.prototype.name\f[R]
Represents the name for the type of error.
For \f[V]AggregateError.prototype.name\f[R], the initial value is
\f[V]\[dq]AggregateError\[dq]\f[R].
.PP
These properties are own properties of each \f[V]AggregateError\f[R]
instance.
.TP
\f[B]errors\f[R]
An array representing the errors that were aggregated.
.SH INSTANCE METHODS
.PP
\f[I]Inherits instance methods from its parent \f[VI]Error\f[I]\f[R].
.SH EXAMPLES
.SS Catching an AggregateError
.IP
.nf
\f[C]
Promise.any([Promise.reject(new Error(\[dq]some error\[dq]))]).catch((e) => {
  console.log(e instanceof AggregateError); // true
  console.log(e.message); // \[dq]All Promises rejected\[dq]
  console.log(e.name); // \[dq]AggregateError\[dq]
  console.log(e.errors); // [ Error: \[dq]some error\[dq] ]
});
\f[R]
.fi
.SS Creating an AggregateError
.IP
.nf
\f[C]
try {
  throw new AggregateError([new Error(\[dq]some error\[dq])], \[dq]Hello\[dq]);
} catch (e) {
  console.log(e instanceof AggregateError); // true
  console.log(e.message); // \[dq]Hello\[dq]
  console.log(e.name); // \[dq]AggregateError\[dq]
  console.log(e.errors); // [ Error: \[dq]some error\[dq] ]
}
\f[R]
.fi
.SH SEE ALSO
.IP \[bu] 2
Polyfill of \f[V]AggregateError\f[R] in
\f[V]core-js\f[R] (https://github.com/zloirock/core-js#ecmascript-promise)
.IP \[bu] 2
\f[V]Error\f[R]
.IP \[bu] 2
\f[V]Promise.any\f[R]
