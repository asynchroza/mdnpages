.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "Attr.name" "JS" "May 22, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Attr.name \- Attr: name property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]name\f[B]\f[R] property of the \f[CR]Attr\f[R]
interface returns the \f[I]qualified name\f[R] of an attribute, that is
the name of the attribute, with the namespace prefix, if any, in front
of it.
For example, if the local name is \f[CR]lang\f[R] and the namespace
prefix is \f[CR]xml\f[R], the returned qualified name is
\f[CR]xml:lang\f[R].
.PP
The qualified name is always in lower case, whatever case at the
attribute creation.
.SH VALUE
A string representing the attribute\[cq]s qualified name.
.SH EXAMPLE
The following example displays the qualified name of the first attribute
of the two first elements, when we click on the appropriate button.
.SS HTML
.IP
.EX
<svg xml:lang=\[dq]en\-US\[dq] class=\[dq]struct\[dq] height=\[dq]1\[dq] width=\[dq]1\[dq]>Click me</svg>
<label xml:lang=\[dq]en\-US\[dq] class=\[dq]struct\[dq]></label>

<p>
  <button>Show value for &lt;svg&gt;</button>
  <button>Show value for &lt;label&gt;</button>
</p>

<p>
  Qualified name of the attribute <code>xml:lang</code>:
  <output id=\[dq]result\[dq]>None.</output>
</p>
.EE
.SS JavaScript
.IP
.EX
const elements = document.querySelectorAll(\[dq].struct\[dq]);
const buttons = document.querySelectorAll(\[dq]button\[dq]);
const outputEl = document.querySelector(\[dq]#result\[dq]);

let i = 0;
for (const button of buttons) {
  const element = elements[i];
  button.addEventListener(\[dq]click\[dq], () => {
    const attribute = element.attributes[0];
    outputEl.value = attribute.name;
  });
  i++;
}
.EE
.SH SEE ALSO
.IP \[bu] 2
The properties \f[CR]Attr.localName\f[R], returning the local part of
the qualified name of the attribute, and \f[CR]Attr.prefix\f[R], the
namespace prefix.
.IP \[bu] 2
The \f[CR]Element.tagName()\f[R] property, returning the qualified name
of an \f[CR]Element\f[R].
