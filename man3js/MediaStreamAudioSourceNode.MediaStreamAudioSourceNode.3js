.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "MediaStreamAudioSourceNode.MediaStreamAudioSourceNode" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MediaStreamAudioSourceNode.MediaStreamAudioSourceNode \-
MediaStreamAudioSourceNode: MediaStreamAudioSourceNode() constructor
.SH SYNOPSIS
The Web Audio API\[cq]s
\f[B]\f[CB]MediaStreamAudioSourceNode()\f[B]\f[R] constructor creates
and returns a new \f[CR]MediaStreamAudioSourceNode\f[R] object which
uses the first audio track of a given \f[CR]MediaStream\f[R] as its
source.
.RS
.PP
\f[B]Note:\f[R] Another way to create a
\f[CR]MediaStreamAudioSourceNode\f[R] is to call the
\f[CR]AudioContext.createMediaStreamSource()\f[R] method, specifying the
stream from which you want to obtain audio.
.RE
.SH SYNTAX
.IP
.EX
new MediaStreamAudioSourceNode(context, options)
.EE
.SS Parameters
.TP
\f[B]context\f[R]
An \f[CR]AudioContext\f[R] representing the audio context you want the
node to be associated with.
.TP
\f[B]options\f[R]
An object defining the properties you want the
\f[CR]MediaStreamAudioSourceNode\f[R] to have:
.RS
.TP
\f[B]mediaStream\f[R]
A required property which specifies the \f[CR]MediaStream\f[R] from
which to obtain audio for the node.
.RE
.SS Return value
A new \f[CR]MediaStreamAudioSourceNode\f[R] object representing the
audio node whose media is obtained from the specified source stream.
.SS Exceptions
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
Thrown if the specified \f[CR]MediaStream\f[R] does not contain any
audio tracks.
.SH EXAMPLES
This example uses \f[CR]getUserMedia()\f[R] to obtain access to the
user\[cq]s camera, then creates a new
\f[CR]MediaStreamAudioSourceNode\f[R] from its \f[CR]MediaStream\f[R].
.IP
.EX
// define variables
const audioCtx = new (window.AudioContext || window.webkitAudioContext)();

// getUserMedia block \- grab stream
// put it into a MediaStreamAudioSourceNode
if (navigator.mediaDevices.getUserMedia) {
  navigator.mediaDevices
    .getUserMedia(
      // constraints: audio and video for this app
      {
        audio: true,
        video: false,
      },
    )
    .then((stream) => {
      const options = {
        mediaStream: stream,
      };

      const source = new MediaStreamAudioSourceNode(audioCtx, options);
      source.connect(audioCtx.destination);
    })
    .catch((err) => {
      console.error(\[ga]The following gUM error occurred: ${err}\[ga]);
    });
} else {
  console.log(\[dq]new getUserMedia not supported on your browser!\[dq]);
}
.EE
