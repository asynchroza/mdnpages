.\" Automatically generated by Pandoc 3.1.11
.\"
.TH "IDBRequest.transaction" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
IDBRequest.transaction \- IDBRequest: transaction property
.SH SYNOPSIS
The \f[B]\f[CB]transaction\f[B]\f[R] read\-only property of the
IDBRequest interface returns the transaction for the request, that is,
the transaction the request is being made inside.
.PP
This property can be \f[CR]null\f[R] for requests not made within
transactions, such as for requests returned from
\f[CR]IDBFactory.open\f[R] \[em] in this case you\[cq]re just connecting
to a database, so there is no transaction to return.
If a version upgrade is needed when opening a database then during the
\f[CR]upgradeneeded\f[R] event handler the
\f[B]\f[CB]transaction\f[B]\f[R] property will be an
\f[CR]IDBTransaction\f[R] with \f[CR]mode\f[R] equal to
\f[CR]\[dq]versionchange\[dq]\f[R], and can be used to access existing
object stores and indexes, or abort the upgrade.
Following the upgrade, the \f[B]\f[CB]transaction\f[B]\f[R] property
will again be \f[CR]null\f[R].
.PP
This feature is available in Web Workers.
.SH VALUE
An \f[CR]IDBTransaction\f[R].
.SH EXAMPLES
The following example requests a given record title,
\f[CR]onsuccess\f[R] gets the associated record from the
\f[CR]IDBObjectStore\f[R] (made available as
\f[CR]objectStoreTitleRequest.result\f[R]), updates one property of the
record, and then puts the updated record back into the object store in
another request.
The source of the requests is logged to the developer console \[em] both
originate from the same transaction.
For a full working example, see our \c
.UR https://github.com/mdn/dom-examples/tree/main/to-do-notifications
To\-do Notifications
.UE \c
\ app (\c
.UR https://mdn.github.io/dom-examples/to-do-notifications/
View the example live
.UE \c
).
.IP
.EX
const title = \[dq]Walk dog\[dq];

// Open up a transaction as usual
const objectStore = db
  .transaction([\[dq]toDoList\[dq]], \[dq]readwrite\[dq])
  .objectStore(\[dq]toDoList\[dq]);

// Get the to\-do list object that has this title as it\[aq]s title
const objectStoreTitleRequest = objectStore.get(title);

objectStoreTitleRequest.onsuccess = () => {
  // Grab the data object returned as the result
  const data = objectStoreTitleRequest.result;

  // Update the notified value in the object to \[dq]yes\[dq]
  data.notified = \[dq]yes\[dq];

  // Create another request that inserts the item back
  // into the database
  const updateTitleRequest = objectStore.put(data);

  // Log the transaction that originated this request
  console.log(
    \[ga]The transaction that originated this request is ${updateTitleRequest.transaction}\[ga],
  );

  // When this new request succeeds, run the displayData()
  // function again to update the display
  updateTitleRequest.onsuccess = () => {
    displayData();
  };
};
.EE
.PP
This example shows how a the \f[B]\f[CB]transaction\f[B]\f[R] property
can be used during a version upgrade to access existing object stores:
.IP
.EX
const openRequest = indexedDB.open(\[dq]db\[dq], 2);
console.log(openRequest.transaction); // Will log \[dq]null\[dq].

openRequest.onupgradeneeded = (event) => {
  console.log(openRequest.transaction.mode); // Will log \[dq]versionchange\[dq].
  const db = openRequest.result;
  if (event.oldVersion < 1) {
    // New database, create \[dq]books\[dq] object store.
    db.createObjectStore(\[dq]books\[dq]);
  }
  if (event.oldVersion < 2) {
    // Upgrading from v1 database: add index on \[dq]title\[dq] to \[dq]books\[dq] store.
    const bookStore = openRequest.transaction.objectStore(\[dq]books\[dq]);
    bookStore.createIndex(\[dq]by_title\[dq], \[dq]title\[dq]);
  }
};

openRequest.onsuccess = () => {
  console.log(openRequest.transaction); // Will log \[dq]null\[dq].
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Using IndexedDB
.IP \[bu] 2
Starting transactions: \f[CR]IDBDatabase\f[R]
.IP \[bu] 2
Using transactions: \f[CR]IDBTransaction\f[R]
.IP \[bu] 2
Setting a range of keys: \f[CR]IDBKeyRange\f[R]
.IP \[bu] 2
Retrieving and making changes to your data: \f[CR]IDBObjectStore\f[R]
.IP \[bu] 2
Using cursors: \f[CR]IDBCursor\f[R]
.IP \[bu] 2
Reference example: \c
.UR https://github.com/mdn/dom-examples/tree/main/to-do-notifications
To\-do Notifications
.UE \c
\ (\c
.UR https://mdn.github.io/dom-examples/to-do-notifications/
View the example live
.UE \c
).
